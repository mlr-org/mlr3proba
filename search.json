[{"path":"https://mlr3proba.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Raphael Sonabend. Author. Franz Kiraly. Author. Michel Lang. Author. Nurul Ain Toha. Contributor. Andreas Bender. Contributor. John Zobolas. Maintainer, author. Lukas Burk. Contributor. Philip Studener. Author. Maximilian Muecke. Contributor. Lee Xingzhuo Li. Contributor. Markus Goeswein. Contributor.","code":""},{"path":"https://mlr3proba.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonabend R, Király FJ, Bender , Bischl B, Lang M (2021). “mlr3proba: R Package Machine Learning Survival Analysis.” Bioinformatics. ISSN 1367-4803, doi:10.1093/bioinformatics/btab039.","code":"@Article{,   title = {mlr3proba: An R Package for Machine Learning in Survival Analysis},   author = {Raphael Sonabend and Franz J Király and Andreas Bender and Bernd Bischl and Michel Lang},   journal = {Bioinformatics},   month = {02},   year = {2021},   doi = {10.1093/bioinformatics/btab039},   issn = {1367-4803}, }"},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"mlr3proba","dir":"","previous_headings":"","what":"Probabilistic Supervised Learning for mlr3","title":"Probabilistic Supervised Learning for mlr3","text":"Probabilistic Supervised Learning mlr3 (website).","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"what-is-mlr3proba","dir":"","previous_headings":"","what":"What is mlr3proba?","title":"Probabilistic Supervised Learning for mlr3","text":"mlr3proba machine learning toolkit making probabilistic predictions within mlr3 ecosystem. currently supports following tasks: Predictive survival analysis: survival analysis individual hazards survival distributions can queried. Unconditional distribution estimation: main returned output distribution. Sub-cases density estimation unconditional survival estimation. Probabilistic supervised regression: Supervised regression predictive distribution return type. survival analysis part considered mature state, rest early stages development.","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"feature-overview","dir":"","previous_headings":"","what":"Feature Overview","title":"Probabilistic Supervised Learning for mlr3","text":"Key features mlr3proba focus survival analysis : Task frameworks survival analysis (TaskSurv) comprehensive selection survival learners (mostly via mlr3extralearners) unified $train()/$predict() model interface probabilistic predictive model (frequentist, Bayesian, Deep Learning, ) Use distr6 interface survival probability distribution prediction comprehensive selection measures evaluating performance survival learners, respect prognostic index (continuous rank) prediction, probabilistic (distribution) prediction Basic ML pipeline building integrated mlr3pipelines (e.g. transform prediction types) Reduction strategies transform survival classification/regression problems","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Probabilistic Supervised Learning for mlr3","text":"mlr3proba currently CRAN. Please follow one two following methods install :","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"r-universe","dir":"","previous_headings":"Installation","what":"R-universe","title":"Probabilistic Supervised Learning for mlr3","text":"Install latest released version:","code":"install.packages(\"mlr3proba\", repos = \"https://mlr-org.r-universe.dev\")"},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"github","dir":"","previous_headings":"Installation","what":"GitHub","title":"Probabilistic Supervised Learning for mlr3","text":"Install latest development version:","code":"remotes::install_github(\"mlr-org/mlr3proba\")"},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"learners","dir":"","previous_headings":"","what":"Learners","title":"Probabilistic Supervised Learning for mlr3","text":"Core learners implemented mlr3proba include Kaplan-Meier Estimator, Cox Proportional Hazards model Survival Tree learner. mlr3extralearners interfaced several advanced ML survival learners. Use interactive search table search available survival learners see learner status page live status.","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"measures","dir":"","previous_headings":"","what":"Measures","title":"Probabilistic Supervised Learning for mlr3","text":"density estimation probabilistic regression log-loss currently implemented. survival analysis, see full list . commonly used measures following:","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"bugs-questions-feedback","dir":"","previous_headings":"","what":"Bugs, Questions, Feedback","title":"Probabilistic Supervised Learning for mlr3","text":"mlr3proba free open source software project encourages participation feedback. issues, questions, suggestions feedback, please hesitate open “issue” GitHub page! case problems / bugs, often helpful provide “minimum working example” using reprex showcases behavior.","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"similar-projects","dir":"","previous_headings":"","what":"Similar Projects","title":"Probabilistic Supervised Learning for mlr3","text":"Predecessors package previous instances survival modelling mlr. skpro package python/scikit-learn ecosystem follows similar interface probabilistic supervised learning architectural predecessor. Several packages exist allow probabilistic predictive modelling Bayesian model specific general interface, rjags stan. implementation survival models measures, central package survival. appear package provides architectural framework distribution/density estimation, see list review density estimation packages R.","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Probabilistic Supervised Learning for mlr3","text":"Several people contributed building mlr3proba. Firstly, thanks Michel Lang writing mlr3survival. Several learners measures implemented mlr3proba, well prediction, task, measure surv objects, written initially mlr3survival absorbed mlr3proba. Secondly thanks Franz Kiraly major contributions towards design proba-specific parts package, including compositors predict types. Also mathematical contributions towards scoring rules implemented package. Finally thanks Bernd Bischl rest mlr core team building mlr3 many conversations design mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/index.html","id":"citing-mlr3proba","dir":"","previous_headings":"","what":"Citing mlr3proba","title":"Probabilistic Supervised Learning for mlr3","text":"use mlr3proba, please cite Bioinformatics article:","code":"@Article{,   title = {mlr3proba: An R Package for Machine Learning in Survival Analysis},   author = {Raphael Sonabend and Franz J Király and Andreas Bender and Bernd Bischl and Michel Lang},   journal = {Bioinformatics},   month = {02},   year = {2021},   doi = {10.1093/bioinformatics/btab039},   issn = {1367-4803}, }"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Learner — LearnerDens","title":"Density Learner — LearnerDens","text":"Learner specializes Learner density estimation problems: task_type set \"dens\" Creates Predictions class PredictionDens. Possible values predict_types : \"pdf\": Evaluates estimated probability density function value test set. \"cdf\": Evaluates estimated cumulative distribution function value test set.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Density Learner — LearnerDens","text":"mlr3::Learner -> LearnerDens","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Density Learner — LearnerDens","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Density Learner — LearnerDens","text":"LearnerDens$new() LearnerDens$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Density Learner — LearnerDens","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Learner — LearnerDens","text":"","code":"LearnerDens$new(   id,   param_set = ps(),   predict_types = \"cdf\",   feature_types = character(),   properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Learner — LearnerDens","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Density Learner — LearnerDens","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Learner — LearnerDens","text":"","code":"LearnerDens$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Learner — LearnerDens","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerDens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Learner — LearnerDens","text":"","code":"library(mlr3) # get all density learners from mlr_learners: lrns = mlr_learners$mget(mlr_learners$keys(\"^dens\")) names(lrns) #> [1] \"dens.hist\" \"dens.kde\"   # get a specific learner from mlr_learners: mlr_learners$get(\"dens.hist\") #> <LearnerDensHistogram:dens.hist>: Histogram Density Estimator #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3proba, distr6 #> * Predict Types:  [pdf], cdf, distr #> * Feature Types: integer, numeric #> * Properties: - lrn(\"dens.hist\") #> <LearnerDensHistogram:dens.hist>: Histogram Density Estimator #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3proba, distr6 #> * Predict Types:  [pdf], cdf, distr #> * Feature Types: integer, numeric #> * Properties: -"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Learner — LearnerSurv","title":"Survival Learner — LearnerSurv","text":"Learner specializes Learner survival problems: task_type set \"surv\" Creates Predictions class PredictionSurv. Possible values predict_types : \"distr\": Predicts probability distribution observation test set, uses distr6. \"lp\": Predicts linear predictor observation test set. \"crank\": Predicts continuous ranking observation test set. \"response\": Predicts survival time observation test set.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Survival Learner — LearnerSurv","text":"mlr3::Learner -> LearnerSurv","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Survival Learner — LearnerSurv","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Survival Learner — LearnerSurv","text":"LearnerSurv$new() LearnerSurv$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Survival Learner — LearnerSurv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Learner — LearnerSurv","text":"","code":"LearnerSurv$new(   id,   param_set = ps(),   predict_types = \"distr\",   feature_types = character(),   properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Learner — LearnerSurv","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Survival Learner — LearnerSurv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Learner — LearnerSurv","text":"","code":"LearnerSurv$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Learner — LearnerSurv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/LearnerSurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Learner — LearnerSurv","text":"","code":"library(mlr3) # get all survival learners from mlr_learners: lrns = mlr_learners$mget(mlr_learners$keys(\"^surv\")) names(lrns) #> [1] \"surv.coxph\"  \"surv.kaplan\" \"surv.rpart\"   # get a specific learner from mlr_learners: mlr_learners$get(\"surv.coxph\") #> <LearnerSurvCoxPH:surv.coxph>: Cox Proportional Hazards #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3proba, survival, distr6 #> * Predict Types:  [crank], distr, lp #> * Feature Types: logical, integer, numeric, factor #> * Properties: weights lrn(\"surv.coxph\") #> <LearnerSurvCoxPH:surv.coxph>: Cox Proportional Hazards #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3proba, survival, distr6 #> * Predict Types:  [crank], distr, lp #> * Feature Types: logical, integer, numeric, factor #> * Properties: weights"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Measure — MeasureDens","title":"Density Measure — MeasureDens","text":"measure specializes Measure survival problems. task_type set \"dens\". Possible values predict_type \"pdf\" \"cdf\". Predefined measures can found dictionary mlr3::mlr_measures.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Density Measure — MeasureDens","text":"mlr3::Measure -> MeasureDens","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Density Measure — MeasureDens","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Density Measure — MeasureDens","text":"MeasureDens$new() MeasureDens$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Density Measure — MeasureDens","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Measure — MeasureDens","text":"","code":"MeasureDens$new(   id,   param_set = ps(),   range,   minimize = NA,   aggregator = NULL,   properties = character(),   predict_type = \"pdf\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Measure — MeasureDens","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. aggregator (function(x)) Function aggregate individual performance scores x x numeric vector. NULL, defaults mean(). properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Density Measure — MeasureDens","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Measure — MeasureDens","text":"","code":"MeasureDens$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureDens.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Measure — MeasureDens","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Measure — MeasureSurv","title":"Survival Measure — MeasureSurv","text":"measure specializes Measure survival problems. task_type set \"surv\". Possible values predict_type \"distr\", \"lp\", \"crank\", \"response\". Predefined measures can found dictionary mlr3::mlr_measures.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Survival Measure — MeasureSurv","text":"mlr3::Measure -> MeasureSurv","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Survival Measure — MeasureSurv","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Survival Measure — MeasureSurv","text":"MeasureSurv$new() MeasureSurv$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Survival Measure — MeasureSurv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Measure — MeasureSurv","text":"","code":"MeasureSurv$new(   id,   param_set = ps(),   range,   minimize = NA,   average = \"macro\",   aggregator = NULL,   obs_loss = NULL,   properties = character(),   predict_type = \"distr\",   predict_sets = \"test\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_,   trafo = NULL )"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Measure — MeasureSurv","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function(x)) Function aggregate individual performance scores x x numeric vector. NULL, defaults mean(). obs_loss (function NULL) observation-wise loss function, e.g. zero-one classification error. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\"}. multiple sets provided, first combined single prediction object. Default \"test\". task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). trafo (list() NULL) optional list two elements, containing transformation \"fn\" derivative \"deriv\". transformation function function applied aggregating pointwise losses, .e. requires $obs_loss present. example sqrt RMSE (regression).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Survival Measure — MeasureSurv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Measure — MeasureSurv","text":"","code":"MeasureSurv$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Measure — MeasureSurv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for survAUC Measures — MeasureSurvAUC","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"abstract class constructed directly.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvAUC","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"MeasureSurvAUC$new() MeasureSurvAUC$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"","code":"MeasureSurvAUC$new(   id,   properties = character(),   label = NA_character_,   man = NA_character_,   param_set = ps() )"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"id (character(1)) Identifier new instance. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). param_set (paradox::ParamSet) Set hyperparameters.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"","code":"MeasureSurvAUC$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/MeasureSurvAUC.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for survAUC Measures — MeasureSurvAUC","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Object for Density — PredictionDens","title":"Prediction Object for Density — PredictionDens","text":"object stores predictions returned learner class LearnerDens. task_type set \"dens\".","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Prediction Object for Density — PredictionDens","text":"mlr3::Prediction -> PredictionDens","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Prediction Object for Density — PredictionDens","text":"pdf (numeric()) Access stored predicted probability density function. cdf (numeric()) Access stored predicted cumulative distribution function. distr (Distribution) Access stored estimated distribution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Prediction Object for Density — PredictionDens","text":"mlr3::Prediction$filter() mlr3::Prediction$format() mlr3::Prediction$help() mlr3::Prediction$obs_loss() mlr3::Prediction$print() mlr3::Prediction$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Prediction Object for Density — PredictionDens","text":"PredictionDens$new() PredictionDens$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Prediction Object for Density — PredictionDens","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Density — PredictionDens","text":"","code":"PredictionDens$new(   task = NULL,   row_ids = task$row_ids,   pdf = NULL,   cdf = NULL,   distr = NULL,   check = TRUE )"},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Density — PredictionDens","text":"task (TaskSurv) Task, used extract defaults row_ids. row_ids (integer()) Row ids predicted observations, .e. row ids test set. pdf (numeric()) Numeric vector estimated probability density function, evaluated values test set. One element observation test set. cdf (numeric()) Numeric vector estimated cumulative distribution function, evaluated values test set. One element observation test set. distr (Distribution)Distribution distr6. distribution pdf cdf derived. check (logical(1)) TRUE, performs argument checks predict type conversions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Prediction Object for Density — PredictionDens","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Density — PredictionDens","text":"","code":"PredictionDens$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Density — PredictionDens","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionDens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Object for Density — PredictionDens","text":"","code":"library(mlr3) task = mlr_tasks$get(\"precip\") learner = mlr_learners$get(\"dens.hist\") p = learner$train(task)$predict(task) head(as.data.table(p)) #>    row_ids         pdf       cdf #>      <int>       <num>     <num> #> 1:       1 0.001428571 0.9957143 #> 2:       2 0.007142857 0.9478571 #> 3:       3 0.005714286 0.0400000 #> 4:       4 0.030000000 0.8692857 #> 5:       5 0.012857143 0.1085714 #> 6:       6 0.012857143 0.1497143 #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        distrlist> #> 1: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #> 2: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #> 3: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #> 4: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #> 5: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #> 6: <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1"},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Object for Survival — PredictionSurv","title":"Prediction Object for Survival — PredictionSurv","text":"object stores predictions returned learner class LearnerSurv. task_type set \"surv\". accessing survival hazard functions, well complex methods PredictionSurv object, see public methods distr6::ExoticStatistics() example .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Prediction Object for Survival — PredictionSurv","text":"mlr3::Prediction -> PredictionSurv","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Prediction Object for Survival — PredictionSurv","text":"truth (Surv) True (observed) outcome. crank (numeric()) Access stored predicted continuous ranking. distr (distr6::Matdist|distr6::Arrdist|distr6::VectorDistribution) Convert stored survival array matrix survival distribution. lp (numeric()) Access stored predicted linear predictor. response (numeric()) Access stored predicted survival time.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Prediction Object for Survival — PredictionSurv","text":"mlr3::Prediction$filter() mlr3::Prediction$format() mlr3::Prediction$help() mlr3::Prediction$obs_loss() mlr3::Prediction$print() mlr3::Prediction$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Prediction Object for Survival — PredictionSurv","text":"PredictionSurv$new() PredictionSurv$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Prediction Object for Survival — PredictionSurv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Survival — PredictionSurv","text":"","code":"PredictionSurv$new(   task = NULL,   row_ids = task$row_ids,   truth = task$truth(),   crank = NULL,   distr = NULL,   lp = NULL,   response = NULL,   check = TRUE )"},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Survival — PredictionSurv","text":"task (TaskSurv) Task, used extract defaults row_ids truth. row_ids (integer()) Row ids predicted observations, .e. row ids test set. truth (survival::Surv()) True (observed) response. crank (numeric()) Numeric vector predicted continuous rankings (relative risks). One element observation test set. pair continuous ranks, higher rank indicates observation likely experience event. distr (matrix()|[distr6::Arrdist]|[distr6::Matdist]|[distr6::VectorDistribution]) Either matrix predicted survival probabilities, distr6::VectorDistribution, distr6::Matdist distr6::Arrdist. matrix/array column names must given correspond survival times. Rows matrix correspond individual predictions. advised first column time 0 entries 1 last entries 0. VectorDistribution distribution vector correspond predicted survival distribution. lp (numeric()) Numeric vector linear predictor scores. One element observation test set. \\(lp = X\\beta\\) \\(X\\) matrix covariates \\(\\beta\\) vector estimated coefficients. response (numeric()) Numeric vector predicted survival times. One element observation test set. check (logical(1)) TRUE, performs argument checks predict type conversions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Object for Survival — PredictionSurv","text":"Upon initialization, distr input Distribution, try coerce either survival matrix survival array store $data$distr slot internal use. stored $data$distr Distribution object, active field $distr (external user API) returns without modification. Otherwise, $data$distr survival matrix array, $distr constructs distribution $data$distr object, Matdist Arrdist respectively. Note survival 3d array stored $data$distr, $distr field returns Arrdist initialized .curve = 0.5 default (.e. median curve). means measures require distr prediction like MeasureSurvGraf, MeasureSurvRCLL, etc. use median survival probabilities. Note possible manually change .curve construction predicted distribution advise may lead inconsistent results.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Prediction Object for Survival — PredictionSurv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Survival — PredictionSurv","text":"","code":"PredictionSurv$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Survival — PredictionSurv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/PredictionSurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Object for Survival — PredictionSurv","text":"","code":"library(mlr3) task = tsk(\"rats\") learner = lrn(\"surv.kaplan\") p = learner$train(task, row_ids = 1:26)$predict(task, row_ids = 27:30) head(as.data.table(p)) #>    row_ids  time status     crank     distr #>      <int> <num> <lgcl>     <num>    <list> #> 1:      27   104  FALSE 0.4706486 <list[1]> #> 2:      28   104  FALSE 0.4706486 <list[1]> #> 3:      29   104  FALSE 0.4706486 <list[1]> #> 4:      30    98  FALSE 0.4706486 <list[1]>  p$distr # distr6::Matdist class (test obs x time points) #> Matdist(4x12)   # survival probabilities of the 4 test rats at two time points p$distr$survival(c(20, 100)) #>          [,1]      [,2]      [,3]      [,4] #> 20  1.0000000 1.0000000 1.0000000 1.0000000 #> 100 0.9615385 0.9615385 0.9615385 0.9615385"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Task — TaskDens","title":"Density Task — TaskDens","text":"task specializes TaskUnsupervised density estimation problems. data backend numeric vector one column matrix-like object. task_type set \"density\". Predefined tasks stored dictionary mlr_tasks.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Density Task — TaskDens","text":"mlr3::Task -> mlr3::TaskUnsupervised -> TaskDens","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Density Task — TaskDens","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Density Task — TaskDens","text":"TaskDens$new() TaskDens$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Density Task — TaskDens","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Task — TaskDens","text":"","code":"TaskDens$new(id, backend, label = NA_character_)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Task — TaskDens","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, matrix-like object, numeric vector. weights used two columns expected, otherwise one column. weight column must clearly specified (via [Task]$col_roles) learners break. label (character(1)) Label new instance.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Density Task — TaskDens","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Task — TaskDens","text":"","code":"TaskDens$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Task — TaskDens","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskDens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Task — TaskDens","text":"","code":"task = TaskDens$new(\"precip\", backend = precip) task$task_type #> [1] \"dens\""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Task — TaskSurv","title":"Survival Task — TaskSurv","text":"task specializes mlr3::Task mlr3::TaskSupervised possibly-censored survival problems. target comprised survival times event indicator. Predefined tasks stored mlr3::mlr_tasks. task_type set \"surv\".","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival Task — TaskSurv","text":"Grambsch, Patricia, Therneau, Terry (1994). “Proportional hazards tests diagnostics based weighted residuals.” Biometrika, 81(3), 515–526. doi:10.1093/biomet/81.3.515 , https://doi.org/10.1093/biomet/81.3.515.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Survival Task — TaskSurv","text":"mlr3::Task -> mlr3::TaskSupervised -> TaskSurv","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Survival Task — TaskSurv","text":"censtype (character(1)) Returns type censoring, one \"right\", \"left\", \"counting\", \"interval\", \"interval2\" \"mstate\". Currently, \"right\"-censoring type fully supported, rest experimental API change future.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Survival Task — TaskSurv","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Survival Task — TaskSurv","text":"TaskSurv$new() TaskSurv$truth() TaskSurv$formula() TaskSurv$times() TaskSurv$status() TaskSurv$unique_times() TaskSurv$unique_event_times() TaskSurv$risk_set() TaskSurv$kaplan() TaskSurv$reverse() TaskSurv$cens_prop() TaskSurv$admin_cens_prop() TaskSurv$dep_cens_prop() TaskSurv$prop_haz() TaskSurv$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Survival Task — TaskSurv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$new(   id,   backend,   time = \"time\",   event = \"event\",   time2,   type = c(\"right\", \"left\", \"interval\", \"counting\", \"interval2\", \"mstate\"),   label = NA_character_ )"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. time (character(1)) Name column event time data right censored, otherwise starting time interval censored. event (character(1)) Name column giving event indicator. data right censored \"0\"/FALSE means alive (event), \"1\"/TRUE means dead (event). type \"interval\" \"0\" means right censored, \"1\" means dead (event), \"2\" means left censored, \"3\" means interval censored. type \"interval2\" event ignored. time2 (character(1)) Name column ending time interval interval censored counting process data, otherwise ignored. type (character(1)) Name column giving type censoring. Default 'right' censoring. label (character(1)) Label new instance.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival Task — TaskSurv","text":"Depending censoring type (\"type\"), output survival task's \"$target_names\" character() vector values names columns given initialization arguments. Specifically, output follows (specified order): type = \"right\", \"left\" \"mstate\": (\"time\", \"event\") type = \"interval\" \"counting\": (\"time\", \"time2\", \"event\") type = \"interval2\": (\"time\", \"time2)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-truth-","dir":"Reference","previous_headings":"","what":"Method truth()","title":"Survival Task — TaskSurv","text":"True response specified row_ids. survival outcome using Surv format depends censoring type. Defaults rows role \"use\".","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$truth(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"survival::Surv().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-formula-","dir":"Reference","previous_headings":"","what":"Method formula()","title":"Survival Task — TaskSurv","text":"Creates formula survival models survival::Surv() LHS (left hand side).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$formula(rhs = NULL, reverse = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rhs NULL, RHS (right hand side) \".\", otherwise RHS \"rhs\". reverse TRUE formula calculated 1 - status.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"stats::formula().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-times-","dir":"Reference","previous_headings":"","what":"Method times()","title":"Survival Task — TaskSurv","text":"Returns (unsorted) outcome times.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$times(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-status-","dir":"Reference","previous_headings":"","what":"Method status()","title":"Survival Task — TaskSurv","text":"Returns event indicator (aka censoring/survival indicator). censtype \"right\" \"left\" 1 event 0 censored. censtype \"mstate\" 0 censored values different events. censtype \"interval\" 0 right-censored, 1 event, 2 left-censored, 3 interval-censored. See survival::Surv().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$status(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"integer()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-unique-times-","dir":"Reference","previous_headings":"","what":"Method unique_times()","title":"Survival Task — TaskSurv","text":"Returns sorted unique outcome times \"right\", \"left\" \"mstate\" types censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$unique_times(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-unique-event-times-","dir":"Reference","previous_headings":"","what":"Method unique_event_times()","title":"Survival Task — TaskSurv","text":"Returns sorted unique event (failure) outcome times \"right\", \"left\" \"mstate\" types censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$unique_event_times(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-risk-set-","dir":"Reference","previous_headings":"","what":"Method risk_set()","title":"Survival Task — TaskSurv","text":"Returns row_ids observations risk (dead censored events case multi-state tasks) specified time. designed \"right\", \"left\" \"mstate\" types censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$risk_set(time = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"time (numeric(1))  Time return risk set , NULL returns row_ids.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"integer()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-kaplan-","dir":"Reference","previous_headings":"","what":"Method kaplan()","title":"Survival Task — TaskSurv","text":"Calls survival::survfit() calculate Kaplan-Meier estimator.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$kaplan(strata = NULL, rows = NULL, reverse = FALSE, ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"strata (character()) Stratification variables use. rows (integer()) Subset row indices. reverse (logical()) TRUE calculates Kaplan-Meier censoring distribution (1-status). Default FALSE. ... () Additional arguments passed survival::survfit.formula().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"survival::survfit.object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-reverse-","dir":"Reference","previous_headings":"","what":"Method reverse()","title":"Survival Task — TaskSurv","text":"Returns task status variable reversed, .e., 1 - status. designed \"left\" \"right\" censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$reverse()"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-cens-prop-","dir":"Reference","previous_headings":"","what":"Method cens_prop()","title":"Survival Task — TaskSurv","text":"Returns proportion censoring survival task. default, returned observations, otherwise specified ones (rows). designed \"right\" \"left\" censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$cens_prop(rows = NULL)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-admin-cens-prop-","dir":"Reference","previous_headings":"","what":"Method admin_cens_prop()","title":"Survival Task — TaskSurv","text":"Returns estimated proportion administratively censored observations (.e. censored user-specified time point). main assumption administratively censored dataset, maximum censoring time likely close maximum event time expect higher proportion censored subjects near study end date. designed \"right\" \"left\" censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$admin_cens_prop(rows = NULL, admin_time = NULL, quantile_prob = 0.99)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices. admin_time (numeric(1))  Administrative censoring time (case known priori). quantile_prob (numeric(1))  Quantile probability value calculate cutoff time administrative censoring. Ignored, admin_time given. default, quantile_prob equal \\(0.99\\), translates time point close maximum outcome time dataset. lower value result earlier time point therefore relaxed definition (.e. higher proportion) administrative censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-dep-cens-prop-","dir":"Reference","previous_headings":"","what":"Method dep_cens_prop()","title":"Survival Task — TaskSurv","text":"Returns proportion covariates (task features) found significantly associated censoring. function fits logistic regression model via glm censoring status response using features predictors. covariate significantly associated censoring status, suggests censoring may informative (dependent) rather random (non-informative). methodology suitable low-dimensional datasets number features relatively small compared number observations. designed \"right\" \"left\" censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$dep_cens_prop(rows = NULL, method = \"holm\", sign_level = 0.05)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"rows (integer()) Row indices. method (character(1))  Method adjust p-values multiple comparisons, see p.adjust.methods. Default \"holm\". sign_level (numeric(1))  Significance level coefficient's p-value logistic regression model. Default \\(0.05\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-prop-haz-","dir":"Reference","previous_headings":"","what":"Method prop_haz()","title":"Survival Task — TaskSurv","text":"Checks data satisfy proportional hazards (PH) assumption using Grambsch-Therneau test, Grambsch (1994). Uses cox.zph. method used low-dimensional datasets number features relatively small compared number observations. designed \"right\" \"left\" censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$prop_haz()"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Survival Task — TaskSurv","text":"numeric()  errors, p-value global chi-square test. p-value \\(< 0.05\\) indication possible PH violation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Survival Task — TaskSurv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task — TaskSurv","text":"","code":"TaskSurv$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task — TaskSurv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/TaskSurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Task — TaskSurv","text":"","code":"library(mlr3) task = tsk(\"lung\")  # meta data task$target_names # target is always (time, status) for right-censoring tasks #> [1] \"time\"   \"status\" task$feature_names #> [1] \"age\"       \"meal.cal\"  \"pat.karno\" \"ph.ecog\"   \"ph.karno\"  \"sex\"       #> [7] \"wt.loss\"   task$formula() #> Surv(time, status, type = \"right\") ~ . #> <environment: namespace:survival>  # survival data task$truth() # survival::Surv() object #>   [1]  455   210  1022+  310   361   218   166   170   567   613   707    61  #>  [13]  301    81   371   520   574   118   390    12   473    26   107    53  #>  [25]  814   965+   93   731   460   153   433   583    95   303   519   643  #>  [37]  765    53   246   689     5   687   345   444   223    60   163    65  #>  [49]  821+  428   230   840+  305    11   226   426   705   363   176   791  #>  [61]   95   196+  167   806+  284   641   147   740+  163   655    88   245  #>  [73]   30   477   559+  450   156   529+  429   351    15   181   283    13  #>  [85]  212   524   288   363   199   550    54   558   207    92    60   551+ #>  [97]  293   353   267   511+  457   337   201   404+  222    62   458+  353  #> [109]  163    31   229   156   329   291   179   376+  384+  268   292+  142  #> [121]  413+  266+  320   181   285   301+  348   197   382+  303+  296+  180  #> [133]  145   269+  300+  284+  292+  332+  285   259+  110   286   270   225+ #> [145]  269   225+  243+  276+  135    79    59   240+  202+  235+  239   252+ #> [157]  221+  185+  222+  183   211+  175+  197+  203+  191+  105+  174+  177+ task$times() # (unsorted) times #>   [1]  455  210 1022  310  361  218  166  170  567  613  707   61  301   81  371 #>  [16]  520  574  118  390   12  473   26  107   53  814  965   93  731  460  153 #>  [31]  433  583   95  303  519  643  765   53  246  689    5  687  345  444  223 #>  [46]   60  163   65  821  428  230  840  305   11  226  426  705  363  176  791 #>  [61]   95  196  167  806  284  641  147  740  163  655   88  245   30  477  559 #>  [76]  450  156  529  429  351   15  181  283   13  212  524  288  363  199  550 #>  [91]   54  558  207   92   60  551  293  353  267  511  457  337  201  404  222 #> [106]   62  458  353  163   31  229  156  329  291  179  376  384  268  292  142 #> [121]  413  266  320  181  285  301  348  197  382  303  296  180  145  269  300 #> [136]  284  292  332  285  259  110  286  270  225  269  225  243  276  135   79 #> [151]   59  240  202  235  239  252  221  185  222  183  211  175  197  203  191 #> [166]  105  174  177 task$status() # event indicators (1 = death, 0 = censored) #>   [1] 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 #>  [75] 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 #> [112] 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 0 1 1 1 0 1 0 0 0 #> [149] 1 1 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 task$unique_times() # sorted unique times #>   [1]    5   11   12   13   15   26   30   31   53   54   59   60   61   62   65 #>  [16]   79   81   88   92   93   95  105  107  110  118  135  142  145  147  153 #>  [31]  156  163  166  167  170  174  175  176  177  179  180  181  183  185  191 #>  [46]  196  197  199  201  202  203  207  210  211  212  218  221  222  223  225 #>  [61]  226  229  230  235  239  240  243  245  246  252  259  266  267  268  269 #>  [76]  270  276  283  284  285  286  288  291  292  293  296  300  301  303  305 #>  [91]  310  320  329  332  337  345  348  351  353  361  363  371  376  382  384 #> [106]  390  404  413  426  428  429  433  444  450  455  457  458  460  473  477 #> [121]  511  519  520  524  529  550  551  558  559  567  574  583  613  641  643 #> [136]  655  687  689  705  707  731  740  765  791  806  814  821  840  965 1022 task$unique_event_times() # sorted unique event times #>   [1]   5  11  12  13  15  26  30  31  53  54  59  60  61  62  65  79  81  88 #>  [19]  92  93  95 107 110 118 135 142 145 147 153 156 163 166 167 170 176 179 #>  [37] 180 181 183 197 199 201 207 210 212 218 222 223 226 229 230 239 245 246 #>  [55] 267 268 269 270 283 284 285 286 288 291 293 301 303 305 310 320 329 337 #>  [73] 345 348 351 353 361 363 371 390 426 428 429 433 444 450 455 457 460 473 #>  [91] 477 519 520 524 550 558 567 574 583 613 641 643 655 687 689 705 707 731 #> [109] 765 791 814 task$risk_set(time = 700) # observation ids that are not censored or dead at t = 700 #>  [1]  3 11 25 26 28 37 49 52 57 60 64 68 task$kaplan(strata = \"sex\") # stratified Kaplan-Meier #> Call: survfit(formula = f, data = data) #>  #>         n events median 0.95LCL 0.95UCL #> sex=f  64     38    426     345     641 #> sex=m 104     83    284     229     353 task$kaplan(reverse = TRUE) # Kaplan-Meier of the censoring distribution #> Call: survfit(formula = f, data = data) #>  #>        n events median 0.95LCL 0.95UCL #> [1,] 168     47    740     511      NA  # proportion of censored observations across all dataset task$cens_prop() #> [1] 0.2797619 # proportion of censored observations at or after the 95% time quantile task$admin_cens_prop(quantile_prob = 0.95) #> [1] 0.1276596 # proportion of variables that are significantly associated with the # censoring status via a logistic regression model task$dep_cens_prop() # 0 indicates independent censoring #> [1] 0 # data barely satisfies proportional hazards assumption (p > 0.05) task$prop_haz() #> [1] 0.0608371 # veteran data is definitely non-PH (p << 0.05) tsk(\"veteran\")$prop_haz() #> [1] 3.225193e-05"},{"path":"https://mlr3proba.mlr-org.com/reference/actg.html","id":null,"dir":"Reference","previous_headings":"","what":"ACTG 320 Clinical Trial Dataset — actg","title":"ACTG 320 Clinical Trial Dataset — actg","text":"actg dataset Hosmer et al. (2008)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/actg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ACTG 320 Clinical Trial Dataset — actg","text":"","code":"actg"},{"path":"https://mlr3proba.mlr-org.com/reference/actg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ACTG 320 Clinical Trial Dataset — actg","text":"id Identification Code time Time AIDS diagnosis death (days). censor Event indicator. 1 = AIDS defining diagnosis, 0 = Otherwise. time_d Time death (days) censor_d Event indicator death (). 1 = Death, 0 = Otherwise. tx Treatment indicator. 1 = Treatment includes IDV, 0 = Control group. txgrp Treatment group indicator. 1 = ZDV + 3TC. 2 = ZDV + 3TC + IDV. 3 = d4T + 3TC. 4 = d4T + 3TC + IDV. strat2 CD4 stratum screening. 0 = CD4 <= 50. 1 = CD4 > 50. sexF 0 = Male. 1 = Female. raceth Race/Ethnicity. 1 = White Non-Hispanic. 2 = Black Non-Hispanic. 3 = Hispanic. 4 = Asian, Pacific Islander. 5 = American Indian, Alaskan Native. 6 = /unknown. ivdrug IV drug use history. 1 = Never. 2 = Currently. 3 = Previously. hemophil Hemophiliac. 1 = Yes. 0 = . karnof Karnofsky Performance Scale. 100 = Normal; complaint evidence disease. 90 = Normal activity possible; minor signs/symptoms disease. 80 = Normal activity effort; signs/symptoms disease. 70 = Cares self; normal activity/active work possible. cd4 Baseline CD4 count (Cells/Milliliter). priorzdv Months prior ZDV use (months). age Age Enrollment (years).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/actg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ACTG 320 Clinical Trial Dataset — actg","text":"https://onlinelibrary.wiley.com/doi/book/10.1002/9780470258019","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/actg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ACTG 320 Clinical Trial Dataset — actg","text":"Hosmer, D.W. Lemeshow, S. May, S. (2008) Applied Survival Analysis: Regression Modeling Time Event Data: Second Edition, John Wiley Sons Inc., New York, NY","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Density Prediction — as_prediction_dens","title":"Convert to a Density Prediction — as_prediction_dens","text":"Convert object PredictionDens.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Density Prediction — as_prediction_dens","text":"","code":"as_prediction_dens(x, ...)  # S3 method for class 'PredictionDens' as_prediction_dens(x, ...)  # S3 method for class 'data.frame' as_prediction_dens(x, ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Density Prediction — as_prediction_dens","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Density Prediction — as_prediction_dens","text":"PredictionDens.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Density Prediction — as_prediction_dens","text":"","code":"library(mlr3) task = tsk(\"precip\") learner = lrn(\"dens.hist\") learner$train(task) p = learner$predict(task)  # convert to a data.table tab = as.data.table(p)  # convert back to a Prediction as_prediction_dens(tab) #> <PredictionDens> for 70 observations: #>  row_ids         pdf       cdf #>        1 0.001428571 0.9957143 #>        2 0.007142857 0.9478571 #>        3 0.005714286 0.0400000 #>      ---         ---       --- #>       68 0.007142857 0.2507143 #>       69 0.012857143 0.1162857 #>       70 0.007142857 0.9800000 #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      distr #>  <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #>  <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #>  <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variatesistribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #>  <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1 #>  <Distribution>\\n  Public:\\n    alias: \\n    cdf: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    clone: function (deep = FALSE) \\n    confidence: function (alpha = 0.95, sides = \"both\", median = FALSE) \\n    correlation: function () \\n    decorators: active binding\\n    description: NULL\\n    dmax: active binding\\n    dmin: active binding\\n    getParameterValue: function (id, error = \"warn\") \\n    inf: active binding\\n    initialize: function (name = NULL, short_name = NULL, type, support = NULL, \\n    iqr: function () \\n    kurtosisType: active binding\\n    liesInSupport: function (x, all = TRUE, bound = FALSE) \\n    liesInType: function (x, all = TRUE, bound = FALSE) \\n    median: function (na.rm = NULL, ...) \\n    name: Histogram Estimator\\n    parameters: function (id = NULL) \\n    pdf: function (..., log = FALSE, simplify = TRUE, data = NULL) \\n    prec: function () \\n    print: function (n = 2, ...) \\n    properties: active binding\\n    quantile: function (..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE, \\n    rand: function (n, simplify = TRUE) \\n    setParameterValue: function (..., lst = list(...), error = \"warn\", resolveConflicts = FALSE) \\n    short_name: Histogram\\n    skewnessType: active binding\\n    stdev: function () \\n    strprint: function (n = 2) \\n    summary: function (full = TRUE, ...) \\n    sup: active binding\\n    support: active binding\\n    symmetry: active binding\\n    traits: active binding\\n    type: active binding\\n    valueSupport: active binding\\n    variateForm: active binding\\n    workingSupport: function () \\n  Private:\\n    .cdf: function (x, self = <environment>, ...) \\n    .decorators: NULL\\n    .isCdf: 1\\n    .isPdf: 1\\n    .isQuantile: 0\\n    .isRand: 0\\n    .log: FALSE\\n    .parameters: NULL\\n    .pdf: function (x, self = <environment>, ...) \\n    .properties: list\\n    .traits: list\\n    .updateDecorators: function (decs) \\n    .variates: 1"},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Survival Prediction — as_prediction_surv","title":"Convert to a Survival Prediction — as_prediction_surv","text":"Convert object PredictionSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Survival Prediction — as_prediction_surv","text":"","code":"as_prediction_surv(x, ...)  # S3 method for class 'PredictionSurv' as_prediction_surv(x, ...)  # S3 method for class 'data.frame' as_prediction_surv(x, ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Survival Prediction — as_prediction_surv","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Survival Prediction — as_prediction_surv","text":"PredictionSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_prediction_surv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Survival Prediction — as_prediction_surv","text":"","code":"library(mlr3) task = tsk(\"rats\") learner = lrn(\"surv.coxph\") learner$train(task) p = learner$predict(task)  # convert to a data.table tab = as.data.table(p)  # convert back to a Prediction as_prediction_surv(tab) #> <PredictionSurv> for 300 observations: #>  row_ids time status      crank         lp     distr #>        1  101  FALSE  0.3862629  0.3862629 <list[1]> #>        2   49   TRUE -0.4190332 -0.4190332 <list[1]> #>        3  104  FALSE -0.4190332 -0.4190332 <list[1]> #>      ---  ---    ---        ---        ---       --- #>      298   92  FALSE -1.8607954 -1.8607954 <list[1]> #>      299  104  FALSE -2.6660915 -2.6660915 <list[1]> #>      300  102  FALSE -2.6660915 -2.6660915 <list[1]>"},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Density Task — as_task_dens","title":"Convert to a Density Task — as_task_dens","text":"Convert object density task (TaskDens).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Density Task — as_task_dens","text":"","code":"as_task_dens(x, ...)  # S3 method for class 'TaskDens' as_task_dens(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_dens(x, id = deparse(substitute(x)), ...)  # S3 method for class 'DataBackend' as_task_dens(x, id = deparse(substitute(x)), ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Density Task — as_task_dens","text":"x () Object convert, e.g. data.frame(). ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. id (character(1)) Id new task. Defaults (deparsed substituted) name x.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Survival Task — as_task_surv","title":"Convert to a Survival Task — as_task_surv","text":"Convert object survival task (TaskSurv).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Survival Task — as_task_surv","text":"","code":"as_task_surv(x, ...)  # S3 method for class 'TaskSurv' as_task_surv(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_surv(   x,   time = \"time\",   event = \"event\",   time2,   type = \"right\",   id = deparse(substitute(x)),   ... )  # S3 method for class 'DataBackend' as_task_surv(   x,   time = \"time\",   event = \"event\",   time2,   type = \"right\",   id = deparse(substitute(x)),   ... )  # S3 method for class 'formula' as_task_surv(x, data, id = deparse(substitute(data)), ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/as_task_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Survival Task — as_task_surv","text":"x () Object convert, e.g. data.frame(). ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. time (character(1)) Name column event time data right censored, otherwise starting time interval censored. event (character(1)) Name column giving event indicator. data right censored \"0\"/FALSE means alive (event), \"1\"/TRUE means dead (event). type \"interval\" \"0\" means right censored, \"1\" means dead (event), \"2\" means left censored, \"3\" means interval censored. type \"interval2\" event ignored. time2 (character(1)) Name column ending time interval interval censored counting process data, otherwise ignored. type (character(1)) Name column giving type censoring. Default 'right' censoring. id (character(1)) Id new task. Defaults (deparsed substituted) name x. data (data.frame()) Data frame containing columns referenced formula x.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert survival object — assert_surv","title":"Assert survival object — assert_surv","text":"Asserts x survival::Surv object added checks","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert survival object — assert_surv","text":"","code":"assert_surv(   x,   len = NULL,   any.missing = TRUE,   null.ok = FALSE,   .var.name = vname(x) )"},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert survival object — assert_surv","text":"x Object check len non-NULL checks object length len .missing FALSE errors NAs x null.ok FALSE errors x NULL, otherwise passes .var.name Optional variable name return assertion fails","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert survival matrix — assert_surv_matrix","title":"Assert survival matrix — assert_surv_matrix","text":"Asserts given input matrix (discrete) survival probabilities matrix using Rcpp code. following checks performed: values probabilities, .e. \\(S(t) \\[0,1]\\) Column names correspond time-points therefore coercable numeric increasing Per row/observation, survival probabilities decrease non-strictly, .e. \\(S(t) \\ge S(t+1)\\)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert survival matrix — assert_surv_matrix","text":"","code":"assert_surv_matrix(x)"},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert survival matrix — assert_surv_matrix","text":"x (matrix()) matrix (predicted) survival probabilities. Rows observations, columns (increasing) time points.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert survival matrix — assert_surv_matrix","text":"assertion fails error occurs, otherwise NULL returned invisibly.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/assert_surv_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert survival matrix — assert_surv_matrix","text":"","code":"x = matrix(data = c(1,0.6,0.4,0.8,0.8,0.7), nrow = 2, ncol = 3, byrow = TRUE) colnames(x) = c(12, 34, 42) x #>       12  34  42 #> [1,] 1.0 0.6 0.4 #> [2,] 0.8 0.8 0.7  assert_surv_matrix(x)"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for PredictionSurv — autoplot.PredictionSurv","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"Generates plots PredictionSurv, depending argument type: \"calib\" (default): Calibration plot comparing average predicted survival distribution (Pred) Kaplan-Meier prediction (KM), comparison stratified crank lp. \"dcalib\": Distribution calibration plot. model considered D-calibrated , given quantile p, proportion observed outcomes occurring predicted time quantile, matches p. example, 50% events occur predicted median survival time (.e. time corresponding predicted survival probability 0.5). Good calibration means resulting line plot lie close straight line \\(y = x\\). Note impute NAs predicted quantile function maximum observed outcome time. \"scalib\": Smoothed calibration plot specific time point. range probabilities event occurrence \\([0,1]\\) (x-axis), y-axis smoothed observed proportions calculated using hazard regression (model fitted using predicted probabilities). See Austin et al. (2020) MeasureSurvICI details. Good calibration means resulting line plot lie close straight line \\(y = x\\). \"isd\": Plot predicted individual survival distributions (survival curves) test set's observations.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"","code":"# S3 method for class 'PredictionSurv' autoplot(   object,   type = \"calib\",   times = NULL,   row_ids = NULL,   cuts = 11L,   time = NULL,   theme = theme_minimal(),   ... )"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"object (PredictionSurv). type (character(1))  Type plot, see Description. times (numeric())  type = \"calib\" times values x-axis plot . NULL, use time points predicted survival matrix (object$data$distr). row_ids (integer())  type = \"isd\", specific observation ids (test set) draw predicted survival distributions. cuts (integer(1))  type = \"calib\", number cuts \\((0,1)\\), define bins x-axis D-calibration plot. Default 11. time (numeric(1))  type = \"scalib\", specific time point smoothed calibration plot constructed. theme (ggplot2::theme()) ggplot2::theme_minimal() applied default plots. ... (): Additional arguments, currently unused.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"object must distr prediction, plot types use predicted survival distribution/matrix. type = \"dcalib\" drawn bit differently Haider et al. (2020), though still conceptually .","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"Haider, Humza, Hoehn, Bret, Davis, Sarah, Greiner, Russell (2020). “Effective Ways Build Evaluate Individual Survival Distributions.” Journal Machine Learning Research, 21(85), 1–63. https://jmlr.org/papers/v21/18-772.html. Austin, C. P, Harrell, E. F, van Klaveren, David (2020). “Graphical calibration curves integrated calibration index (ICI) survival models.” Statistics Medicine, 39(21), 2714. ISSN 10970258, doi:10.1002/SIM.8570 , https://pmc.ncbi.nlm.nih.gov/articles/PMC7497089/.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.PredictionSurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for PredictionSurv — autoplot.PredictionSurv","text":"","code":"library(mlr3) library(mlr3proba) library(mlr3viz)  learner = lrn(\"surv.coxph\") task = tsk(\"gbcs\") p = learner$train(task, row_ids = 1:600)$predict(task, row_ids = 601:686)  # calibration by comparison of average prediction to Kaplan-Meier autoplot(p)   # same as above, use specific time points autoplot(p, times = seq(1, 1000, 5))   # Distribution-calibration (D-Calibration) autoplot(p, type = \"dcalib\")   # Smoothed Calibration (S-Calibration) autoplot(p, type = \"scalib\", time = 1750) #> Loading required namespace: polspline   # Predicted survival curves (all observations) autoplot(p, type = \"isd\")   # Predicted survival curves (specific observations) autoplot(p, type = \"isd\", row_ids = c(601, 651, 686))"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for Density Tasks — autoplot.TaskDens","title":"Plot for Density Tasks — autoplot.TaskDens","text":"Generates plots TaskDens.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskDens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for Density Tasks — autoplot.TaskDens","text":"","code":"# S3 method for class 'TaskDens' autoplot(object, type = \"dens\", theme = theme_minimal(), ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for Density Tasks — autoplot.TaskDens","text":"object (TaskDens). type (character(1)): Type plot. Available choices: \"dens\": histogram density estimator (default) ggplot2::geom_histogram(). \"freq\": histogram frequency plot ggplot2::geom_histogram(). \"overlay\": histogram overlaid density plot ggplot2::geom_histogram() ggplot2::geom_density(). \"freqpoly\": frequency polygon plot ggplot2::geom_freqpoly. theme (ggplot2::theme()) ggplot2::theme_minimal() applied default plots. ... (): Additional arguments, possibly passed underlying plot functions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskDens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot for Density Tasks — autoplot.TaskDens","text":"ggplot2::ggplot() object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskDens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for Density Tasks — autoplot.TaskDens","text":"","code":"library(mlr3) library(mlr3proba) library(mlr3viz) library(ggplot2) task = tsk(\"precip\") task$head() #>    precip #>     <num> #> 1:   67.0 #> 2:   54.7 #> 3:    7.0 #> 4:   48.5 #> 5:   14.0 #> 6:   17.2  autoplot(task, bins = 15)  autoplot(task, type = \"freq\", bins = 15)  autoplot(task, type = \"overlay\", bins = 15)  autoplot(task, type = \"freqpoly\", bins = 15)"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskSurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for Survival Tasks — autoplot.TaskSurv","title":"Plot for Survival Tasks — autoplot.TaskSurv","text":"Generates plots TaskSurv, depending argument type: \"target\": Calls GGally::ggsurv() survival::survfit() object. computes Kaplan-Meier survival curve observations task. \"duo\": Passes data additional arguments GGally::ggduo(). columnsX target, columnsY features. \"pairs\": Passes data additional arguments GGally::ggpairs(). Color set target column.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskSurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for Survival Tasks — autoplot.TaskSurv","text":"","code":"# S3 method for class 'TaskSurv' autoplot(   object,   type = \"target\",   theme = theme_minimal(),   reverse = FALSE,   ... )"},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskSurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for Survival Tasks — autoplot.TaskSurv","text":"object (TaskSurv). type (character(1)): Type plot. See available choices. theme (ggplot2::theme()) ggplot2::theme_minimal() applied default plots. reverse (logical()) TRUE type = 'target', plots Kaplan-Meier curve censoring distribution. Default FALSE. ... (): Additional arguments. rhs passed $formula TaskSurv stratification type \"target\". arguments passed respective underlying plot functions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskSurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot for Survival Tasks — autoplot.TaskSurv","text":"ggplot2::ggplot() object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/autoplot.TaskSurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for Survival Tasks — autoplot.TaskSurv","text":"","code":"library(mlr3) library(mlr3viz) library(mlr3proba) library(ggplot2)  task = tsk(\"lung\") task$head() #>     time status   age meal.cal pat.karno ph.ecog ph.karno    sex wt.loss #>    <int>  <int> <int>    <int>     <int>   <int>    <int> <fctr>   <int> #> 1:   455      1    68     1225        90       0       90      m      15 #> 2:   210      1    57     1150        60       1       90      m      11 #> 3:  1022      0    74      513        80       1       50      m       0 #> 4:   310      1    68      384        60       2       70      f      10 #> 5:   361      1    71      538        80       2       60      f       1 #> 6:   218      1    53      825        80       1       70      m      16  autoplot(task) # KM  autoplot(task) # KM of the censoring distribution  autoplot(task, rhs = \"sex\")  autoplot(task, type = \"duo\") #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01"},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival probabilities using Breslow's estimator — breslow","title":"Survival probabilities using Breslow's estimator — breslow","text":"Helper function compose survival distribution (cumulative hazard) relative risk predictions (linear predictors, lp) proportional hazards model (e.g. Cox-type model).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival probabilities using Breslow's estimator — breslow","text":"","code":"breslow(times, status, lp_train, lp_test, eval_times = NULL, type = \"surv\")"},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival probabilities using Breslow's estimator — breslow","text":"times (numeric()) Vector times (train set). status (numeric()) Vector status indicators (train set). observation train set, 0 (alive/censored) 1 (dead). lp_train (numeric()) Vector linear predictors (train set). relative score predictions (\\(lp = \\hat{\\beta}X_{train}\\)) proportional hazards model train set. lp_test (numeric()) Vector linear predictors (test set). relative score predictions (\\(lp = \\hat{\\beta}X_{test}\\)) proportional hazards model test set. eval_times (numeric()) Vector times compute survival probabilities. NULL (default), unique sorted times train set used, otherwise unique sorted eval_times. type (character()) Type prediction estimates. Default surv returns survival probabilities \\(S_i(t)\\) test observation \\(\\). cumhaz, function returns estimated cumulative hazards \\(H_i(t)\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival probabilities using Breslow's estimator — breslow","text":"matrix (obs x times). Number columns equal eval_times number rows equal number test observations (.e. length lp_test vector). Depending type argument, matrix can either survival probabilities (0-1) cumulative hazard estimates (0-Inf).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival probabilities using Breslow's estimator — breslow","text":"estimate survival probability individual \\(\\) (test set), time point \\(t\\) follows: $$S_i(t) = e^{-H_i(t)} = e^{-\\hat{H}_0(t) \\times e^{lp_i}}$$ : \\(H_i(t)\\) cumulative hazard function individual \\(\\) \\(\\hat{H}_0(t)\\) Breslow's estimator cumulative baseline hazard. Estimation requires training set's times status well risk predictions (lp_train). \\(lp_i\\) risk prediction (linear predictor) individual \\(\\) test set. Breslow's approach uses non-parametric maximum likelihood estimation cumulative baseline hazard function: $$\\hat{H}_0(t) = \\sum_{=1}^n{\\frac{(T_i \\le t)\\delta_i} {\\sum\\nolimits_{j \\R_i}e^{lp_j}}}$$ : \\(t\\) vector time points (unique sorted, train set) \\(n\\) number events (train set) \\(T\\) vector event times (train set) \\(\\delta\\) status indicator (1 = event 0 = censored) \\(R_i\\) risk set (number individuals risk just event \\(\\)) \\(lp_j\\) risk prediction (linear predictor) individual \\(j\\) (part risk set \\(R_i\\)) train set. employ constant interpolation estimate cumulative baseline hazards, extending observed unique event times specified evaluation times (eval_times). values falling outside range estimated times assigned follows: $$\\hat{H}_0(eval\\_times < min(t)) = 0$$ $$\\hat{H}_0(eval\\_times > max(t)) = \\hat{H}_0(max(t))$$ Note rare event lp predictions Inf -Inf, resulting cumulative hazard values become NaN, substitute Inf (corresponding survival probabilities take value \\(0\\)). similar implementations, see gbm::basehaz.gbm(), C060::basesurv() xgboost.surv::sgb_bhaz().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival probabilities using Breslow's estimator — breslow","text":"Breslow N (1972). “Discussion 'Regression Models Life-Tables' D.R. Cox.” Journal Royal Statistical Society: Series B, 34(2), 216-217. Lin, Y. D (2007). “Breslow estimator.” Lifetime Data Analysis, 13(4), 471-480. doi:10.1007/s10985-007-9048-y .","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/breslow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival probabilities using Breslow's estimator — breslow","text":"","code":"task = tsk(\"rats\") part = partition(task, ratio = 0.8)  learner = lrn(\"surv.coxph\") learner$train(task, part$train) p_train = learner$predict(task, part$train) p_test = learner$predict(task, part$test)  surv = breslow(times = task$times(part$train), status = task$status(part$train),                lp_train = p_train$lp, lp_test = p_test$lp) head(surv) #>      23 32        34        39        40        45        49        51 #> [1,]  1  1 0.9934716 0.9869102 0.9803373 0.9737725 0.9671354 0.9671354 #> [2,]  1  1 0.9964608 0.9928931 0.9893081 0.9857165 0.9820740 0.9820740 #> [3,]  1  1 0.9964608 0.9928931 0.9893081 0.9857165 0.9820740 0.9820740 #> [4,]  1  1 0.9963199 0.9926106 0.9888840 0.9851510 0.9813657 0.9813657 #> [5,]  1  1 0.9962474 0.9924652 0.9886657 0.9848599 0.9810011 0.9810011 #> [6,]  1  1 0.9996114 0.9992184 0.9988222 0.9984240 0.9980189 0.9980189 #>             53        54        55        62        63        64        65 #> [1,] 0.9671354 0.9603968 0.9536580 0.9536580 0.9536580 0.9467642 0.9467642 #> [2,] 0.9820740 0.9783641 0.9746422 0.9746422 0.9746422 0.9708221 0.9708221 #> [3,] 0.9820740 0.9783641 0.9746422 0.9746422 0.9746422 0.9708221 0.9708221 #> [4,] 0.9813657 0.9775108 0.9736441 0.9736441 0.9736441 0.9696760 0.9696760 #> [5,] 0.9810011 0.9770718 0.9731306 0.9731306 0.9731306 0.9690864 0.9690864 #> [6,] 0.9980189 0.9976049 0.9971881 0.9971881 0.9971881 0.9967589 0.9967589 #>             66        67        68        69        70        71        72 #> [1,] 0.9398717 0.9329700 0.9260397 0.9260397 0.9190422 0.9120344 0.9050772 #> [2,] 0.9669900 0.9631398 0.9592604 0.9592604 0.9553300 0.9513799 0.9474447 #> [3,] 0.9669900 0.9631398 0.9592604 0.9592604 0.9553300 0.9513799 0.9474447 #> [4,] 0.9656960 0.9616979 0.9576702 0.9576702 0.9535900 0.9494903 0.9454065 #> [5,] 0.9650305 0.9609564 0.9568525 0.9568525 0.9526955 0.9485188 0.9443588 #> [6,] 0.9963268 0.9958911 0.9954505 0.9954505 0.9950026 0.9945507 0.9940989 #>             73        74        75        76        77        78        79 #> [1,] 0.8910119 0.8910119 0.8836515 0.8836515 0.8760279 0.8681794 0.8603226 #> [2,] 0.9394461 0.9394461 0.9352373 0.9352373 0.9308610 0.9263373 0.9217901 #> [3,] 0.9394461 0.9394461 0.9352373 0.9352373 0.9308610 0.9263373 0.9217901 #> [4,] 0.9371081 0.9371081 0.9327427 0.9327427 0.9282044 0.9235142 0.9188004 #> [5,] 0.9359067 0.9359067 0.9314610 0.9314610 0.9268396 0.9220640 0.9172650 #> [6,] 0.9931753 0.9931753 0.9926865 0.9926865 0.9921762 0.9916465 0.9911116 #>             80        81        82        83        84        85        86 #> [1,] 0.8523362 0.8361399 0.8361399 0.8361399 0.8275937 0.8275937 0.8189025 #> [2,] 0.9171483 0.9076730 0.9076730 0.9076730 0.9026393 0.9026393 0.8974958 #> [3,] 0.9171483 0.9076730 0.9076730 0.9076730 0.9026393 0.9026393 0.8974958 #> [4,] 0.9139896 0.9041724 0.9041724 0.9041724 0.8989586 0.8989586 0.8936323 #> [5,] 0.9123676 0.9023753 0.9023753 0.9023753 0.8970694 0.8970694 0.8916497 #> [6,] 0.9905632 0.9894361 0.9894361 0.9894361 0.9888331 0.9888331 0.9882137 #>             87        88        89        90        91        92        93 #> [1,] 0.8189025 0.8098767 0.8005769 0.8005769 0.8005769 0.7901305 0.7901305 #> [2,] 0.8974958 0.8921276 0.8865677 0.8865677 0.8865677 0.8802868 0.8802868 #> [3,] 0.8974958 0.8921276 0.8865677 0.8865677 0.8865677 0.8802868 0.8802868 #> [4,] 0.8936323 0.8880747 0.8823199 0.8823199 0.8823199 0.8758207 0.8758207 #> [5,] 0.8916497 0.8859952 0.8801409 0.8801409 0.8801409 0.8735301 0.8735301 #> [6,] 0.9882137 0.9875640 0.9868874 0.9868874 0.9868874 0.9861185 0.9861185 #>             94        95        96        97        98        99       100 #> [1,] 0.7793025 0.7793025 0.7565837 0.7565837 0.7565837 0.7565837 0.7565837 #> [2,] 0.8737361 0.8737361 0.8598546 0.8598546 0.8598546 0.8598546 0.8598546 #> [3,] 0.8737361 0.8737361 0.8598546 0.8598546 0.8598546 0.8598546 0.8598546 #> [4,] 0.8690443 0.8690443 0.8546912 0.8546912 0.8546912 0.8546912 0.8546912 #> [5,] 0.8666385 0.8666385 0.8520448 0.8520448 0.8520448 0.8520448 0.8520448 #> [6,] 0.9853113 0.9853113 0.9835828 0.9835828 0.9835828 0.9835828 0.9835828 #>            101       102       103       104 #> [1,] 0.7445360 0.7205855 0.6836699 0.6702931 #> [2,] 0.8524158 0.8374616 0.8139581 0.8052983 #> [3,] 0.8524158 0.8374616 0.8139581 0.8052983 #> [4,] 0.8470034 0.8315568 0.8073018 0.7983721 #> [5,] 0.8442301 0.8285329 0.8038960 0.7948293 #> [6,] 0.9826463 0.9807415 0.9776856 0.9765398"},{"path":"https://mlr3proba.mlr-org.com/reference/cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Cpp functions — cpp","title":"Cpp functions — cpp","text":"Exported internal cpp functions developers","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/dot-surv_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Survival Predict Types — .surv_return","title":"Get Survival Predict Types — .surv_return","text":"Internal helper function easily return correct survival predict types.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/dot-surv_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Survival Predict Types — .surv_return","text":"","code":".surv_return(   times = NULL,   surv = NULL,   crank = NULL,   lp = NULL,   response = NULL,   which.curve = NULL )"},{"path":"https://mlr3proba.mlr-org.com/reference/dot-surv_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Survival Predict Types — .surv_return","text":"times (numeric())  Vector survival times. surv (matrix()|array()) Matrix array predicted survival probabilities, rows (1st dimension) observations, columns (2nd dimension) times case array one dimension. Number columns equal length times. case numeric() vector provided, converted single row (one observation) matrix. crank (numeric()) Relative risk/continuous ranking. Higher value associated higher risk. NULL either set -response available lp available (assumes lp prediction comes PH type model - case AFT model user provide -lp). case neither response lp provided, crank calculated sum cumulative hazard function (expected mortality) derived predicted survival function (surv), see get_mortality. case surv 3d array, use .curve parameter decide survival matrix (index 3rd dimension) chosen calculation crank. lp (numeric()) Predicted linear predictor, used impute crank NULL. response (numeric()) Predicted survival time, passed function without modification. .curve curve (3rd dimension) crank calculated , case surv array? (0,1) taken quantile curves otherwise greater 1 taken  curve index. can also 'mean' survival probabilities averaged across 3rd dimension. Default value (NULL) 0.5 quantile median across 3rd dimension survival array.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/dot-surv_return.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Survival Predict Types — .surv_return","text":"Sonabend, Raphael, Bender, Andreas, Vollmer, Sebastian (2022). “Avoiding C-hacking evaluating survival distribution predictions discrimination measures.” Bioinformatics. ISSN 1367-4803, doi:10.1093/BIOINFORMATICS/BTAC451 , https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac451/6640155.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/dot-surv_return.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Survival Predict Types — .surv_return","text":"","code":"n = 10 # number of observations k = 50 # time points  # Create the matrix with random values between 0 and 1 mat = matrix(runif(n * k, min = 0, max = 1), nrow = n, ncol = k)  # transform it to a survival matrix surv_mat = t(apply(mat, 1L, function(row) sort(row, decreasing = TRUE)))  # crank is expected mortality, distr is the survival matrix .surv_return(times = 1:k, surv = surv_mat) #> $distr #>               1         2         3         4         5         6         7 #>  [1,] 0.9815318 0.9302815 0.8863742 0.8507213 0.8386300 0.8161877 0.7837275 #>  [2,] 0.9702623 0.9643438 0.9585035 0.9349984 0.9215262 0.8856603 0.8813129 #>  [3,] 0.9473172 0.9245204 0.9202758 0.8880152 0.8597222 0.8517432 0.8279213 #>  [4,] 0.9832669 0.9826687 0.9456878 0.9278701 0.9272818 0.9262833 0.9064917 #>  [5,] 0.9736226 0.9485788 0.9479137 0.9465589 0.9225646 0.8979025 0.8963784 #>  [6,] 0.9790338 0.9697919 0.9624163 0.9587279 0.9558663 0.9355171 0.9166539 #>  [7,] 0.9364289 0.9217996 0.9038774 0.8843691 0.8541737 0.8509742 0.8415589 #>  [8,] 0.9845655 0.9815419 0.9708450 0.9061868 0.8809331 0.8560810 0.8249154 #>  [9,] 0.9931181 0.9835116 0.9662092 0.9579191 0.9239608 0.8524324 0.7953777 #> [10,] 0.9821906 0.9758180 0.9671391 0.9661595 0.9513960 0.9302335 0.9183378 #>               8         9        10        11        12        13        14 #>  [1,] 0.7154231 0.6520002 0.6511186 0.6286821 0.6284502 0.6230610 0.6164986 #>  [2,] 0.8809570 0.8756219 0.8753830 0.8741768 0.8644411 0.8455401 0.8142314 #>  [3,] 0.7502479 0.7395896 0.7283057 0.7082934 0.6756619 0.6658908 0.6536994 #>  [4,] 0.8900290 0.8092970 0.8031441 0.7842018 0.7436213 0.7392508 0.6779881 #>  [5,] 0.8941227 0.8803090 0.8476374 0.8430969 0.8091084 0.7430182 0.7398725 #>  [6,] 0.8973044 0.8912849 0.8754108 0.8707272 0.8536359 0.8457036 0.8442314 #>  [7,] 0.8345086 0.8034126 0.7944777 0.7776455 0.7690135 0.7621109 0.7608582 #>  [8,] 0.7608931 0.7357294 0.7311036 0.6964886 0.6583222 0.6572984 0.6504853 #>  [9,] 0.7921029 0.7748016 0.7612554 0.7591710 0.7312292 0.7262853 0.7007675 #> [10,] 0.8865505 0.8767677 0.8643753 0.8592859 0.8240329 0.8096962 0.7919077 #>              15        16        17        18        19        20        21 #>  [1,] 0.6120828 0.6000373 0.5643857 0.5593832 0.5380793 0.5109649 0.4497338 #>  [2,] 0.7784543 0.7607611 0.7337297 0.6846441 0.6705485 0.6406805 0.6264565 #>  [3,] 0.6495062 0.6480828 0.6390610 0.6388837 0.6227988 0.5715608 0.5665863 #>  [4,] 0.6529673 0.6502987 0.6430690 0.6356681 0.6320929 0.6160144 0.5948192 #>  [5,] 0.7195228 0.7084843 0.6909178 0.6907191 0.6476439 0.6467813 0.5236504 #>  [6,] 0.8370617 0.7639344 0.7423262 0.7377952 0.7193180 0.6750235 0.6304117 #>  [7,] 0.7544066 0.7281800 0.7249351 0.7069465 0.6766108 0.6738564 0.6686745 #>  [8,] 0.6345443 0.6332316 0.6140056 0.5030267 0.5014234 0.5012471 0.4680893 #>  [9,] 0.6904052 0.6900072 0.6807986 0.6776985 0.6450548 0.6305429 0.6294165 #> [10,] 0.7724768 0.7706432 0.7610594 0.7502398 0.7143716 0.7134120 0.7119553 #>              22        23        24        25        26        27        28 #>  [1,] 0.4447896 0.4373408 0.4315224 0.4305207 0.4052702 0.4019904 0.3946066 #>  [2,] 0.5494615 0.5459154 0.5447052 0.5437927 0.5304095 0.5287093 0.5138669 #>  [3,] 0.5463676 0.5338427 0.5144025 0.4955599 0.4882887 0.4511203 0.4391500 #>  [4,] 0.5882472 0.5787815 0.5786308 0.5512907 0.5283224 0.5033951 0.5031461 #>  [5,] 0.5027471 0.4731371 0.4518584 0.4357182 0.4179660 0.4088539 0.3810569 #>  [6,] 0.5938366 0.5709573 0.5594912 0.5242801 0.5168041 0.5083099 0.4958347 #>  [7,] 0.6565796 0.6525100 0.6485013 0.6273660 0.6102996 0.5880786 0.5697405 #>  [8,] 0.4421869 0.4294316 0.4122564 0.3959981 0.3642624 0.3504865 0.3072737 #>  [9,] 0.6271579 0.6229228 0.6021448 0.5523188 0.5508624 0.5386331 0.5381924 #> [10,] 0.7007150 0.5862222 0.4958896 0.4689590 0.4607475 0.4558401 0.4530892 #>              29        30        31        32        33        34        35 #>  [1,] 0.3559015 0.3392539 0.2971619 0.2859856 0.2709778 0.2618569 0.2264813 #>  [2,] 0.4591390 0.4525525 0.4469974 0.4327882 0.4194859 0.4159615 0.3563146 #>  [3,] 0.4298314 0.4015980 0.3979936 0.3937777 0.3915421 0.3692361 0.3600424 #>  [4,] 0.4665048 0.4581606 0.4310034 0.4124729 0.3789607 0.3674644 0.3527047 #>  [5,] 0.3625163 0.3595307 0.3382199 0.2937508 0.2758051 0.2638418 0.2505233 #>  [6,] 0.4308988 0.4073613 0.3914532 0.3734108 0.3654865 0.3608737 0.3444290 #>  [7,] 0.5492207 0.5438312 0.5147446 0.4968253 0.4832982 0.4567492 0.4387996 #>  [8,] 0.2764568 0.2557493 0.2425870 0.2424543 0.2096216 0.1990008 0.1989862 #>  [9,] 0.5361333 0.5352176 0.4765041 0.4755451 0.4414992 0.3541867 0.2937588 #> [10,] 0.4513363 0.3986198 0.3610061 0.3309537 0.3188480 0.3182127 0.3157314 #>              36        37        38        39        40        41        42 #>  [1,] 0.2200247 0.1634123 0.1487103 0.1379704 0.1130475 0.1103298 0.1013138 #>  [2,] 0.3161155 0.2906483 0.2726462 0.2696946 0.2467509 0.2404612 0.2261087 #>  [3,] 0.3496955 0.3458536 0.3309320 0.2935854 0.2444835 0.2417761 0.2376977 #>  [4,] 0.3505882 0.2247654 0.1933127 0.1823779 0.1777593 0.1590348 0.1266666 #>  [5,] 0.2487349 0.2424927 0.1592293 0.1552945 0.1380596 0.1090488 0.1043065 #>  [6,] 0.3401192 0.3123294 0.2946250 0.2813131 0.2644819 0.2612376 0.2036644 #>  [7,] 0.4329308 0.3599601 0.2975600 0.2818126 0.2600589 0.2569829 0.2526997 #>  [8,] 0.1974633 0.1790343 0.1732248 0.1435592 0.1281158 0.1217966 0.1211089 #>  [9,] 0.2861873 0.2595095 0.2592027 0.2058289 0.1929433 0.1661618 0.1451154 #> [10,] 0.3155947 0.2515776 0.2026990 0.1947595 0.1791275 0.1684146 0.1681325 #>               43         44         45         46         47         48 #>  [1,] 0.08603899 0.07299444 0.06879545 0.06840642 0.05817565 0.04300129 #>  [2,] 0.21943974 0.16467523 0.15927475 0.14540735 0.08183302 0.05908295 #>  [3,] 0.22511539 0.20123842 0.14326644 0.13334855 0.11868321 0.11827678 #>  [4,] 0.07617631 0.06731983 0.06313734 0.05607304 0.05106245 0.04584931 #>  [5,] 0.09196980 0.07832827 0.07463363 0.07041712 0.02701945 0.02662467 #>  [6,] 0.20320883 0.18331205 0.11804457 0.07961901 0.06994552 0.06488309 #>  [7,] 0.24379128 0.11178991 0.09797805 0.09396819 0.08587044 0.06834170 #>  [8,] 0.09900971 0.09462277 0.08984890 0.07838425 0.07588305 0.04332844 #>  [9,] 0.13935932 0.13662858 0.13350766 0.13002437 0.12186463 0.10967002 #> [10,] 0.16649077 0.15636057 0.15149556 0.12901623 0.11630918 0.10733189 #>                49          50 #>  [1,] 0.024886031 0.013272602 #>  [2,] 0.056558586 0.034429233 #>  [3,] 0.077089859 0.010872464 #>  [4,] 0.038526407 0.001646489 #>  [5,] 0.008658075 0.002476830 #>  [6,] 0.018531433 0.017769956 #>  [7,] 0.033504037 0.013695368 #>  [8,] 0.023876765 0.014718803 #>  [9,] 0.038571883 0.038140789 #> [10,] 0.039940655 0.029104153 #>  #> $crank #>  [1] 61.41420 42.39406 45.28349 54.07895 60.07913 45.02222 42.78160 60.97748 #>  [9] 44.91295 45.35249 #>  #> $lp #> NULL #>  #> $response #> NULL #>   # if crank is set, it's not overwritten .surv_return(times = 1:k, surv = surv_mat, crank = rnorm(n)) #> $distr #>               1         2         3         4         5         6         7 #>  [1,] 0.9815318 0.9302815 0.8863742 0.8507213 0.8386300 0.8161877 0.7837275 #>  [2,] 0.9702623 0.9643438 0.9585035 0.9349984 0.9215262 0.8856603 0.8813129 #>  [3,] 0.9473172 0.9245204 0.9202758 0.8880152 0.8597222 0.8517432 0.8279213 #>  [4,] 0.9832669 0.9826687 0.9456878 0.9278701 0.9272818 0.9262833 0.9064917 #>  [5,] 0.9736226 0.9485788 0.9479137 0.9465589 0.9225646 0.8979025 0.8963784 #>  [6,] 0.9790338 0.9697919 0.9624163 0.9587279 0.9558663 0.9355171 0.9166539 #>  [7,] 0.9364289 0.9217996 0.9038774 0.8843691 0.8541737 0.8509742 0.8415589 #>  [8,] 0.9845655 0.9815419 0.9708450 0.9061868 0.8809331 0.8560810 0.8249154 #>  [9,] 0.9931181 0.9835116 0.9662092 0.9579191 0.9239608 0.8524324 0.7953777 #> [10,] 0.9821906 0.9758180 0.9671391 0.9661595 0.9513960 0.9302335 0.9183378 #>               8         9        10        11        12        13        14 #>  [1,] 0.7154231 0.6520002 0.6511186 0.6286821 0.6284502 0.6230610 0.6164986 #>  [2,] 0.8809570 0.8756219 0.8753830 0.8741768 0.8644411 0.8455401 0.8142314 #>  [3,] 0.7502479 0.7395896 0.7283057 0.7082934 0.6756619 0.6658908 0.6536994 #>  [4,] 0.8900290 0.8092970 0.8031441 0.7842018 0.7436213 0.7392508 0.6779881 #>  [5,] 0.8941227 0.8803090 0.8476374 0.8430969 0.8091084 0.7430182 0.7398725 #>  [6,] 0.8973044 0.8912849 0.8754108 0.8707272 0.8536359 0.8457036 0.8442314 #>  [7,] 0.8345086 0.8034126 0.7944777 0.7776455 0.7690135 0.7621109 0.7608582 #>  [8,] 0.7608931 0.7357294 0.7311036 0.6964886 0.6583222 0.6572984 0.6504853 #>  [9,] 0.7921029 0.7748016 0.7612554 0.7591710 0.7312292 0.7262853 0.7007675 #> [10,] 0.8865505 0.8767677 0.8643753 0.8592859 0.8240329 0.8096962 0.7919077 #>              15        16        17        18        19        20        21 #>  [1,] 0.6120828 0.6000373 0.5643857 0.5593832 0.5380793 0.5109649 0.4497338 #>  [2,] 0.7784543 0.7607611 0.7337297 0.6846441 0.6705485 0.6406805 0.6264565 #>  [3,] 0.6495062 0.6480828 0.6390610 0.6388837 0.6227988 0.5715608 0.5665863 #>  [4,] 0.6529673 0.6502987 0.6430690 0.6356681 0.6320929 0.6160144 0.5948192 #>  [5,] 0.7195228 0.7084843 0.6909178 0.6907191 0.6476439 0.6467813 0.5236504 #>  [6,] 0.8370617 0.7639344 0.7423262 0.7377952 0.7193180 0.6750235 0.6304117 #>  [7,] 0.7544066 0.7281800 0.7249351 0.7069465 0.6766108 0.6738564 0.6686745 #>  [8,] 0.6345443 0.6332316 0.6140056 0.5030267 0.5014234 0.5012471 0.4680893 #>  [9,] 0.6904052 0.6900072 0.6807986 0.6776985 0.6450548 0.6305429 0.6294165 #> [10,] 0.7724768 0.7706432 0.7610594 0.7502398 0.7143716 0.7134120 0.7119553 #>              22        23        24        25        26        27        28 #>  [1,] 0.4447896 0.4373408 0.4315224 0.4305207 0.4052702 0.4019904 0.3946066 #>  [2,] 0.5494615 0.5459154 0.5447052 0.5437927 0.5304095 0.5287093 0.5138669 #>  [3,] 0.5463676 0.5338427 0.5144025 0.4955599 0.4882887 0.4511203 0.4391500 #>  [4,] 0.5882472 0.5787815 0.5786308 0.5512907 0.5283224 0.5033951 0.5031461 #>  [5,] 0.5027471 0.4731371 0.4518584 0.4357182 0.4179660 0.4088539 0.3810569 #>  [6,] 0.5938366 0.5709573 0.5594912 0.5242801 0.5168041 0.5083099 0.4958347 #>  [7,] 0.6565796 0.6525100 0.6485013 0.6273660 0.6102996 0.5880786 0.5697405 #>  [8,] 0.4421869 0.4294316 0.4122564 0.3959981 0.3642624 0.3504865 0.3072737 #>  [9,] 0.6271579 0.6229228 0.6021448 0.5523188 0.5508624 0.5386331 0.5381924 #> [10,] 0.7007150 0.5862222 0.4958896 0.4689590 0.4607475 0.4558401 0.4530892 #>              29        30        31        32        33        34        35 #>  [1,] 0.3559015 0.3392539 0.2971619 0.2859856 0.2709778 0.2618569 0.2264813 #>  [2,] 0.4591390 0.4525525 0.4469974 0.4327882 0.4194859 0.4159615 0.3563146 #>  [3,] 0.4298314 0.4015980 0.3979936 0.3937777 0.3915421 0.3692361 0.3600424 #>  [4,] 0.4665048 0.4581606 0.4310034 0.4124729 0.3789607 0.3674644 0.3527047 #>  [5,] 0.3625163 0.3595307 0.3382199 0.2937508 0.2758051 0.2638418 0.2505233 #>  [6,] 0.4308988 0.4073613 0.3914532 0.3734108 0.3654865 0.3608737 0.3444290 #>  [7,] 0.5492207 0.5438312 0.5147446 0.4968253 0.4832982 0.4567492 0.4387996 #>  [8,] 0.2764568 0.2557493 0.2425870 0.2424543 0.2096216 0.1990008 0.1989862 #>  [9,] 0.5361333 0.5352176 0.4765041 0.4755451 0.4414992 0.3541867 0.2937588 #> [10,] 0.4513363 0.3986198 0.3610061 0.3309537 0.3188480 0.3182127 0.3157314 #>              36        37        38        39        40        41        42 #>  [1,] 0.2200247 0.1634123 0.1487103 0.1379704 0.1130475 0.1103298 0.1013138 #>  [2,] 0.3161155 0.2906483 0.2726462 0.2696946 0.2467509 0.2404612 0.2261087 #>  [3,] 0.3496955 0.3458536 0.3309320 0.2935854 0.2444835 0.2417761 0.2376977 #>  [4,] 0.3505882 0.2247654 0.1933127 0.1823779 0.1777593 0.1590348 0.1266666 #>  [5,] 0.2487349 0.2424927 0.1592293 0.1552945 0.1380596 0.1090488 0.1043065 #>  [6,] 0.3401192 0.3123294 0.2946250 0.2813131 0.2644819 0.2612376 0.2036644 #>  [7,] 0.4329308 0.3599601 0.2975600 0.2818126 0.2600589 0.2569829 0.2526997 #>  [8,] 0.1974633 0.1790343 0.1732248 0.1435592 0.1281158 0.1217966 0.1211089 #>  [9,] 0.2861873 0.2595095 0.2592027 0.2058289 0.1929433 0.1661618 0.1451154 #> [10,] 0.3155947 0.2515776 0.2026990 0.1947595 0.1791275 0.1684146 0.1681325 #>               43         44         45         46         47         48 #>  [1,] 0.08603899 0.07299444 0.06879545 0.06840642 0.05817565 0.04300129 #>  [2,] 0.21943974 0.16467523 0.15927475 0.14540735 0.08183302 0.05908295 #>  [3,] 0.22511539 0.20123842 0.14326644 0.13334855 0.11868321 0.11827678 #>  [4,] 0.07617631 0.06731983 0.06313734 0.05607304 0.05106245 0.04584931 #>  [5,] 0.09196980 0.07832827 0.07463363 0.07041712 0.02701945 0.02662467 #>  [6,] 0.20320883 0.18331205 0.11804457 0.07961901 0.06994552 0.06488309 #>  [7,] 0.24379128 0.11178991 0.09797805 0.09396819 0.08587044 0.06834170 #>  [8,] 0.09900971 0.09462277 0.08984890 0.07838425 0.07588305 0.04332844 #>  [9,] 0.13935932 0.13662858 0.13350766 0.13002437 0.12186463 0.10967002 #> [10,] 0.16649077 0.15636057 0.15149556 0.12901623 0.11630918 0.10733189 #>                49          50 #>  [1,] 0.024886031 0.013272602 #>  [2,] 0.056558586 0.034429233 #>  [3,] 0.077089859 0.010872464 #>  [4,] 0.038526407 0.001646489 #>  [5,] 0.008658075 0.002476830 #>  [6,] 0.018531433 0.017769956 #>  [7,] 0.033504037 0.013695368 #>  [8,] 0.023876765 0.014718803 #>  [9,] 0.038571883 0.038140789 #> [10,] 0.039940655 0.029104153 #>  #> $crank #>  [1]  0.77948895  1.50760770 -1.82431450  0.78819859 -0.97297125  0.89290212 #>  [7]  0.76312697  0.65145595 -0.53585835 -0.08404722 #>  #> $lp #> NULL #>  #> $response #> NULL #>   # lp = crank .surv_return(lp = rnorm(n)) #> $distr #> NULL #>  #> $crank #>  [1] -2.01186557 -0.51340672  0.10151962 -0.05620974 -2.43211083 -0.62558506 #>  [7] -0.87596285  0.28551966  0.34384891 -0.93510063 #>  #> $lp #>  [1] -2.01186557 -0.51340672  0.10151962 -0.05620974 -2.43211083 -0.62558506 #>  [7] -0.87596285  0.28551966  0.34384891 -0.93510063 #>  #> $response #> NULL #>   # if response is set and no crank, crank = -response .surv_return(response = sample(1:100, n)) #> $distr #> NULL #>  #> $crank #>  [1]  -97  -69  -98 -100  -72  -17  -26  -50   -4  -90 #>  #> $lp #> NULL #>  #> $response #>  [1]  97  69  98 100  72  17  26  50   4  90 #>   # if both are set, they are not overwritten .surv_return(crank = rnorm(n), response = sample(1:100, n)) #> $distr #> NULL #>  #> $crank #>  [1] -0.41971028  1.33719411 -0.22322558  0.59312292 -0.06526734 -0.70118521 #>  [7] -0.52916750  0.16977465  0.11411134 -0.79616709 #>  #> $lp #> NULL #>  #> $response #>  [1] 30 46 86 18 22 62 11 17  3 66 #>"},{"path":"https://mlr3proba.mlr-org.com/reference/gbcs.html","id":null,"dir":"Reference","previous_headings":"","what":"German Breast Cancer Study (GBCS) Dataset — gbcs","title":"German Breast Cancer Study (GBCS) Dataset — gbcs","text":"gbcs dataset Hosmer et al. (2008)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/gbcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Breast Cancer Study (GBCS) Dataset — gbcs","text":"","code":"gbcs"},{"path":"https://mlr3proba.mlr-org.com/reference/gbcs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Breast Cancer Study (GBCS) Dataset — gbcs","text":"id Identification Code diagdate Date diagnosis. recdate Date recurrence free survival. deathdate Date death. age Age diagnosis (years). menopause Menopausal status. 1 = Yes, 0 = . hormone Hormone therapy. 1 = Yes. 0 = . size Tumor size (mm). grade Tumor grade (1-3). nodes Number lymph nodes. prog_recp Number progesterone receptors. estrg_recp Number estrogen receptors. rectime Time recurrence (days). censrec Recurrence status. 1 = Recurrence. 0 = Censored. survtime Time death (days). censdead Censoring status. 1 = Death. 0 = Censored.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/gbcs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Breast Cancer Study (GBCS) Dataset — gbcs","text":"https://onlinelibrary.wiley.com/doi/book/10.1002/9780470258019","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/gbcs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"German Breast Cancer Study (GBCS) Dataset — gbcs","text":"Hosmer, D.W. Lemeshow, S. May, S. (2008) Applied Survival Analysis: Regression Modeling Time Event Data: Second Edition, John Wiley Sons Inc., New York, NY","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected mortality risks from a survival matrix — get_mortality","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"Many methods can used reduce discrete survival distribution prediction (.e. matrix) relative risk / ranking prediction, see Sonabend et al. (2022). function calculates relative risk score sum predicted cumulative hazard function, also called ensemble/expected mortality. risk score can loosely interpreted expected number deaths patients similar characteristics, see Ishwaran et al. (2008) model survival distribution assumptions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"","code":"get_mortality(x)"},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"x (matrix())  survival matrix rows (predicted) observations columns time-points. details, see assert_surv_matrix.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"numeric vector mortality risk scores, one per row input survival matrix.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"Sonabend, Raphael, Bender, Andreas, Vollmer, Sebastian (2022). “Avoiding C-hacking evaluating survival distribution predictions discrimination measures.” Bioinformatics. ISSN 1367-4803, doi:10.1093/BIOINFORMATICS/BTAC451 , https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac451/6640155. Ishwaran, Hemant, Kogalur, B U, Blackstone, H E, Lauer, S M, others (2008). “Random survival forests.” Annals applied statistics, 2(3), 841–860.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/get_mortality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expected mortality risks from a survival matrix — get_mortality","text":"","code":"n = 10 # number of observations k = 50 # time points  # Create the matrix with random values between 0 and 1 mat = matrix(runif(n * k, min = 0, max = 1), nrow = n, ncol = k)  # transform it to a survival matrix surv_mat = t(apply(mat, 1L, function(row) sort(row, decreasing = TRUE))) colnames(surv_mat) = 1:k # time points  # get mortality scores (the larger, the more risk) mort = get_mortality(surv_mat) mort #>  [1] 56.34477 53.39680 52.00921 42.97649 59.84466 46.32537 61.67714 46.26460 #>  [9] 40.84075 55.84446"},{"path":"https://mlr3proba.mlr-org.com/reference/grace.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE 1000 Dataset — grace","title":"GRACE 1000 Dataset — grace","text":"grace dataset Hosmer et al. (2008)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/grace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRACE 1000 Dataset — grace","text":"","code":"grace"},{"path":"https://mlr3proba.mlr-org.com/reference/grace.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GRACE 1000 Dataset — grace","text":"id Identification Code days Follow time. death Censoring indicator. 1 = Death. 0 = Censored. revasc Revascularization Performed. 1 = Yes. 0 = . revascdays Days revascularization admission. los Length hospital stay (days). age Age admission (years). sysbp Systolic blood pressure admission (mm Hg). stchange ST-segment deviation index ECG. 1 = Yes. 0 = .","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/grace.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GRACE 1000 Dataset — grace","text":"https://onlinelibrary.wiley.com/doi/book/10.1002/9780470258019","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/grace.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GRACE 1000 Dataset — grace","text":"Hosmer, D.W. Lemeshow, S. May, S. (2008) Applied Survival Analysis: Regression Modeling Time Event Data: Second Edition, John Wiley Sons Inc., New York, NY","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr3proba-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3proba: Probabilistic Supervised Learning for 'mlr3' — mlr3proba-package","title":"mlr3proba: Probabilistic Supervised Learning for 'mlr3' — mlr3proba-package","text":"Provides extensions probabilistic supervised learning 'mlr3'. includes extending regression task probabilistic interval regression, adding survival task, specialized models, predictions, measures.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr3proba-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3proba: Probabilistic Supervised Learning for 'mlr3' — mlr3proba-package","text":"Maintainer: John Zobolas bblodfon@gmail.com (ORCID) Authors: Raphael Sonabend raphaelsonabend@gmail.com (ORCID) Franz Kiraly f.kiraly@ucl.ac.uk Michel Lang michellang@gmail.com (ORCID) Philip Studener philip.studener@gmx.de contributors: Nurul Ain Toha nurul.toha.15@ucl.ac.uk [contributor] Andreas Bender bender..R@gmail.com (ORCID) [contributor] Lukas Burk github@quantenbrot.de (ORCID) [contributor] Maximilian Muecke muecke.maximilian@gmail.com (ORCID) [contributor] Lee Xingzhuo Li xingzhuo_li@yahoo.com.au (ORCID) [contributor] Markus Goeswein markus.goeswein@outlook.de [contributor]","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"Wrapper around PipeOpCrankCompositor simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"","code":"pipeline_crankcompositor(   learner,   method = c(\"mort\"),   overwrite = FALSE,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"learner [mlr3::Learner]|[mlr3pipelines::PipeOp]|[mlr3pipelines::Graph]  Either Learner wrapped mlr3pipelines::PipeOpLearner, PipeOp wrapped mlr3pipelines::Graph Graph . Underlying Learner LearnerSurv. method (character(1)) Determines method used produce continuous ranking distribution. Currently mort supported, sum cumulative hazard, also called expected/ensemble mortality, see Ishwaran et al. (2008). details, see get_mortality(). overwrite (logical(1)) FALSE (default) prediction already crank prediction, compositor returns input prediction unchanged. TRUE, crank overwritten. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"crankcompositor\") ppl(\"crankcompositor\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_crankcompositor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Survival crank Predict Type Pipeline — mlr_graphs_crankcompositor","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"lung\")   part = partition(task)    # change the crank prediction type of a Cox's model predictions   grlrn = ppl(     \"crankcompositor\",     learner = lrn(\"surv.coxph\"),     method = \"mort\",     overwrite = TRUE,     graph_learner = TRUE   )   grlrn$train(task, part$train)   grlrn$predict(task, part$test) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"Wrapper around PipeOpDistrCompositor PipeOpBreslow simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"","code":"pipeline_distrcompositor(   learner,   estimator = \"kaplan\",   form = \"aft\",   overwrite = FALSE,   scale_lp = FALSE,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"learner [mlr3::Learner]|[mlr3pipelines::PipeOp]|[mlr3pipelines::Graph]  Either Learner wrapped mlr3pipelines::PipeOpLearner, PipeOp wrapped mlr3pipelines::Graph Graph . Underlying Learner LearnerSurv. estimator (character(1)) One kaplan (default), nelson breslow, corresponding Kaplan-Meier, Nelson-Aalen Breslow estimators respectively. Used estimate baseline survival distribution. form (character(1)) One aft (default), ph, po, corresponding accelerated failure time, proportional hazards, proportional odds respectively. Used determine form composed survival distribution. Ignored estimator breslow. overwrite (logical(1)) FALSE (default) learner already distr, compositor nothing. TRUE distr overwritten compositor already present, may required changing prediction distr one model form another. scale_lp (logical(1)) TRUE form \"aft\", linear predictor scores scaled composition. Experimental option, see details PipeOpDistrCompositor. Default FALSE. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"distrcompositor\") ppl(\"distrcompositor\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_distrcompositor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Survival distr Predict Type Pipeline — mlr_graphs_distrcompositor","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3pipelines)    # let's change the distribution prediction of Cox (Breslow-based) to an AFT form:   task = tsk(\"rats\")   grlrn = ppl(     \"distrcompositor\",     learner = lrn(\"surv.coxph\"),     estimator = \"kaplan\",     form = \"aft\",     overwrite = TRUE,     graph_learner = TRUE   )   grlrn$train(task)   grlrn$predict(task) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"Wrapper around PipeOpProbregr simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"","code":"pipeline_probregr(   learner,   learner_se = NULL,   dist = \"Uniform\",   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"learner [mlr3::Learner]|[mlr3pipelines::PipeOp]|[mlr3pipelines::Graph]  Either Learner wrapped mlr3pipelines::PipeOpLearner, PipeOp wrapped mlr3pipelines::Graph Graph . Underlying Learner LearnerRegr. learner_se [mlr3::Learner]|[mlr3pipelines::PipeOp]  Optional LearnerRegr predict_type se estimate standard error. left NULL learner must se predict_types. dist (character(1)) Location-scale distribution use composition. Current possibilities ' \"Cauchy\", \"Gumbel\", \"Laplace\", \"Logistic\", \"Normal\", \"Uniform\". Default \"Uniform\". graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"probregr\") ppl(\"probregr\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_probregr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Regression distr Predict Type Pipeline — mlr_graphs_probregr","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"boston_housing\")    # method 1 - same learner for response and se   pipe = ppl(     \"probregr\",     learner = lrn(\"regr.featureless\", predict_type = \"se\"),     dist = \"Uniform\"   )   pipe$train(task)   pipe$predict(task)    # method 2 - different learners for response and se   pipe = ppl(     \"probregr\",     learner = lrn(\"regr.rpart\"),     learner_se = lrn(\"regr.featureless\", predict_type = \"se\"),     dist = \"Normal\"   )   pipe$train(task)   pipe$predict(task) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"Wrapper around PipeOpResponseCompositor simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"","code":"pipeline_responsecompositor(   learner,   method = \"rmst\",   tau = NULL,   add_crank = FALSE,   overwrite = FALSE,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"learner [mlr3::Learner]|[mlr3pipelines::PipeOp]|[mlr3pipelines::Graph]  Either Learner wrapped mlr3pipelines::PipeOpLearner, PipeOp wrapped mlr3pipelines::Graph Graph . Underlying Learner LearnerSurv. method (character(1)) Determines method used produce survival time (response) survival distribution. Available methods \"rmst\" \"median\", corresponding restricted mean survival time median survival time respectively. tau (numeric(1)) Determines time point calculate restricted mean survival time (works \"rmst\" method). NULL (default), available time points predicted survival distribution used. add_crank (logical(1)) TRUE crank predict type set -response (higher survival times correspond lower risk). Works overwrite TRUE. overwrite (logical(1)) FALSE (default) prediction already response prediction, compositor returns input prediction unchanged. TRUE, response (crank, add_crank TRUE) overwritten. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"responsecompositor\") ppl(\"responsecompositor\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_responsecompositor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Survival Time/Response Predict Type Pipeline — mlr_graphs_responsecompositor","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"lung\")   part = partition(task)    # add survival time prediction type to the predictions of a Cox model   grlrn = ppl(     \"responsecompositor\",     learner = lrn(\"surv.coxph\"),     method = \"rmst\",     overwrite = TRUE,     graph_learner = TRUE   )   grlrn$train(task, part$train)   grlrn$predict(task, part$test) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"Wrapper around PipeOpSurvAvg simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"","code":"pipeline_survaverager(learners, param_vals = list(), graph_learner = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"learners (list())  List LearnerSurvs average. param_vals (list())  Parameters, including weights, pass PipeOpSurvAvg. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"survaverager\") ppl(\"survaverager\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survaverager.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survaverager","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"rats\")   pipe = ppl(     \"survaverager\",     learners = lrns(c(\"surv.kaplan\", \"surv.coxph\")),     param_vals = list(weights = c(0.1, 0.9)),     graph_learner = FALSE   )   pipe$train(task)   pipe$predict(task) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"Wrapper around PipeOpSubsample PipeOpSurvAvg simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"","code":"pipeline_survbagging(   learner,   iterations = 10,   frac = 0.7,   avg = TRUE,   weights = 1,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"learner [mlr3::Learner]|[mlr3pipelines::PipeOp]|[mlr3pipelines::Graph]  Either Learner wrapped mlr3pipelines::PipeOpLearner, PipeOp wrapped mlr3pipelines::Graph Graph . Underlying Learner LearnerSurv. iterations (integer(1)) Number bagging iterations. Defaults 10. frac (numeric(1)) Percentage rows keep subsampling. See PipeOpSubsample information. Defaults 0.7. avg (logical(1)) TRUE (default) predictions aggregated PipeOpSurvAvg, otherwise returned multiple predictions. Can FALSE graph_learner = FALSE. weights (numeric()) Weights model avering, ignored avg = FALSE. Default uniform weighting, see PipeOpSurvAvg. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"Bagging (Bootstrap AGGregatING) process bootstrapping data aggregating final predictions. Bootstrapping splits data B smaller datasets given size performed PipeOpSubsample. Aggregation sample mean deterministic predictions MixtureDistribution distribution predictions. can enhanced using weighted average supplying weights.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"survbagging\") ppl(\"survbagging\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survbagging.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Prediction Averaging Pipeline — mlr_graphs_survbagging","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"rats\")   pipe = ppl(     \"survbagging\",     learner = lrn(\"surv.coxph\"),     iterations = 5,     graph_learner = FALSE   )   pipe$train(task)   pipe$predict(task) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"Wrapper around PipeOpTaskSurvClassifIPCW PipeOpPredClassifSurvIPCW simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"","code":"pipeline_survtoclassif_IPCW(   learner,   tau = NULL,   eps = 0.001,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"learner LearnerClassif Classification learner fit transformed TaskClassif. tau (numeric()) Predefined time point IPCW. Observations time larger \\(\\tau\\) censored. Must less equal maximum event time. eps (numeric()) Small value replace \\(G(t) = 0\\) censoring probabilities prevent infinite weights (warning triggered happens). graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"pipeline consists following steps: PipeOpTaskSurvClassifIPCW Converts TaskSurv TaskClassif. LearnerClassif fit predicted new TaskClassif. PipeOpPredClassifSurvIPCW transforms resulting PredictionClassif PredictionSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():   Additional alias id pipeline construction:","code":"mlr_graphs$get(\"survtoclassif_IPCW\") ppl(\"survtoclassif_IPCW\") ppl(\"survtoclassif_vock\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"Vock, M D, Wolfson, Julian, Bandyopadhyay, Sunayan, Adomavicius, Gediminas, Johnson, E P, Vazquez-Benitez, Gabriela, O'Connor, J P (2016). “Adapting machine learning techniques censored time--event health record data: general-purpose approach using inverse probability censoring weighting.” Journal Biomedical Informatics, 61, 119–131. doi:10.1016/j.jbi.2016.03.009 , https://www.sciencedirect.com/science/article/pii/S1532046416000496.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_IPCW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival to Classification Reduction using IPCW Pipeline — mlr_graphs_survtoclassif_IPCW","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")   part = partition(task)    grlrn = ppl(     \"survtoclassif_IPCW\",     learner = lrn(\"classif.rpart\"),     tau = 500, # Observations after 500 days are censored     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   pred = grlrn$predict(task, row_ids = part$test)   pred # crank and distr at the cutoff time point included    # score predictions   pred$score() # C-index   pred$score(msr(\"surv.brier\", times = 500, integrated = FALSE)) # Brier score at tau } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"Wrapper around PipeOpTaskSurvClassifDiscTime PipeOpPredClassifSurvDiscTime simplify Graph creation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"","code":"pipeline_survtoclassif_disctime(   learner,   cut = NULL,   max_time = NULL,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"learner LearnerClassif Classification learner fit transformed TaskClassif. learner must predict_type type \"prob\". cut (numeric()) Split points, used partition data intervals. unspecified, unique event times used. cut single integer, interpreted number equidistant intervals 0 maximum event time. max_time (numeric(1)) cut unspecified, last possible event time. event times max_time administratively censored max_time. graph_learner (logical(1)) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"pipeline consists following steps: PipeOpTaskSurvClassifDiscTime Converts TaskSurv TaskClassif. LearnerClassif fit predicted new TaskClassif. PipeOpPredClassifSurvDiscTime transforms resulting PredictionClassif PredictionSurv. Optionally: PipeOpModelMatrix used transform formula task fitting learner.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"Graph can instantiated via dictionary mlr_graphs associated sugar function ppl():","code":"mlr_graphs$get(\"survtoclassif_disctime\") ppl(\"survtoclassif_disctime\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"Tutz, Gerhard, Schmid, Matthias (2016). Modeling Discrete Time--Event Data,  series Springer Series Statistics. Springer International Publishing. ISBN 978-3-319-28156-8 978-3-319-28158-2, http://link.springer.com/10.1007/978-3-319-28158-2.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoclassif_disctime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival to Classification Reduction using Discrete Time Pipeline — mlr_graphs_survtoclassif_disctime","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")   part = partition(task)    grlrn = ppl(     \"survtoclassif_disctime\",     learner = lrn(\"classif.log_reg\"),     cut = 4, # 4 equidistant time intervals     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   grlrn$predict(task, row_ids = part$test) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"Wrapper around multiple PipeOps help creation complex survival reduction methods.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"","code":"pipeline_survtoregr_pem(   learner,   cut = NULL,   max_time = NULL,   graph_learner = FALSE )"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"learner LearnerRegr Regression learner fit transformed TaskRegr. learner must able handle offset support optimization poisson likelihood. cut numeric() Split points, used partition data intervals. unspecified, unique event times used. cut single integer, interpreted number equidistant intervals 0 maximum event time. max_time numeric(1) cut unspecified, last possible event time. event times max_time administratively censored max_time. graph_learner logical(1) TRUE returns wraps Graph GraphLearner otherwise (default) returns Graph.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"mlr3pipelines::Graph mlr3pipelines::GraphLearner","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"brief mathematical summary PEMs (see referenced article detail): PED Transformation:  Survival data converted piece-wise exponential data (PED) format. Key elements : Continuous time divided \\(j = 1, \\ldots, J\\) intervals subject, \\(= 1, \\ldots, n\\). status variable entry indicates whether event censoring occurred interval. subject, data entries created interval including event time. offset column introduced represents logarithm time subject spent given interval. details, see pammtools::as_ped(). Hazard Estimation PEM:  PED transformation combined working assumption $$\\delta_{ij} \\stackrel{\\text{iid}}{\\sim} Poisson \\left( \\mu_{ij} = \\lambda_{ij} t_{ij} \\right),$$ \\(\\delta_{ij}\\) denotes event censoring indicator, allows framing problem piecewise constant hazard estimation poisson regression offset. Specifically, want estimate $$\\lambda(t \\mid \\mathbf{x}_i) := exp(g(x_{},t_{j})), \\quad \\forall t \\[t_{j-1}, t_{j}), \\quad = 1, \\dots, n.$$ \\(g(x_{},t_{j})\\) general function features \\(x\\) \\(t\\), .e. learner, may include non-linearity complex feature interactions. Two important prerequisites learner capacity model poisson likelihood accommodate offset. Piecewise Hazards Survival Probabilities:  Lastly, computed hazards back transformed survival probabilities via following identity $$S(t | \\mathbf{x}) = \\exp \\left( - \\int_{0}^{t} \\lambda(s | \\mathbf{x}) \\, ds \\right) = \\exp \\left( - \\sum_{j = 1}^{J} \\lambda(j | \\mathbf{x}) d_j\\,  \\right),$$ \\(d_j\\) specifies duration interval \\(j\\). previous considerations reflected pipeline consists following steps: PipeOpTaskSurvRegrPEM Converts TaskSurv TaskRegr. LearnerRegr fit predicted new TaskRegr. PipeOpPredRegrSurvPEM transforms resulting PredictionRegr PredictionSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"Bender, Andreas, Groll, Andreas, Scheipl, Fabian (2018). “generalized additive model approach time--event analysis.” Statistical Modelling, 18(3-4), 299–321. https://doi.org/10.1177/1471082X17748083.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_graphs_survtoregr_pem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival to Poisson Regression Reduction Pipeline — mlr_graphs_survtoregr_pem","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")   part = partition(task)    # typically model formula and features types are extracted from the task   learner = lrn(\"regr.gam\", family = \"poisson\")   grlrn = ppl(    \"survtoregr_pem\",     learner = learner,     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   grlrn$predict(task, row_ids = part$test)    # In some instances special formulas can be specified in the learner   learner = lrn(\"regr.gam\", family = \"poisson\", formula = pem_status ~ s(tend) + s(age) + meal.cal)   grlrn = ppl(    \"survtoregr_pem\",     learner = learner,     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   grlrn$predict(task, row_ids = part$test)    # if necessary encode data before passing to learner with e.g. po(\"encode\"), po(\"modelmatrix\"), etc.   # with po(\"modelmatrix\") feature types and formula can be adjusted at the same time   cut = round(seq(0, max(task$data()$time), length.out = 20))   learner = as_learner(     po(\"modelmatrix\", formula = ~ as.factor(tend) + .) %>>%     lrn(\"regr.glmnet\", family = \"poisson\", lambda = 0)   )   grlrn = ppl(     \"survtoregr_pem\",     learner = learner,     cut = cut,     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   grlrn$predict(task, row_ids = part$test)    # xgboost regression learner   learner = as_learner(     po(\"modelmatrix\", formula = ~ .) %>>%     lrn(\"regr.xgboost\", objective = \"count:poisson\", nrounds = 100, eta = 0.1)   )    grlrn = ppl(     \"survtoregr_pem\",     learner = learner,     graph_learner = TRUE   )   grlrn$train(task, row_ids = part$train)   grlrn$predict(task, row_ids = part$test) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram Density Estimator — mlr_learners_dens.hist","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"Calls graphics::hist() result coerced distr6::Distribution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"LearnerDensHistogram$new() mlr_learners$get(\"dens.hist\") lrn(\"dens.hist\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"Type: \"dens\" Predict Types: pdf, cdf, distr Feature Types: integer, numeric Properties: - Packages: mlr3 mlr3proba distr6","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"mlr3::Learner -> mlr3proba::LearnerDens -> LearnerDensHistogram","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"LearnerDensHistogram$new() LearnerDensHistogram$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"","code":"LearnerDensHistogram$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"","code":"LearnerDensHistogram$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram Density Estimator — mlr_learners_dens.hist","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel Density Estimator — mlr_learners_dens.kde","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"Calls kernels implemented distr6 result coerced distr6::Distribution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"default bandwidth uses Silverman's rule--thumb Gaussian kernels, however non-Gaussian kernels recommended use mlr3tuning tune bandwidth cross-validation. density learners can used automated bandwidth selection. default kernel Epanechnikov (chosen reduce dependencies).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"LearnerDensKDE$new() mlr_learners$get(\"dens.kde\") lrn(\"dens.kde\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"Type: \"dens\" Predict Types: pdf, distr Feature Types: integer, numeric Properties: missings Packages: mlr3 mlr3proba distr6","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"Silverman, W. B (1986). Density Estimation Statistics Data Analysis. Chapman & Hall, London.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"mlr3::Learner -> mlr3proba::LearnerDens -> LearnerDensKDE","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"LearnerDensKDE$new() LearnerDensKDE$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"","code":"LearnerDensKDE$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"","code":"LearnerDensKDE$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_dens.kde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel Density Estimator — mlr_learners_dens.kde","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"Calls survival::coxph(). lp predicted survival::predict.coxph() distr predicted survival::survfit.coxph() crank identical lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"LearnerSurvCoxPH$new() mlr_learners$get(\"surv.coxph\") lrn(\"surv.coxph\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"Task type: “surv” Predict Types: “crank”, “distr”, “lp” Feature Types: “logical”, “integer”, “numeric”, “factor” Required Packages: mlr3, mlr3proba, survival, distr6","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"Cox DR (1972). “Regression Models Life-Tables.” Journal Royal Statistical Society: Series B (Methodological), 34(2), 187–202. doi:10.1111/j.2517-6161.1972.tb00899.x .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"mlr3::Learner -> mlr3proba::LearnerSurv -> LearnerSurvCoxPH","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"LearnerSurvCoxPH$new() LearnerSurvCoxPH$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"","code":"LearnerSurvCoxPH$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"","code":"LearnerSurvCoxPH$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.coxph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox Proportional Hazards Survival Learner — mlr_learners_surv.coxph","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Calls survival::survfit(). distr predicted estimating survival function survival::survfit() crank predicted sum cumulative hazard function (expected mortality) derived survival distribution, distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"LearnerSurvKaplan$new() mlr_learners$get(\"surv.kaplan\") lrn(\"surv.kaplan\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Task type: “surv” Predict Types: “crank”, “distr” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, mlr3proba, survival, distr6","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Empty ParamSet","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Kaplan EL, Meier P (1958). “Nonparametric Estimation Incomplete Observations.” Journal American Statistical Association, 53(282), 457–481. doi:10.1080/01621459.1958.10501452 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"mlr3::Learner -> mlr3proba::LearnerSurv -> LearnerSurvKaplan","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"LearnerSurvKaplan$new() LearnerSurvKaplan$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"","code":"LearnerSurvKaplan$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"","code":"LearnerSurvKaplan$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.kaplan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan-Meier Estimator Survival Learner — mlr_learners_surv.kaplan","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Calls rpart::rpart(). crank predicted using rpart::predict.rpart()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"LearnerSurvRpart$new() mlr_learners$get(\"surv.rpart\") lrn(\"surv.rpart\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Task type: “surv” Predict Types: “crank” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, mlr3proba, rpart, distr6, survival","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"xval set 0 order save computation time. model renamed keep_model.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Breiman L, Friedman JH, Olshen RA, Stone CJ (1984). Classification Regression Trees. Routledge. doi:10.1201/9781315139470 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"mlr3::Learner -> mlr3proba::LearnerSurv -> LearnerSurvRpart","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"LearnerSurvRpart$new() LearnerSurvRpart$importance() LearnerSurvRpart$selected_features() LearnerSurvRpart$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"","code":"LearnerSurvRpart$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"importance scores extracted model slot variable.importance.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"","code":"LearnerSurvRpart$importance()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Named numeric().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"Selected features extracted model slot frame$var.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"","code":"LearnerSurvRpart$selected_features()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"character().","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"","code":"LearnerSurvRpart$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_learners_surv.rpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rpart Survival Trees Survival Learner — mlr_learners_surv.rpart","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Loss Density Measure — mlr_measures_dens.logloss","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"Calculates cross-entropy, logarithmic (log), loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"Log Loss, context probabilistic predictions, defined negative log probability density function, \\(f\\), evaluated observed value, \\(y\\), $$L(f, y) = -\\log(f(y))$$","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureDensLogloss$new() mlr_measures$get(\"dens.logloss\") msr(\"dens.logloss\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"Type: \"density\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: pdf","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 1e-15.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"mlr3::Measure -> mlr3proba::MeasureDens -> MeasureDensLogloss","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"MeasureDensLogloss$new() MeasureDensLogloss$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"","code":"MeasureDensLogloss$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"","code":"MeasureDensLogloss$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_dens.logloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Loss Density Measure — mlr_measures_dens.logloss","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Loss Regression Measure — mlr_measures_regr.logloss","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"Calculates cross-entropy, logarithmic (log), loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"Log Loss, context probabilistic predictions, defined negative log probability density function, \\(f\\), evaluated observed value, \\(y\\), $$L(f, y) = -\\log(f(y))$$","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 1e-15.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"mlr3::Measure -> mlr3::MeasureRegr -> MeasureRegrLogloss","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"MeasureRegrLogloss$new() MeasureRegrLogloss$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"","code":"MeasureRegrLogloss$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"","code":"MeasureRegrLogloss$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_regr.logloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Loss Regression Measure — mlr_measures_regr.logloss","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"calibration method defined estimating $$\\hat{\\alpha} = \\sum \\delta_i / \\sum H_i(T_i)$$ \\(\\delta\\) observed censoring indicator test data, \\(H_i\\) predicted cumulative hazard, \\(T_i\\) observed survival time (event censoring). standard error given $$\\hat{\\alpha_{se}} = exp(1/\\sqrt{\\sum \\delta_i})$$ model well calibrated estimated \\(\\hat{\\alpha}\\) coefficient (returned score) equal 1.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvCalibrationAlpha$new() mlr_measures$get(\"surv.calib_alpha\") msr(\"surv.calib_alpha\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"Type: \"surv\" Range: \\((-\\infty, \\infty)\\) Minimize: FALSE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 0.001. se (logical(1)) TRUE return standard error measure, otherwise score (default). method (character(1)) Returns \\(\\hat{\\alpha}\\) equal ratio (default) \\(|1-\\hat{\\alpha}|\\) equal diff. diff, output score can minimized example used tuning purposes. parameter takes effect se FALSE. truncate (double(1))  parameter controls upper bound output score. use truncate = Inf default (truncation) user set reasonably given chosen method. Note truncation may severely limit automated tuning measure using method = diff.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"Van Houwelingen, C. H (2000). “Validation, calibration, revision combination prognostic survival models.” Statistics Medicine, 19(24), 3401–3415. doi:10.1002/1097-0258(20001230)19:24<3401::AID-SIM554>3.0.CO;2-2 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvCalibrationAlpha","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"MeasureSurvCalibrationAlpha$new() MeasureSurvCalibrationAlpha$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"","code":"MeasureSurvCalibrationAlpha$new(method = \"ratio\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"method defines output score return, see \"Parameter details\" section.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"","code":"MeasureSurvCalibrationAlpha$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_alpha.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Van Houwelingen's Calibration Alpha Survival Measure — mlr_measures_surv.calib_alpha","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"calibration method fits predicted linear predictor Cox PH model predictor new Cox PH model test data response. $$h(t|x) = h_0(t)exp(\\beta \\times lp)$$ \\(lp\\) predicted linear predictor test data. model well calibrated estimated \\(\\hat{\\beta}\\) coefficient (returned score) equal 1. Note: Assumes fitted model Cox PH (.e. lp prediction type).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvCalibrationBeta$new() mlr_measures$get(\"surv.calib_beta\") msr(\"surv.calib_beta\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"Type: \"surv\" Range: \\((-\\infty, \\infty)\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"se (logical(1)) TRUE return standard error measure standard error estimated coefficient \\(se_{\\hat{\\beta}}\\) Cox PH model. FALSE (default) returns estimated coefficient \\(\\hat{\\beta}\\). method (character(1)) Returns \\(\\hat{\\beta}\\) equal ratio (default) \\(|1-\\hat{\\beta}|\\) diff. diff, output score can minimized example used tuning purposes. parameter takes effect se FALSE.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"Van Houwelingen, C. H (2000). “Validation, calibration, revision combination prognostic survival models.” Statistics Medicine, 19(24), 3401–3415. doi:10.1002/1097-0258(20001230)19:24<3401::AID-SIM554>3.0.CO;2-2 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvCalibrationBeta","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"MeasureSurvCalibrationBeta$new() MeasureSurvCalibrationBeta$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"","code":"MeasureSurvCalibrationBeta$new(method = \"ratio\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"method defines output score return, see \"Parameter details\" section.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"","code":"MeasureSurvCalibrationBeta$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_beta.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Van Houwelingen's Calibration Beta Survival Measure — mlr_measures_surv.calib_beta","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"Calculates Integrated Calibration Index (ICI), evaluates point-calibration (.e. specific time point), see Austin et al. (2020).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"individual \\(\\) test set, observed survival outcome \\((t_i, \\delta_i)\\) (time censoring indicator) predicted survival function \\(S_i(t)\\). predicted probability event occurring specific time point \\(t_0\\), defined \\(\\hat{P_i}(t_0) = F_i(t_0) = 1 - S_i(t_0)\\). Using hazard regression (via polspline R package), smoothed calibration curve estimated fitting following model: $$log(h(t)) = g(log(− log(1 − \\hat{P}_{t_0})), t)$$ Note substitute probabilities \\(\\hat{P}_{t_0} = 0\\) small \\(\\epsilon\\) number avoid arithmetic issues (\\(log(0)\\)). \\(\\hat{P}_{t_0} = 1\\), use \\(1 - \\epsilon\\). model, smoothed probability occurrence \\(t_0\\) observation \\(\\) obtained \\(\\hat{P}_i^c(t_0)\\). Integrated Calibration Index computed across \\(N\\) test set observations : $$ICI = \\frac{1}{N} \\sum_{=1}^N | \\hat{P}_i^c(t_0) - \\hat{P}_i(t_0) |$$ Therefore, perfect calibration (smoothed probabilities match predicted probabilities observations) yields \\(ICI = 0\\), worst possible score \\(ICI = 1\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvICI$new() mlr_measures$get(\"surv.calib_index\") msr(\"surv.calib_index\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 1e-04. time (numeric(1)) specific time point \\(t_0\\) calibration evaluated. NULL, median observed time test set used. method (character(1)) Specifies summary statistic used calculate final calibration score. \"ICI\" (default): Uses mean absolute differences \\(| \\hat{P}_i^c(t_0) - \\hat{P}_i(t_0) |\\) across observations. \"E50\": Uses median absolute differences instead mean. \"E90\": Uses 90th percentile absolute differences, emphasizing higher deviations. \"Emax\": Uses maximum absolute difference, capturing largest discrepancy predicted smoothed probabilities. na.rm (logical(1)) TRUE (default) removes NAs/NaNs smoothed probabilities \\(\\hat{P}_i^c(t_0)\\) may arise. warning issued nonetheless cases.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"Austin, C. P, Harrell, E. F, van Klaveren, David (2020). “Graphical calibration curves integrated calibration index (ICI) survival models.” Statistics Medicine, 39(21), 2714. ISSN 10970258, doi:10.1002/SIM.8570 , https://pmc.ncbi.nlm.nih.gov/articles/PMC7497089/.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvICI","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"MeasureSurvICI$new() MeasureSurvICI$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"","code":"MeasureSurvICI$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"","code":"MeasureSurvICI$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.calib_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrated Calibration Index Survival Measure — mlr_measures_surv.calib_index","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # ICI at median test set time p$score(msr(\"surv.calib_index\")) #> surv.calib_index  #>        0.1717185   # ICI at specific time point p$score(msr(\"surv.calib_index\", time = 365)) #> surv.calib_index  #>        0.1974633   # E50 at specific time point p$score(msr(\"surv.calib_index\", method = \"E50\", time = 365)) #> surv.calib_index  #>        0.1912177"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"Calls survAUC::AUC.cd(). Assumes Cox PH model specification.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvChamblessAUC$new() mlr_measures$get(\"surv.chambless_auc\") msr(\"surv.chambless_auc\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"Chambless LE, Diao G (2006). “Estimation time-dependent area ROC curve long-term risk prediction.” Statistics Medicine, 25(20), 3474–3486. doi:10.1002/sim.2299 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvChamblessAUC","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"MeasureSurvChamblessAUC$new() MeasureSurvChamblessAUC$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"","code":"MeasureSurvChamblessAUC$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"","code":"MeasureSurvChamblessAUC$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.chambless_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chambless and Diao's AUC Survival Measure — mlr_measures_surv.chambless_auc","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # Integrated AUC score p$score(msr(\"surv.chambless_auc\"), task = task,         train_set = part$train, learner = cox) #> surv.chambless_auc  #>          0.7355354   # AUC at specific time point p$score(msr(\"surv.chambless_auc\", times = 600), task = task,         train_set = part$train, learner = cox) #> surv.chambless_auc  #>          0.7931581   # Integrated AUC at specific time points p$score(msr(\"surv.chambless_auc\", times = c(100, 200, 300, 400, 500)),         task = task, train_set = part$train, learner = cox) #> surv.chambless_auc  #>          0.7203975"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"Calculates weighted concordance statistics, , depending chosen weighting method (weight_meth) tied times parameter (tiex), equivalent several proposed methods. default, weighting applied equivalent Harrell's C-index.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"Kaplan-Meier estimate training survival distribution (\\(S\\)), Kaplan-Meier estimate training censoring distribution (\\(G\\)), following options time-independent concordance statistics (C-indexes) given weighted method: weight_meth: \"\" = weighting. (Harrell) \"GH\" = Gonen Heller's Concordance Index \"G\" = Weights concordance \\(1/G\\). \"G2\" = Weights concordance \\(1/G^2\\). (Uno et al.) \"SG\" = Weights concordance \\(S/G\\) (Shemper et al.) \"S\" = Weights concordance \\(S\\) (Peto Peto) last three require training data. \"GH\" applicable LearnerSurvCoxPH. implementation slightly different survival::concordance. Firstly implementation faster, secondly weights computed training dataset whereas survival::concordance weights computed testing data.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvCindex$new() mlr_measures$get(\"surv.cindex\") msr(\"surv.cindex\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: crank","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 0.001. t_max (numeric(1)) Cutoff time (.e. time horizon) evaluate concordance . p_max (numeric(1)) proportion censoring evaluate concordance given dataset. t_max specified, parameter ignored. weight_meth (character(1)) Method weighting concordance. Default \"\" Harrell's C. See details. tiex (numeric(1)) Weighting applied tied rankings, default give half (0.5) weighting.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"Peto, Richard, Peto, Julian (1972). “Asymptotically efficient rank invariant test procedures.” Journal Royal Statistical Society: Series (General), 135(2), 185–198. Harrell, E F, Califf, M R, Pryor, B D, Lee, L K, Rosati, R (1982). “Evaluating yield medical tests.” Jama, 247(18), 2543–2546. Goenen M, Heller G (2005). “Concordance probability discriminatory power proportional hazards regression.” Biometrika, 92(4), 965–970. doi:10.1093/biomet/92.4.965 . Schemper, Michael, Wakounig, Samo, Heinze, Georg (2009). “estimation average hazard ratios weighted Cox regression.” Statistics Medicine, 28(19), 2473–2489. doi:10.1002/sim.3623 . Uno H, Cai T, Pencina MJ, D'Agostino RB, Wei LJ (2011). “C-statistics evaluating overall adequacy risk prediction procedures censored survival data.” Statistics Medicine, n/–n/. doi:10.1002/sim.4154 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvCindex","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"MeasureSurvCindex$new() MeasureSurvCindex$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"abstract class constructed directly.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"","code":"MeasureSurvCindex$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"","code":"MeasureSurvCindex$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.cindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concordance Statistics Survival Measure — mlr_measures_surv.cindex","text":"","code":"library(mlr3) task = tsk(\"rats\") learner = lrn(\"surv.coxph\") part = partition(task) # train/test split learner$train(task, part$train) p = learner$predict(task, part$test)  # Harrell's C-index p$score(msr(\"surv.cindex\")) # same as `p$score()` #> surv.cindex  #>   0.7977906   # Uno's C-index p$score(msr(\"surv.cindex\", weight_meth = \"G2\"),         task = task, train_set = part$train) #> surv.cindex  #>   0.8261811   # Harrell's C-index evaluated up to a specific time horizon p$score(msr(\"surv.cindex\", t_max = 97)) #> surv.cindex  #>   0.7880208   # Harrell's C-index evaluated up to the time corresponding to 30% of censoring p$score(msr(\"surv.cindex\", p_max = 0.3)) #> surv.cindex  #>   0.7668919"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":null,"dir":"Reference","previous_headings":"","what":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"calibration method defined calculating following statistic: $$s = B/n \\sum_i (P_i - n/B)^2$$ \\(B\\) number 'buckets' (equally divide \\([0,1]\\) intervals), \\(n\\) number predictions, \\(P_i\\) observed proportion observations \\(\\)th interval. observation assigned \\(\\)th bucket, predicted survival probability time event falls within corresponding interval. statistic assumes censoring time independent death time. model well D-calibrated \\(s \\sim Unif(B)\\), tested chisq.test (\\(p > 0.05\\) well-calibrated, .e. higher p-values preferred). Model \\(\\) better calibrated model \\(j\\) \\(s() < s(j)\\), meaning lower values measure preferred.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"measure can either return test statistic p-value chisq.test. former useful model comparison whereas latter useful determining model well-calibrated. chisq = FALSE s predicted value can manually compute p.value pchisq(s, B - 1, lower.tail = FALSE). NOTE: measure still experimental theoretically implementation. Results therefore taken indicator performance conclusive judgements model calibration.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvDCalibration$new() mlr_measures$get(\"surv.dcalib\") msr(\"surv.dcalib\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"B (integer(1))  Number buckets test uniform predictions . Default 10 recommended Haider et al. (2020). Changing parameter affects truncate. chisq (logical(1))  TRUE returns p-value corresponding chisq.test instead measure. Default FALSE returns statistic s. can manually get p-value executing pchisq(s, B - 1, lower.tail = FALSE). null hypothesis model D-calibrated. truncate (double(1))  parameter controls upper bound output statistic, chisq FALSE. use truncate = Inf default values \\(10-16\\) sufficient purposes, correspond p-values \\(0.35-0.06\\) chisq.test using default \\(B = 10\\) buckets. Values \\(B > 10\\) translate even lower p-values thus less D-calibrated models. number buckets \\(B\\) changes, probably want change truncate value well correspond p-value significance. Note truncation may severely limit automated tuning measure.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"Haider, Humza, Hoehn, Bret, Davis, Sarah, Greiner, Russell (2020). “Effective Ways Build Evaluate Individual Survival Distributions.” Journal Machine Learning Research, 21(85), 1–63. https://jmlr.org/papers/v21/18-772.html.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvDCalibration","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"MeasureSurvDCalibration$new() MeasureSurvDCalibration$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"","code":"MeasureSurvDCalibration$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"","code":"MeasureSurvDCalibration$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.dcalib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"D-Calibration Survival Measure — mlr_measures_surv.dcalib","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"Calculates Integrated Survival Brier Score (ISBS), Integrated Graf Score squared survival loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"measure two dimensions: (test set) observations time points. specific individual \\(\\) test set, observed survival outcome \\((t_i, \\delta_i)\\) (time censoring indicator) predicted survival function \\(S_i(t)\\), observation-wise loss integrated across time dimension time cutoff \\(\\tau^*\\), : $$L_{ISBS}(S_i, t_i, \\delta_i) = \\int^{\\tau^*}_0  \\frac{S_i^2(\\tau) \\text{}(t_i \\leq \\tau, \\delta_i=1)}{G(t_i)} + \\frac{(1-S_i(\\tau))^2 \\text{}(t_i > \\tau)}{G(\\tau)} \\ d\\tau$$ \\(G\\) Kaplan-Meier estimate censoring distribution. re-weighted ISBS (RISBS) : $$L_{RISBS}(S_i, t_i, \\delta_i) = \\delta_i \\frac{\\int^{\\tau^*}_0  S_i^2(\\tau) \\text{}(t_i \\leq \\tau) + (1-S_i(\\tau))^2 \\text{}(t_i > \\tau) \\ d\\tau}{G(t_i)}$$ always weighted \\(G(t_i)\\) equal zero censored subject. get single score across \\(N\\) observations test set, return average time-integrated observation-wise scores: $$\\sum_{=1}^N L(S_i, t_i, \\delta_i) / N$$","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvGraf$new() mlr_measures$get(\"surv.graf\") msr(\"surv.graf\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. t_max (numeric(1)) Cutoff time \\(\\tau^*\\) (.e. time horizon) evaluate measure (truncate \\(S(t)\\)). Mutually exclusive p_max times. recommended set t_max avoid division eps, see \"Time Cutoff Details\" section. t_max specified, Inf time horizon assumed. p_max (numeric(1)) proportion censoring integrate given dataset. Mutually exclusive times t_max. method (integer(1)) integrate == TRUE, selects integration weighting method. method == 1 corresponds weighting time-point equally taking mean score discrete time-points. method == 2 corresponds calculating mean weighted difference time-points. method == 2 default value, line packages. se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean). proper (logical(1)) TRUE weights scores censoring distribution observed event time, results strictly proper scoring rule censoring survival time distributions independent sufficiently large dataset used, see Sonabend et al. (2024). FALSE weights scores Graf method common usage loss proper. See \"Properness\" section details. eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 0.001. ERV (logical(1)) TRUE Explained Residual Variation method applied, means score standardized Kaplan-Meier baseline. Default FALSE. remove_obs (logical(1)) effective t_max p_max provided. Default FALSE. TRUE, remove test observations observed time (event censoring) strictly larger t_max. See \"Time Cutoff Details\" section details.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"properness","dir":"Reference","previous_headings":"","what":"Properness","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"RISBS strictly proper censoring distribution independent survival distribution \\(G(t)\\) fit sufficiently large dataset. ISBS never proper. Use proper = FALSE ISBS proper = TRUE RISBS. Results may different many observations censored last observed time due division \\(1/eps\\) proper = TRUE. See Sonabend et al. (2024) details. use proper = TRUE considered experimental used caution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"time-points-used-for-evaluation","dir":"Reference","previous_headings":"","what":"Time points used for evaluation","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"times argument specified (NULL), unique (sorted) time points test set used evaluation time-integrated score. design decision due fact different predicted survival distributions \\(S(t)\\) usually discretized time domain may differ, .e. case survival predictions come different survival learners. Essentially, using set time points calculation score minimizes bias come using different time points. note \\(S(t)\\) default constantly interpolated time points fall outside discretized time domain. Naturally, times argument specified, exactly time points used evaluation. warning given user case specified times fall outside time point range test set. assumption test set large enough, time domain/range similar one train set, therefore time points outside domain might lead interpolation extrapolation \\(S(t)\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"implementation-differences","dir":"Reference","previous_headings":"","what":"Implementation differences","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"comparing integrated graf score packages, e.g. pec, method = 2 used. However results may still slightly different package uses survfit estimate censoring distribution, line Graf 1999 paper; whereas packages use prodlim reverse = TRUE (meaning Kaplan-Meier used).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"data-used-for-estimating-censoring-distribution","dir":"Reference","previous_headings":"","what":"Data used for Estimating Censoring Distribution","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"task train_set passed $score \\(G(t)\\) fit using observations train set, otherwise test set used. Using train set likely reduce bias caused calculating parts measure test data evaluating. Also usually means data used fitting censoring distribution \\(G(t)\\) via Kaplan-Meier. training data automatically used scoring resamplings.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"time-cutoff-details","dir":"Reference","previous_headings":"","what":"Time Cutoff Details","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"t_max p_max given, predicted survival function \\(S(t)\\) truncated time cutoff observations.  Also, remove_obs = TRUE, observations observed times \\(t > t_{max}\\) removed. data preprocessing step mitigates issues arise using IPCW cases administrative censoring, see Kvamme et al. (2023). Practically, step, along setting time cutoff t_max, helps mitigate inflation score observed observation censored final time point. cases, \\(G(t) = 0\\), triggering use small constant eps instead. inflation particularly impacts proper version score, see Sonabend et al. (2024) details. Note t_max remove_obs parameters affect estimation censoring distribution, .e. always observations used estimating \\(G(t)\\). remove_obs = FALSE, inflated scores may occur. aligns closely definitions presented original papers, can lead misleading evaluation poor optimization outcomes using score model tuning.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"Graf E, Schmoor C, Sauerbrei W, Schumacher M (1999). “Assessment comparison prognostic classification schemes survival data.” Statistics Medicine, 18(17-18), 2529–2545. doi:10.1002/(sici)1097-0258(19990915/30)18:17/18<2529::aid-sim274>3.0.co;2-5 . Sonabend, Raphael, Zobolas, John, Kopper, Philipp, Burk, Lukas, Bender, Andreas (2024). “Examining properness external validation survival models squared logarithmic losses.” https://arxiv.org/abs/2212.05260v2. Kvamme, Havard, Borgan, Ornulf (2023). “Brier Score Administrative Censoring: Problems Solution.” Journal Machine Learning Research, 24(2), 1–26. ISSN 1533-7928, http://jmlr.org/papers/v24/19-1030.html.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvGraf","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"MeasureSurvGraf$new() MeasureSurvGraf$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"","code":"MeasureSurvGraf$new(ERV = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"ERV (logical(1)) Standardize measure Kaplan-Meier baseline (Explained Residual Variation)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"","code":"MeasureSurvGraf$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.graf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrated Brier Score Survival Measure — mlr_measures_surv.graf","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # ISBS, G(t) calculated using the test set p$score(msr(\"surv.graf\")) #> surv.graf  #> 0.1827361   # ISBS, G(t) calculated using the train set (always recommended) p$score(msr(\"surv.graf\"), task = task, train_set = part$train) #> surv.graf  #> 0.1958332   # ISBS, ERV score (comparing with KM baseline) p$score(msr(\"surv.graf\", ERV = TRUE), task = task, train_set = part$train) #>   surv.graf  #> -0.07193821   # ISBS at specific time point p$score(msr(\"surv.graf\", times = 365), task = task, train_set = part$train) #> surv.graf  #> 0.2822643   # ISBS at multiple time points (integrated) p$score(msr(\"surv.graf\", times = c(125, 365, 450), integrated = TRUE),         task = task, train_set = part$train) #> surv.graf  #> 0.2367225   # ISBS, use time cutoff p$score(msr(\"surv.graf\", t_max = 700), task = task, train_set = part$train) #> surv.graf  #> 0.2158591   # ISBS, use time cutoff and also remove observations p$score(msr(\"surv.graf\", t_max = 700, remove_obs = TRUE),         task = task, train_set = part$train) #> surv.graf  #> 0.1943991   # ISBS, use time cutoff corresponding to specific proportion of censoring on the test set p$score(msr(\"surv.graf\", p_max = 0.8), task = task, train_set = part$train) #> surv.graf  #> 0.2251482   # RISBS, G(t) calculated using the train set p$score(msr(\"surv.graf\", proper = TRUE), task = task, train_set = part$train) #> surv.graf  #> 0.2065766"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"Calls survAUC::AUC.hc(). Assumes random censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvHungAUC$new() mlr_measures$get(\"surv.hung_auc\") msr(\"surv.hung_auc\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"Hung H, Chiang C (2010). “Estimation methods time-dependent AUC models survival data.” Canadian Journal Statistics / La Revue Canadienne de Statistique, 38(1), 8–26. https://www.jstor.org/stable/27805213.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvHungAUC","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"MeasureSurvHungAUC$new() MeasureSurvHungAUC$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"","code":"MeasureSurvHungAUC$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"","code":"MeasureSurvHungAUC$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.hung_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hung and Chiang's AUC Survival Measure — mlr_measures_surv.hung_auc","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # Integrated AUC score p$score(msr(\"surv.hung_auc\"), task = task,         train_set = part$train, learner = cox) #> surv.hung_auc  #>     0.6300067   # AUC at specific time point p$score(msr(\"surv.hung_auc\", times = 600), task = task,         train_set = part$train, learner = cox) #> surv.hung_auc  #>     0.6389341   # Integrated AUC at specific time points p$score(msr(\"surv.hung_auc\", times = c(100, 200, 300, 400, 500)),         task = task, train_set = part$train, learner = cox) #> surv.hung_auc  #>     0.6809151"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"Calculates Integrated Survival Log-Likelihood (ISLL) Integrated Logarithmic (log) Loss, aka integrated cross entropy.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"measure two dimensions: (test set) observations time points. specific individual \\(\\) test set, observed survival outcome \\((t_i, \\delta_i)\\) (time censoring indicator) predicted survival function \\(S_i(t)\\), observation-wise loss integrated across time dimension time cutoff \\(\\tau^*\\), : $$L_{ISLL}(S_i, t_i, \\delta_i) = - \\int^{\\tau^*}_0  \\frac{log[1-S_i(\\tau)] \\text{}(t_i \\leq \\tau, \\delta_i=1)}{G(t_i)} + \\frac{\\log[S_i(\\tau)] \\text{}(t_i > \\tau)}{G(\\tau)} \\ d\\tau$$ \\(G\\) Kaplan-Meier estimate censoring distribution. re-weighted ISLL (RISLL) : $$L_{RISLL}(S_i, t_i, \\delta_i) = -\\delta_i \\frac{\\int^{\\tau^*}_0  \\log[1-S_i(\\tau)]) \\text{}(t_i \\leq \\tau) + \\log[S_i(\\tau)] \\text{}(t_i > \\tau) \\ d\\tau}{G(t_i)}$$ always weighted \\(G(t_i)\\) equal zero censored subject. get single score across \\(N\\) observations test set, return average time-integrated observation-wise scores: $$\\sum_{=1}^N L(S_i, t_i, \\delta_i) / N$$","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvIntLogloss$new() mlr_measures$get(\"surv.intlogloss\") msr(\"surv.intlogloss\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. t_max (numeric(1)) Cutoff time \\(\\tau^*\\) (.e. time horizon) evaluate measure (truncate \\(S(t)\\)). Mutually exclusive p_max times. recommended set t_max avoid division eps, see \"Time Cutoff Details\" section. t_max specified, Inf time horizon assumed. p_max (numeric(1)) proportion censoring integrate given dataset. Mutually exclusive times t_max. method (integer(1)) integrate == TRUE, selects integration weighting method. method == 1 corresponds weighting time-point equally taking mean score discrete time-points. method == 2 corresponds calculating mean weighted difference time-points. method == 2 default value, line packages. se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean). proper (logical(1)) TRUE weights scores censoring distribution observed event time, results strictly proper scoring rule censoring survival time distributions independent sufficiently large dataset used, see Sonabend et al. (2024). FALSE weights scores Graf method common usage loss proper. See \"Properness\" section details. eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 0.001. ERV (logical(1)) TRUE Explained Residual Variation method applied, means score standardized Kaplan-Meier baseline. Default FALSE. remove_obs (logical(1)) effective t_max p_max provided. Default FALSE. TRUE, remove test observations observed time (event censoring) strictly larger t_max. See \"Time Cutoff Details\" section details.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"properness","dir":"Reference","previous_headings":"","what":"Properness","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"RISLL strictly proper censoring distribution independent survival distribution \\(G(t)\\) fit sufficiently large dataset. ISLL never proper. Use proper = FALSE ISLL proper = TRUE RISLL. Results may different many observations censored last observed time due division \\(1/eps\\) proper = TRUE. See Sonabend et al. (2024) details. use proper = TRUE considered experimental used caution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"time-points-used-for-evaluation","dir":"Reference","previous_headings":"","what":"Time points used for evaluation","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"times argument specified (NULL), unique (sorted) time points test set used evaluation time-integrated score. design decision due fact different predicted survival distributions \\(S(t)\\) usually discretized time domain may differ, .e. case survival predictions come different survival learners. Essentially, using set time points calculation score minimizes bias come using different time points. note \\(S(t)\\) default constantly interpolated time points fall outside discretized time domain. Naturally, times argument specified, exactly time points used evaluation. warning given user case specified times fall outside time point range test set. assumption test set large enough, time domain/range similar one train set, therefore time points outside domain might lead interpolation extrapolation \\(S(t)\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"implementation-differences","dir":"Reference","previous_headings":"","what":"Implementation differences","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"comparing integrated graf score packages, e.g. pec, method = 2 used. However results may still slightly different package uses survfit estimate censoring distribution, line Graf 1999 paper; whereas packages use prodlim reverse = TRUE (meaning Kaplan-Meier used).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"data-used-for-estimating-censoring-distribution","dir":"Reference","previous_headings":"","what":"Data used for Estimating Censoring Distribution","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"task train_set passed $score \\(G(t)\\) fit using observations train set, otherwise test set used. Using train set likely reduce bias caused calculating parts measure test data evaluating. Also usually means data used fitting censoring distribution \\(G(t)\\) via Kaplan-Meier. training data automatically used scoring resamplings.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"time-cutoff-details","dir":"Reference","previous_headings":"","what":"Time Cutoff Details","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"t_max p_max given, predicted survival function \\(S(t)\\) truncated time cutoff observations.  Also, remove_obs = TRUE, observations observed times \\(t > t_{max}\\) removed. data preprocessing step mitigates issues arise using IPCW cases administrative censoring, see Kvamme et al. (2023). Practically, step, along setting time cutoff t_max, helps mitigate inflation score observed observation censored final time point. cases, \\(G(t) = 0\\), triggering use small constant eps instead. inflation particularly impacts proper version score, see Sonabend et al. (2024) details. Note t_max remove_obs parameters affect estimation censoring distribution, .e. always observations used estimating \\(G(t)\\). remove_obs = FALSE, inflated scores may occur. aligns closely definitions presented original papers, can lead misleading evaluation poor optimization outcomes using score model tuning.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"Graf E, Schmoor C, Sauerbrei W, Schumacher M (1999). “Assessment comparison prognostic classification schemes survival data.” Statistics Medicine, 18(17-18), 2529–2545. doi:10.1002/(sici)1097-0258(19990915/30)18:17/18<2529::aid-sim274>3.0.co;2-5 . Sonabend, Raphael, Zobolas, John, Kopper, Philipp, Burk, Lukas, Bender, Andreas (2024). “Examining properness external validation survival models squared logarithmic losses.” https://arxiv.org/abs/2212.05260v2. Kvamme, Havard, Borgan, Ornulf (2023). “Brier Score Administrative Censoring: Problems Solution.” Journal Machine Learning Research, 24(2), 1–26. ISSN 1533-7928, http://jmlr.org/papers/v24/19-1030.html.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvIntLogloss","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"MeasureSurvIntLogloss$new() MeasureSurvIntLogloss$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"","code":"MeasureSurvIntLogloss$new(ERV = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"ERV (logical(1)) Standardize measure Kaplan-Meier baseline (Explained Residual Variation)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"","code":"MeasureSurvIntLogloss$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.intlogloss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrated Log-Likelihood Survival Measure — mlr_measures_surv.intlogloss","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # ISLL, G(t) calculated using the test set p$score(msr(\"surv.intlogloss\")) #> surv.intlogloss  #>       0.5883103   # ISLL, G(t) calculated using the train set (always recommended) p$score(msr(\"surv.intlogloss\"), task = task, train_set = part$train) #> surv.intlogloss  #>       0.6077849   # ISLL, ERV score (comparing with KM baseline) p$score(msr(\"surv.intlogloss\", ERV = TRUE), task = task, train_set = part$train) #> surv.intlogloss  #>      -0.2033686   # ISLL at specific time point p$score(msr(\"surv.intlogloss\", times = 365), task = task, train_set = part$train) #> surv.intlogloss  #>       0.7714339   # ISLL at multiple time points (integrated) p$score(msr(\"surv.intlogloss\", times = c(125, 365, 450), integrated = TRUE),         task = task, train_set = part$train) #> surv.intlogloss  #>       0.6111196   # ISLL, use time cutoff p$score(msr(\"surv.intlogloss\", t_max = 700), task = task, train_set = part$train) #> surv.intlogloss  #>       0.6137793   # ISLL, use time cutoff and also remove observations p$score(msr(\"surv.intlogloss\", t_max = 700, remove_obs = TRUE),         task = task, train_set = part$train) #> surv.intlogloss  #>       0.4975043   # ISLL, use time cutoff corresponding to specific proportion of censoring on the test set p$score(msr(\"surv.intlogloss\", p_max = 0.8), task = task, train_set = part$train) #> surv.intlogloss  #>       0.5812108   # RISLL, G(t) calculated using the train set p$score(msr(\"surv.intlogloss\", proper = TRUE), task = task, train_set = part$train) #> surv.intlogloss  #>        0.385864"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Calculates cross-entropy, negative log-likelihood (NLL) logarithmic (log), loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Log Loss, context probabilistic predictions, defined negative log probability density function, \\(f\\), evaluated observation time (event censoring), \\(t\\), $$L_{NLL}(f, t) = -\\log[f(t)]$$ standard error Log Loss, L, approximated via, $$se(L) = sd(L)/\\sqrt{N}$$ \\(N\\) number observations test set, \\(sd\\) standard deviation. Re-weighted Negative Log-Likelihood (RNLL) IPCW (Inverse Probability Censoring Weighted) Log Loss defined $$L_{RNLL}(f, t, \\delta) = - \\frac{\\delta \\log[f(t)]}{G(t)}$$ \\(\\delta\\) censoring indicator \\(G(t)\\) Kaplan-Meier estimator censoring distribution. observations experienced event taking account RNLL (.e. \\(\\delta = 1\\)) \\(f(t), G(t)\\) calculated event times. censored observations exist test set, NaN returned.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvLogloss$new() mlr_measures$get(\"surv.logloss\") msr(\"surv.logloss\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 1e-15. se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean). ERV (logical(1)) TRUE Explained Residual Variation method applied, means score standardized Kaplan-Meier baseline. Default FALSE. IPCW (logical(1)) TRUE (default) returns \\(L_{RNLL}\\) score (proper), otherwise \\(L_{NLL}\\) score (improper). See Sonabend et al. (2024) details.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"data-used-for-estimating-censoring-distribution","dir":"Reference","previous_headings":"","what":"Data used for Estimating Censoring Distribution","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"task train_set passed $score \\(G(t)\\) fit using observations train set, otherwise test set used. Using train set likely reduce bias caused calculating parts measure test data evaluating. Also usually means data used fitting censoring distribution \\(G(t)\\) via Kaplan-Meier. training data automatically used scoring resamplings.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Sonabend, Raphael, Zobolas, John, Kopper, Philipp, Burk, Lukas, Bender, Andreas (2024). “Examining properness external validation survival models squared logarithmic losses.” https://arxiv.org/abs/2212.05260v2.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvLogloss","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"MeasureSurvLogloss$new() MeasureSurvLogloss$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"","code":"MeasureSurvLogloss$new(ERV = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"ERV (logical(1)) Standardize measure Kaplan-Meier baseline (Explained Residual Variation)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"","code":"MeasureSurvLogloss$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.logloss.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log-Likelihood Survival Measure — mlr_measures_surv.logloss","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"Calculates mean absolute error (MAE). MAE defined $$\\frac{1}{n} \\sum |t - \\hat{t}|$$ \\(t\\) true value \\(\\hat{t}\\) prediction. Censored observations test set ignored.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvMAE$new() mlr_measures$get(\"surv.mae\") msr(\"surv.mae\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvMAE","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"MeasureSurvMAE$new() MeasureSurvMAE$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"","code":"MeasureSurvMAE$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"","code":"MeasureSurvMAE$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Absolute Error Survival Measure — mlr_measures_surv.mae","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"Calculates mean squared error (MSE). MSE defined $$\\frac{1}{n} \\sum ((t - \\hat{t})^2)$$ \\(t\\) true value \\(\\hat{t}\\) prediction. Censored observations test set ignored.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvMSE$new() mlr_measures$get(\"surv.mse\") msr(\"surv.mse\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvMSE","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"MeasureSurvMSE$new() MeasureSurvMSE$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"","code":"MeasureSurvMSE$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"","code":"MeasureSurvMSE$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Squared Error Survival Measure — mlr_measures_surv.mse","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Calls survAUC::Nagelk(). Assumes Cox PH model specification.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvNagelkR2$new() mlr_measures$get(\"surv.nagelk_r2\") msr(\"surv.nagelk_r2\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Empty ParamSet","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Nagelkerke, JD N, others (1991). “note general definition coefficient determination.” Biometrika, 78(3), 691–692.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvNagelkR2","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"MeasureSurvNagelkR2$new() MeasureSurvNagelkR2$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"","code":"MeasureSurvNagelkR2$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"","code":"MeasureSurvNagelkR2$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.nagelk_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nagelkerke's R2 Survival Measure — mlr_measures_surv.nagelk_r2","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"Calls survAUC::OXS(). Assumes Cox PH model specification.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvOQuigleyR2$new() mlr_measures$get(\"surv.oquigley_r2\") msr(\"surv.oquigley_r2\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"Empty ParamSet","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"O'Quigley J, Xu R, Stare J (2005). “Explained randomness proportional hazards models.” Statistics Medicine, 24(3), 479–489. doi:10.1002/sim.1946 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvOQuigleyR2","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"MeasureSurvOQuigleyR2$new() MeasureSurvOQuigleyR2$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"","code":"MeasureSurvOQuigleyR2$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"","code":"MeasureSurvOQuigleyR2$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.oquigley_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"O'Quigley, Xu, and Stare's R2 Survival Measure — mlr_measures_surv.oquigley_r2","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":null,"dir":"Reference","previous_headings":"","what":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"Calculates right-censored logarithmic (log), loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"RCLL, context probabilistic predictions, defined $$L(f, t, \\Delta) = -log(\\Delta f(t) + (1 - \\Delta) S(t))$$ \\(\\Delta\\) censoring indicator, \\(f\\) probability density function \\(S\\) survival function. RCLL proper given censoring survival distribution independent, see Rindt et al. (2022). Note: Even though RCLL proper scoring rule, calculation \\(f(t)\\) (case discrete, .e. probability mass function) time points test set exist predicted survival matrix (distr), results 0 values, substituted \"eps\" implementation, therefore skewing result towards \\(-log(eps)\\). problem also discussed Rindt et al. (2022), authors perform interpolation get non-zero values \\(f(t)\\). handled mlr3proba way, advise using measure model evaluation.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvRCLL$new() mlr_measures$get(\"surv.rcll\") msr(\"surv.rcll\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 1e-15. se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean). ERV (logical(1)) TRUE Explained Residual Variation method applied, means score standardized Kaplan-Meier baseline. Default FALSE. na.rm (logical(1)) TRUE (default) removes NAs individual score calculations.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"Avati, Anand, Duan, Tony, Zhou, Sharon, Jung, Kenneth, Shah, H N, Ng, Y (2020). “Countdown Regression: Sharp Calibrated Survival Predictions.” Proceedings 35th Uncertainty Artificial Intelligence Conference, 115(4), 145–155. https://proceedings.mlr.press/v115/avati20a.html. Rindt, David, Hu, Robert, Steinsaltz, David, Sejdinovic, Dino (2022). “Survival regression proper scoring rules monotonic neural networks.” Proceedings 25th International Conference Artificial Intelligence Statistics, 151(4), 1190–1205. https://proceedings.mlr.press/v151/rindt22a.html.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvRCLL","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"MeasureSurvRCLL$new() MeasureSurvRCLL$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"","code":"MeasureSurvRCLL$new(ERV = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"ERV (logical(1)) Standardize measure Kaplan-Meier baseline (Explained Residual Variation)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"","code":"MeasureSurvRCLL$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rcll.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right-Censored Log Loss Survival Measure — mlr_measures_surv.rcll","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"Calculates root mean squared error (RMSE). RMSE defined $$\\sqrt{\\frac{1}{n} \\sum ((t - \\hat{t})^2)}$$ \\(t\\) true value \\(\\hat{t}\\) prediction. Censored observations test set ignored.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvRMSE$new() mlr_measures$get(\"surv.rmse\") msr(\"surv.rmse\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvRMSE","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"MeasureSurvRMSE$new() MeasureSurvRMSE$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"","code":"MeasureSurvRMSE$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"","code":"MeasureSurvRMSE$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Squared Error Survival Measure — mlr_measures_surv.rmse","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"Calculates Integrated Schmid Score (ISS), aka integrated absolute loss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"measure two dimensions: (test set) observations time points. specific individual \\(\\) test set, observed survival outcome \\((t_i, \\delta_i)\\) (time censoring indicator) predicted survival function \\(S_i(t)\\), observation-wise loss integrated across time dimension time cutoff \\(\\tau^*\\), : $$L_{ISS}(S_i, t_i, \\delta_i) = \\int^{\\tau^*}_0  \\frac{S_i(\\tau) \\text{}(t_i \\leq \\tau, \\delta=1)}{G(t_i)} + \\frac{(1-S_i(\\tau)) \\text{}(t_i > \\tau)}{G(\\tau)} \\ d\\tau$$ \\(G\\) Kaplan-Meier estimate censoring distribution. re-weighted ISS (RISS) : $$L_{RISS}(S_i, t_i, \\delta_i) = \\delta_i \\frac{\\int^{\\tau^*}_0  S_i(\\tau) \\text{}(t_i \\leq \\tau) + (1-S_i(\\tau)) \\text{}(t_i > \\tau) \\ d\\tau}{G(t_i)}$$ always weighted \\(G(t_i)\\) equal zero censored subject. get single score across \\(N\\) observations test set, return average time-integrated observation-wise scores: $$\\sum_{=1}^N L(S_i, t_i, \\delta_i) / N$$","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvSchmid$new() mlr_measures$get(\"surv.schmid\") msr(\"surv.schmid\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"Type: \"surv\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: distr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. t_max (numeric(1)) Cutoff time \\(\\tau^*\\) (.e. time horizon) evaluate measure (truncate \\(S(t)\\)). Mutually exclusive p_max times. recommended set t_max avoid division eps, see \"Time Cutoff Details\" section. t_max specified, Inf time horizon assumed. p_max (numeric(1)) proportion censoring integrate given dataset. Mutually exclusive times t_max. method (integer(1)) integrate == TRUE, selects integration weighting method. method == 1 corresponds weighting time-point equally taking mean score discrete time-points. method == 2 corresponds calculating mean weighted difference time-points. method == 2 default value, line packages. se (logical(1)) TRUE returns standard error measure otherwise returns mean across individual scores, e.g. mean per observation scores. Default FALSE (returns mean). proper (logical(1)) TRUE weights scores censoring distribution observed event time, results strictly proper scoring rule censoring survival time distributions independent sufficiently large dataset used, see Sonabend et al. (2024). FALSE weights scores Graf method common usage loss proper. See \"Properness\" section details. eps (numeric(1)) small number substitute zero values order prevent errors e.g. log(0) /division--zero calculations. Default value 0.001. ERV (logical(1)) TRUE Explained Residual Variation method applied, means score standardized Kaplan-Meier baseline. Default FALSE. remove_obs (logical(1)) effective t_max p_max provided. Default FALSE. TRUE, remove test observations observed time (event censoring) strictly larger t_max. See \"Time Cutoff Details\" section details.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"properness","dir":"Reference","previous_headings":"","what":"Properness","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"RISS strictly proper censoring distribution independent survival distribution \\(G(t)\\) fit sufficiently large dataset. ISS never proper. Use proper = FALSE ISS proper = TRUE RISS. Results may different many observations censored last observed time due division \\(1/eps\\) proper = TRUE. See Sonabend et al. (2024) details. use proper = TRUE considered experimental used caution.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"time-points-used-for-evaluation","dir":"Reference","previous_headings":"","what":"Time points used for evaluation","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"times argument specified (NULL), unique (sorted) time points test set used evaluation time-integrated score. design decision due fact different predicted survival distributions \\(S(t)\\) usually discretized time domain may differ, .e. case survival predictions come different survival learners. Essentially, using set time points calculation score minimizes bias come using different time points. note \\(S(t)\\) default constantly interpolated time points fall outside discretized time domain. Naturally, times argument specified, exactly time points used evaluation. warning given user case specified times fall outside time point range test set. assumption test set large enough, time domain/range similar one train set, therefore time points outside domain might lead interpolation extrapolation \\(S(t)\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"implementation-differences","dir":"Reference","previous_headings":"","what":"Implementation differences","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"comparing integrated graf score packages, e.g. pec, method = 2 used. However results may still slightly different package uses survfit estimate censoring distribution, line Graf 1999 paper; whereas packages use prodlim reverse = TRUE (meaning Kaplan-Meier used).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"data-used-for-estimating-censoring-distribution","dir":"Reference","previous_headings":"","what":"Data used for Estimating Censoring Distribution","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"task train_set passed $score \\(G(t)\\) fit using observations train set, otherwise test set used. Using train set likely reduce bias caused calculating parts measure test data evaluating. Also usually means data used fitting censoring distribution \\(G(t)\\) via Kaplan-Meier. training data automatically used scoring resamplings.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"time-cutoff-details","dir":"Reference","previous_headings":"","what":"Time Cutoff Details","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"t_max p_max given, predicted survival function \\(S(t)\\) truncated time cutoff observations.  Also, remove_obs = TRUE, observations observed times \\(t > t_{max}\\) removed. data preprocessing step mitigates issues arise using IPCW cases administrative censoring, see Kvamme et al. (2023). Practically, step, along setting time cutoff t_max, helps mitigate inflation score observed observation censored final time point. cases, \\(G(t) = 0\\), triggering use small constant eps instead. inflation particularly impacts proper version score, see Sonabend et al. (2024) details. Note t_max remove_obs parameters affect estimation censoring distribution, .e. always observations used estimating \\(G(t)\\). remove_obs = FALSE, inflated scores may occur. aligns closely definitions presented original papers, can lead misleading evaluation poor optimization outcomes using score model tuning.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"Schemper, Michael, Henderson, Robin (2000). “Predictive Accuracy Explained Variation Cox Regression.” Biometrics, 56, 249–255. doi:10.1002/sim.1486 . Schmid, Matthias, Hielscher, Thomas, Augustin, Thomas, Gefeller, Olaf (2011). “Robust Alternative Schemper-Henderson Estimator Prediction Error.” Biometrics, 67(2), 524–535. doi:10.1111/j.1541-0420.2010.01459.x . Sonabend, Raphael, Zobolas, John, Kopper, Philipp, Burk, Lukas, Bender, Andreas (2024). “Examining properness external validation survival models squared logarithmic losses.” https://arxiv.org/abs/2212.05260v2. Kvamme, Havard, Borgan, Ornulf (2023). “Brier Score Administrative Censoring: Problems Solution.” Journal Machine Learning Research, 24(2), 1–26. ISSN 1533-7928, http://jmlr.org/papers/v24/19-1030.html.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvSchmid","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"MeasureSurvSchmid$new() MeasureSurvSchmid$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"","code":"MeasureSurvSchmid$new(ERV = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"ERV (logical(1)) Standardize measure Kaplan-Meier baseline (Explained Residual Variation)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"","code":"MeasureSurvSchmid$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.schmid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrated Schmid Score Survival Measure — mlr_measures_surv.schmid","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # ISS, G(t) calculated using the test set p$score(msr(\"surv.schmid\")) #> surv.schmid  #>    0.295261   # ISS, G(t) calculated using the train set (always recommended) p$score(msr(\"surv.schmid\"), task = task, train_set = part$train) #> surv.schmid  #>   0.3118486   # ISS, ERV score (comparing with KM baseline) p$score(msr(\"surv.schmid\", ERV = TRUE), task = task, train_set = part$train) #> surv.schmid  #> 0.004097633   # ISS at specific time point p$score(msr(\"surv.schmid\", times = 365), task = task, train_set = part$train) #> surv.schmid  #>   0.5310285   # ISS at multiple time points (integrated) p$score(msr(\"surv.schmid\", times = c(125, 365, 450), integrated = TRUE),         task = task, train_set = part$train) #> surv.schmid  #>   0.4239964   # ISS, use time cutoff p$score(msr(\"surv.schmid\", t_max = 700), task = task, train_set = part$train) #> surv.schmid  #>   0.3758578   # ISS, use time cutoff and also remove observations p$score(msr(\"surv.schmid\", t_max = 700, remove_obs = TRUE),         task = task, train_set = part$train) #> surv.schmid  #>   0.3620809   # ISS, use time cutoff corresponding to specific proportion of censoring on the test set p$score(msr(\"surv.schmid\", p_max = 0.8), task = task, train_set = part$train) #> surv.schmid  #>   0.3977249   # RISS, G(t) calculated using the train set p$score(msr(\"surv.schmid\", proper = TRUE), task = task, train_set = part$train) #> surv.schmid  #>   0.2913262"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"Calls survAUC::AUC.sh(). Assumes Cox PH model specification.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvSongAUC$new() mlr_measures$get(\"surv.song_auc\") msr(\"surv.song_auc\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). type (character(1)) string defining type true positive rate (TPR): incident refers incident TPR, cumulative refers cumulative TPR.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"Song, Xiao, Zhou, Xiao-Hua (2008). “semiparametric approach covariate specific ROC curve survival outcome.” Statistica Sinica, 18(3), 947–65. https://www.jstor.org/stable/24308524.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvSongAUC","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"MeasureSurvSongAUC$new() MeasureSurvSongAUC$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"","code":"MeasureSurvSongAUC$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"","code":"MeasureSurvSongAUC$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Song and Zhou's AUC Survival Measure — mlr_measures_surv.song_auc","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # Integrated AUC score p$score(msr(\"surv.song_auc\"), task = task,         train_set = part$train, learner = cox) #> surv.song_auc  #>     0.6312019   # AUC at specific time point p$score(msr(\"surv.song_auc\", times = 600), task = task,         train_set = part$train, learner = cox) #> surv.song_auc  #>     0.6284578   # Integrated AUC at specific time points p$score(msr(\"surv.song_auc\", times = c(100, 200, 300, 400, 500)),         task = task, train_set = part$train, learner = cox) #> surv.song_auc  #>     0.6315511"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":null,"dir":"Reference","previous_headings":"","what":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"Calls survAUC::spec.sh(). Assumes Cox PH model specification. times lp_thresh arbitrarily set 0 prevent crashing, specified.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvSongTNR$new() mlr_measures$get(\"surv.song_tnr\") msr(\"surv.song_tnr\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. lp_thresh (numeric(1)) Determines cutoff threshold linear predictor calculation TPR/TNR scores.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"Song, Xiao, Zhou, Xiao-Hua (2008). “semiparametric approach covariate specific ROC curve survival outcome.” Statistica Sinica, 18(3), 947–65. https://www.jstor.org/stable/24308524.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvSongTNR","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"MeasureSurvSongTNR$new() MeasureSurvSongTNR$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"","code":"MeasureSurvSongTNR$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"","code":"MeasureSurvSongTNR$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tnr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Song and Zhou's TNR Survival Measure — mlr_measures_surv.song_tnr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"Calls survAUC::sens.sh(). Assumes Cox PH model specification. times lp_thresh arbitrarily set 0 prevent crashing, specified.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvSongTPR$new() mlr_measures$get(\"surv.song_tpr\") msr(\"surv.song_tpr\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score. lp_thresh (numeric(1)) Determines cutoff threshold linear predictor calculation TPR/TNR scores.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"Song, Xiao, Zhou, Xiao-Hua (2008). “semiparametric approach covariate specific ROC curve survival outcome.” Statistica Sinica, 18(3), 947–65. https://www.jstor.org/stable/24308524.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvSongTPR","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"MeasureSurvSongTPR$new() MeasureSurvSongTPR$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"","code":"MeasureSurvSongTPR$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"","code":"MeasureSurvSongTPR$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.song_tpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Song and Zhou's TPR Survival Measure — mlr_measures_surv.song_tpr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"Calls survAUC::AUC.uno(). Assumes random censoring.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvUnoAUC$new() mlr_measures$get(\"surv.uno_auc\") msr(\"surv.uno_auc\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"integrated (logical(1)) TRUE (default), returns integrated score (eg across time points); otherwise, integrated (eg single time point). times (numeric()) integrated == TRUE vector time-points integrate score. integrated == FALSE single time point return score.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"Uno H, Cai T, Tian L, Wei LJ (2007). “Evaluating Prediction Rules fort-Year Survivors Censored Regression Models.” Journal American Statistical Association, 102(478), 527–537. doi:10.1198/016214507000000149 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvUnoAUC","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"MeasureSurvUnoAUC$new() MeasureSurvUnoAUC$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"","code":"MeasureSurvUnoAUC$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"","code":"MeasureSurvUnoAUC$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uno's AUC Survival Measure — mlr_measures_surv.uno_auc","text":"","code":"library(mlr3)  # Define a survival Task task = tsk(\"lung\")  # Create train and test set part = partition(task)  # Train Cox learner on the train set cox = lrn(\"surv.coxph\") cox$train(task, row_ids = part$train)  # Make predictions for the test set p = cox$predict(task, row_ids = part$test)  # Integrated AUC score p$score(msr(\"surv.uno_auc\"), task = task,         train_set = part$train, learner = cox) #> surv.uno_auc  #>    0.5774096   # AUC at specific time point p$score(msr(\"surv.uno_auc\", times = 600), task = task,         train_set = part$train, learner = cox) #> surv.uno_auc  #>    0.4847019   # Integrated AUC at specific time points p$score(msr(\"surv.uno_auc\", times = c(100, 200, 300, 400, 500)),         task = task, train_set = part$train, learner = cox) #> surv.uno_auc  #>     0.600736"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":null,"dir":"Reference","previous_headings":"","what":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"Calls survAUC::spec.uno(). Assumes random censoring. times lp_thresh arbitrarily set 0 prevent crashing, specified.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvUnoTNR$new() mlr_measures$get(\"surv.uno_tnr\") msr(\"surv.uno_tnr\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"times (numeric()) vector time-points calculate TPR/TNR scores. lp_thresh (numeric(1)) Determines cutoff threshold linear predictor calculation TPR/TNR scores.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"Uno H, Cai T, Tian L, Wei LJ (2007). “Evaluating Prediction Rules fort-Year Survivors Censored Regression Models.” Journal American Statistical Association, 102(478), 527–537. doi:10.1198/016214507000000149 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvUnoTNR","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"MeasureSurvUnoTNR$new() MeasureSurvUnoTNR$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"","code":"MeasureSurvUnoTNR$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"","code":"MeasureSurvUnoTNR$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tnr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uno's TNR Survival Measure — mlr_measures_surv.uno_tnr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"Calls survAUC::sens.uno(). Assumes random censoring. times lp_thresh arbitrarily set 0 prevent crashing, specified.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvUnoTPR$new() mlr_measures$get(\"surv.uno_tpr\") msr(\"surv.uno_tpr\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"times (numeric()) vector time-points calculate TPR/TNR scores. lp_thresh (numeric(1)) Determines cutoff threshold linear predictor calculation TPR/TNR scores.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"Uno H, Cai T, Tian L, Wei LJ (2007). “Evaluating Prediction Rules fort-Year Survivors Censored Regression Models.” Journal American Statistical Association, 102(478), 527–537. doi:10.1198/016214507000000149 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> mlr3proba::MeasureSurvAUC -> MeasureSurvUnoTPR","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"MeasureSurvUnoTPR$new() MeasureSurvUnoTPR$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"","code":"MeasureSurvUnoTPR$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"","code":"MeasureSurvUnoTPR$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.uno_tpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uno's TPR Survival Measure — mlr_measures_surv.uno_tpr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Calls survAUC::XO(). Assumes Cox PH model specification.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"measures implemented survAUC used care, aware problems implementation sometimes cause fatal errors R. future updates measures may re-written implemented directly mlr3proba.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"MeasureSurvXuR2$new() mlr_measures$get(\"surv.xu_r2\") msr(\"surv.xu_r2\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Empty ParamSet","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Type: \"surv\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: lp","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Xu R, O'Quigley J (1999). “R2 type measure dependence proportional hazards models.” Journal Nonparametric Statistics, 12(1), 83–107. doi:10.1080/10485259908832799 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"mlr3::Measure -> mlr3proba::MeasureSurv -> MeasureSurvXuR2","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"MeasureSurvXuR2$new() MeasureSurvXuR2$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"","code":"MeasureSurvXuR2$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"","code":"MeasureSurvXuR2$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_measures_surv.xu_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Xu and O'Quigley's R2 Survival Measure — mlr_measures_surv.xu_r2","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"Composes survival distribution (distr) using linear predictor predictions (lp) given LearnerSurv training prediction, utilizing breslow estimator. specified learner must capable generating lp-type predictions (e.g., Cox-type model).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"PipeOp can instantiated via Dictionary mlr_pipeops associated sugar function po():","code":"PipeOpBreslow$new(learner) mlr_pipeops$get(\"breslowcompose\", learner) po(\"breslowcompose\", learner, breslow.overwrite = TRUE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"PipeOpBreslow like LearnerSurv. one input channel, named input takes TaskSurv training another TaskSurv prediction. PipeOpBreslow one output channel named output, producing NULL training PredictionSurv prediction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"$state slot stores times status survival target variables train TaskSurv well lp predictions train set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"parameters : breslow.overwrite :: logical(1)  FALSE (default) compositor nothing returns input learner's PredictionSurv. TRUE case input learner distr predictions, distr overwritten distr composed lp train set information using breslow. useful changing prediction distr one model form another.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"Breslow N (1972). “Discussion 'Regression Models Life-Tables' D.R. Cox.” Journal Royal Statistical Society: Series B, 34(2), 216-217. Lin, Y. D (2007). “Breslow estimator.” Lifetime Data Analysis, 13(4), 471-480. doi:10.1007/s10985-007-9048-y .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"mlr3pipelines::PipeOp -> PipeOpBreslow","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"learner (mlr3::Learner) input survival learner.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"PipeOpBreslow$new() PipeOpBreslow$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"","code":"PipeOpBreslow$new(learner, id = NULL, param_vals = list())"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"learner (LearnerSurv) Survival learner must provide lp-type predictions id (character(1)) Identifier resulting object. NULL (default), set id input learner. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"","code":"PipeOpBreslow$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_breslow_distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a learner into a PipeOp with survival predictions estimated by the Breslow estimator — mlr_pipeops_compose_breslow_distr","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)   task = tsk(\"rats\")   part = partition(task, ratio = 0.8)   train_task = task$clone()$filter(part$train)   test_task = task$clone()$filter(part$test)    learner = lrn(\"surv.coxph\") # learner with lp predictions   b = po(\"breslowcompose\", learner = learner, breslow.overwrite = TRUE)    b$train(list(train_task))   p = b$predict(list(test_task))[[1L]] } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpProbregr — mlr_pipeops_compose_probregr","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"Combines predicted response se PredictionRegr specified probability distribution estimate ('compose') distr prediction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpProbregr$new() mlr_pipeops$get(\"compose_probregr\") po(\"compose_probregr\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"PipeOpProbregr two input channels named \"input_response\" \"input_se\", take NULL training two PredictionRegrs prediction, respectively contain response se return type, object can passed twice. output prediction PredictionRegr \"response\" input_response, \"se\" input_se \"distr\" created combining two.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"$state left empty (list()).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"dist :: character(1)  Location-scale distribution use composition. Current choices \"Uniform\" (default), \"Normal\", \"Cauchy\", \"Gumbel\", \"Laplace\", \"Logistic\". implemented via distr6.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"composition created substituting response se predictions distribution location scale parameters respectively.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"mlr3pipelines::PipeOp -> PipeOpProbregr","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"PipeOpProbregr$new() PipeOpProbregr$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"","code":"PipeOpProbregr$new(id = \"compose_probregr\", param_vals = list())"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"id (character(1)) Identifier resulting  object. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"","code":"PipeOpProbregr$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_compose_probregr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpProbregr — mlr_pipeops_compose_probregr","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)   set.seed(1)   task = tsk(\"boston_housing\")    # Option 1: Use a learner that can predict se   learn = lrn(\"regr.featureless\", predict_type = \"se\")   pred = learn$train(task)$predict(task)   poc = po(\"compose_probregr\")   poc$predict(list(pred, pred))[[1]]    # Option 2: Use two learners, one for response and the other for se   learn_response = lrn(\"regr.rpart\")   learn_se = lrn(\"regr.featureless\", predict_type = \"se\")   pred_response = learn_response$train(task)$predict(task)   pred_se = learn_se$train(task)$predict(task)   poc = po(\"compose_probregr\")   poc$predict(list(pred_response, pred_se))[[1]] } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"Uses predicted distr PredictionSurv estimate ('compose') crank prediction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpCrankCompositor$new() mlr_pipeops$get(\"crankcompose\") po(\"crankcompose\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"PipeOpCrankCompositor one input channel named \"input\", takes NULL training PredictionSurv prediction. PipeOpCrankCompositor one output channel named \"output\", producing NULL training PredictionSurv prediction. output prediction PredictionSurv input crank predict type overwritten given estimation method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"$state left empty (list()).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"method :: character(1)  Determines method used produce continuous ranking distribution. Currently mort supported, sum cumulative hazard, also called expected/ensemble mortality, see Ishwaran et al. (2008). details, see get_mortality(). overwrite :: logical(1)  FALSE (default) prediction already crank prediction, compositor returns input prediction unchanged. TRUE, crank overwritten.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"Sonabend, Raphael, Bender, Andreas, Vollmer, Sebastian (2022). “Avoiding C-hacking evaluating survival distribution predictions discrimination measures.” Bioinformatics. ISSN 1367-4803, doi:10.1093/BIOINFORMATICS/BTAC451 , https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac451/6640155. Ishwaran, Hemant, Kogalur, B U, Blackstone, H E, Lauer, S M, others (2008). “Random survival forests.” Annals applied statistics, 2(3), 841–860.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"mlr3pipelines::PipeOp -> PipeOpCrankCompositor","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"PipeOpCrankCompositor$new() PipeOpCrankCompositor$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"","code":"PipeOpCrankCompositor$new(id = \"crankcompose\", param_vals = list())"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"id (character(1)) Identifier resulting  object. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"","code":"PipeOpCrankCompositor$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_crankcompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpCrankCompositor — mlr_pipeops_crankcompose","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3pipelines)   task = tsk(\"rats\")    # change the crank prediction type of a Cox's model predictions   pred = lrn(\"surv.coxph\")$train(task)$predict(task)   poc = po(\"crankcompose\", param_vals = list(overwrite = TRUE))   poc$predict(list(pred))[[1L]] } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"Estimates ('composes') survival distribution predicted baseline survival distribution (distr) linear predictor (lp) two PredictionSurvs. Compositor Assumptions: baseline distr discrete estimator, e.g. surv.kaplan. composed distr linear form","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpDistrCompositor$new() mlr_pipeops$get(\"distrcompose\") po(\"distrcompose\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"PipeOpDistrCompositor two input channels, \"base\" \"pred\". input channels take NULL training PredictionSurv prediction. PipeOpDistrCompositor one output channel named \"output\", producing NULL training PredictionSurv prediction. output prediction PredictionSurv \"pred\" input extra (overwritten) column distr predict type; composed distr \"base\" lp \"pred\". lp predictions made exist, \"pred\" returned unchanged.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"$state left empty (list()).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"parameters : form :: character(1)  Determines form predicted linear survival model take. either, accelerated-failure time, aft, proportional hazards, ph, proportional odds, po. Default aft. overwrite :: logical(1)  FALSE (default) \"pred\" input already distr, compositor nothing returns given PredictionSurv. TRUE, distr overwritten distr composed lp - useful changing prediction distr one model form another. scale_lp :: logical(1)  option applicable form equal \"aft\". TRUE, min-max scales linear prediction scores interval \\([0,1]\\), avoiding extrapolation baseline \\(S_0(t)\\) transformed time points \\(\\frac{t}{\\exp(lp)}\\), \\(\\[\\frac{t}{e}, t]\\), always smaller maximum time point estimated \\(S_0(t)\\). Note just heuristic get reasonable results case observe survival predictions e.g. constant AFT composition definitely provides guarantee creating calibrated distribution predictions (none methods ). Therefore, set FALSE default.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"respective forms respective survival distributions: $$aft: S(t) = S_0(\\frac{t}{\\exp(lp)})$$ $$ph: S(t) = S_0(t)^{\\exp(lp)}$$ $$po: S(t) = \\frac{S_0(t)}{\\exp(-lp) + (1-\\exp(-lp)) S_0(t)}$$ \\(S_0\\) estimated baseline survival distribution, \\(lp\\) predicted linear predictor. example use \"aft\" composition using Kaplan-Meier baseline distribution, see Norman et al. (2024).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"Norman, P, Li, Wanlu, Jiang, Wenyu, Chen, E B (2024). “deepAFT: nonlinear accelerated failure time model artificial neural network.” Statistics Medicine. doi:10.1002/sim.10152 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"mlr3pipelines::PipeOp -> PipeOpDistrCompositor","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"PipeOpDistrCompositor$new() PipeOpDistrCompositor$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"","code":"PipeOpDistrCompositor$new(id = \"distrcompose\", param_vals = list())"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"id (character(1)) Identifier resulting  object. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"","code":"PipeOpDistrCompositor$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_distrcompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpDistrCompositor — mlr_pipeops_distrcompose","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)   task = tsk(\"rats\")    base = lrn(\"surv.kaplan\")$train(task)$predict(task)   pred = lrn(\"surv.coxph\")$train(task)$predict(task)   # let's change the distribution prediction of Cox (Breslow-based) to an AFT form:   pod = po(\"distrcompose\", param_vals = list(form = \"aft\", overwrite = TRUE))   pod$predict(list(base = base, pred = pred))[[1]] } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"Uses predicted survival distribution (distr) PredictionSurv estimate ('compose') expected survival time (response) prediction. Practically, PipeOp summarizes observation's survival curve/distribution single number can either restricted mean survival time median survival time.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpResponseCompositor$new() mlr_pipeops$get(\"responsecompose\") po(\"responsecompose\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"PipeOpResponseCompositor one input channel named \"input\", takes NULL training PredictionSurv prediction. PipeOpResponseCompositor one output channel named \"output\", producing NULL training PredictionSurv prediction. output prediction PredictionSurv input response predict type overwritten given method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"$state left empty (list()).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"method :: character(1)  Determines method used produce survival time (response) survival distribution. Available methods \"rmst\" \"median\", corresponding restricted mean survival time median survival time respectively. tau :: numeric(1)  Determines time point calculate restricted mean survival time (works \"rmst\" method). NULL (default), available time points predicted survival distribution used. add_crank :: logical(1)  TRUE crank predict type set -response (higher survival times correspond lower risk). Works overwrite TRUE. overwrite :: logical(1)  FALSE (default) prediction already response prediction, compositor returns input prediction unchanged. TRUE, response (crank, add_crank TRUE) overwritten.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"restricted mean survival time default/preferred method calculated follows: $$T_{,rmst} \\approx \\sum_{t_j \\[0,\\tau]} (t_j - t_{j-1}) S_i(t_j)$$ \\(T\\) expected survival time, \\(\\tau\\) time cutoff/horizon \\(S_i(t_j)\\) predicted survival probabilities observation \\(\\) \\(t_j\\) time points. \\(T_{,median}\\) survival time just first time point survival probability less \\(0.5\\). time point exists (e.g. survival distribution proper due high censoring) return last time point. good estimate use general, reasonable substitute cases.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"Zhao, Lihui, Claggett, Brian, Tian, Lu, Uno, Hajime, Pfeffer, . M, Solomon, D. S, Trippa, Lorenzo, Wei, J. L (2016). “restricted mean survival time curve survival analysis.” Biometrics, 72(1), 215–221. ISSN 1541-0420, doi:10.1111/BIOM.12384 , https://onlinelibrary.wiley.com/doi/full/10.1111/biom.12384.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"mlr3pipelines::PipeOp -> PipeOpResponseCompositor","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"PipeOpResponseCompositor$new() PipeOpResponseCompositor$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"","code":"PipeOpResponseCompositor$new(id = \"responsecompose\", param_vals = list())"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"id (character(1)) Identifier resulting  object. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"","code":"PipeOpResponseCompositor$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_responsecompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpResponseCompositor — mlr_pipeops_responsecompose","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3pipelines)   task = tsk(\"rats\")    # add survival time prediction type to the predictions of a Cox model   # Median survival time as response   pred = lrn(\"surv.coxph\")$train(task)$predict(task)   por = po(\"responsecompose\", param_vals = list(method = \"median\", overwrite = TRUE))   por$predict(list(pred))[[1L]]   # mostly improper survival distributions, \"median\" sets the survival time   # to the last time point    # RMST (default) as response, while also changing the `crank` to `-response`   por = po(\"responsecompose\", param_vals = list(overwrite = TRUE, add_crank = TRUE))   por$predict(list(pred))[[1L]] } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpSurvAvg — mlr_pipeops_survavg","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"Perform (weighted) prediction averaging survival PredictionSurvs connecting PipeOpSurvAvg multiple PipeOpLearner outputs. resulting prediction aggregate predict types contained within inputs. predict types missing least one input set NULL. aggregated follows: \"response\", \"crank\", \"lp\" weighted average incoming predictions. \"distr\" distr6::VectorDistribution containing distr6::MixtureDistributions. Weights can set parameter; none provided, defaults equal weights prediction.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"Input output channels inherited PipeOpEnsemble PredictionSurv inputs outputs.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"$state left empty (list()).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"parameters parameters inherited PipeOpEnsemble.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"Inherits PipeOpEnsemble implementing private$weighted_avg_predictions() method.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpEnsemble -> PipeOpSurvAvg","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"PipeOpSurvAvg$new() PipeOpSurvAvg$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"","code":"PipeOpSurvAvg$new(innum = 0, id = \"survavg\", param_vals = list(), ...)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"innum (numeric(1)) Determines number input channels. innum 0 (default), vararg input channel created can take arbitrary number inputs. id (character(1)) Identifier resulting  object. param_vals (list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. ... () Additional arguments passed mlr3pipelines::PipeOpEnsemble.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"","code":"PipeOpSurvAvg$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_survavg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpSurvAvg — mlr_pipeops_survavg","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3pipelines)    task = tsk(\"rats\")   p1 = lrn(\"surv.coxph\")$train(task)$predict(task)   p2 = lrn(\"surv.kaplan\")$train(task)$predict(task)   poc = po(\"survavg\", param_vals = list(weights = c(0.2, 0.8)))   poc$predict(list(p1, p2)) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"Transform PredictionClassif PredictionSurv using Inverse Probability Censoring Weights (IPCW) method Vock et al. (2016).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpPredClassifSurvIPCW$new() mlr_pipeops$get(\"trafopred_classifsurv_IPCW\") po(\"trafopred_classifsurv_IPCW\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"input PredictionClassif data.table containing observed times, censoring indicators row ids, generated PipeOpTaskSurvClassifIPCW prediction phase. output input PredictionClassif transformed PredictionSurv. input classification probability prediction corresponds probability event specified cutoff time \\(\\hat{\\pi}(\\bold{X}_i) = P(T_i < \\tau|\\bold{X}_i)\\), see Vock et al. (2016) PipeOpTaskSurvClassifIPCW. Therefore, predictions serve continuous risk scores can directly interpreted crank predictions right-censored survival setting. also map survival distribution prediction distr, specified cutoff time point \\(\\tau\\), .e. \\(S_i(\\tau) = 1 - \\hat{\\pi}(\\bold{X}_i)\\). Survival measures use survival distribution (eg ISBS) evaluated exactly cutoff time point \\(\\tau\\), see example.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"Vock, M D, Wolfson, Julian, Bandyopadhyay, Sunayan, Adomavicius, Gediminas, Johnson, E P, Vazquez-Benitez, Gabriela, O'Connor, J P (2016). “Adapting machine learning techniques censored time--event health record data: general-purpose approach using inverse probability censoring weighting.” Journal Biomedical Informatics, 61, 119–131. doi:10.1016/j.jbi.2016.03.009 , https://www.sciencedirect.com/science/article/pii/S1532046416000496.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"mlr3pipelines::PipeOp -> PipeOpPredClassifSurvIPCW","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"predict_type (character(1)) Returns active predict type PipeOp, \"crank\"","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"PipeOpPredClassifSurvIPCW$new() PipeOpPredClassifSurvIPCW$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"","code":"PipeOpPredClassifSurvIPCW$new(id = \"trafopred_classifsurv_IPCW\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"id (character(1)) Identifier resulting object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"","code":"PipeOpPredClassifSurvIPCW$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_IPCW.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredClassifSurvIPCW — mlr_pipeops_trafopred_classifsurv_IPCW","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"Transform PredictionClassif PredictionSurv converting event probabilities pseudo status variable (discrete time hazards) survival probabilities using product rule (Tutz et al. 2016): $$P_k = p_k\\cdot ... \\cdot p_1$$ : assume continuous time divided time intervals \\([0, t_1), [t_1, t_2), ..., [t_n, \\infty)\\) \\(P_k = P(T > t_k)\\) survival probability time \\(t_k\\) \\(h_k\\) discrete-time hazard (classifier prediction), .e. conditional probability event \\(k\\)-interval. \\(p_k = 1 - h_k = P(T \\ge t_k | T \\ge t_{k-1})\\)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpPredClassifSurvDiscTime$new() mlr_pipeops$get(\"trafopred_classifsurv_disctime\") po(\"trafopred_classifsurv_disctime\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"input PredictionClassif data.table transformed data generated PipeOpTaskSurvClassifDiscTime. output input PredictionClassif transformed PredictionSurv. works prediction phase.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"Tutz, Gerhard, Schmid, Matthias (2016). Modeling Discrete Time--Event Data,  series Springer Series Statistics. Springer International Publishing. ISBN 978-3-319-28156-8 978-3-319-28158-2, http://link.springer.com/10.1007/978-3-319-28158-2.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"mlr3pipelines::PipeOp -> PipeOpPredClassifSurvDiscTime","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"predict_type (character(1)) Returns active predict type PipeOp, \"crank\"","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"PipeOpPredClassifSurvDiscTime$new() PipeOpPredClassifSurvDiscTime$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"","code":"PipeOpPredClassifSurvDiscTime$new(id = \"trafopred_classifsurv_disctime\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"id (character(1)) Identifier resulting object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"","code":"PipeOpPredClassifSurvDiscTime$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_classifsurv_disctime.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredClassifSurvDiscTime — mlr_pipeops_trafopred_classifsurv_disctime","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"Transform PredictionRegr PredictionSurv. predicted piece-wise constant hazards contained PredictionRegr transformed survival probabilities wrapped PredictionSurv object. compute survival probability predicted hazards using following relation: $$S(t | \\mathbf{x}) = \\exp \\left( - \\int_{0}^{t} \\lambda(s | \\mathbf{x}) \\, ds \\right) = \\exp \\left( - \\sum_{j = 1}^{J} \\lambda(j | \\mathbf{x}) d_j\\,  \\right),$$ \\(j = 1, \\ldots, J\\) denotes interval, \\(t\\) time, \\(d_j\\) duration interval \\(j\\). detailed description PEM, refer pipeline_survtoregr_pem referred article.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpPredRegrSurvPEM$new() mlr_pipeops$get(\"trafopred_regrsurv_pem\") po(\"trafopred_regrsurv_pem\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"input consists PredictionRegr data.table containing transformed data. PredictionRegr provided mlr3::LearnerRegr, data.table generated PipeOpTaskSurvRegrPEM. output input PredictionRegr transformed PredictionSurv. works prediction phase.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"Bender, Andreas, Groll, Andreas, Scheipl, Fabian (2018). “generalized additive model approach time--event analysis.” Statistical Modelling, 18(3-4), 299–321. https://doi.org/10.1177/1471082X17748083.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"mlr3pipelines::PipeOp -> PipeOpPredRegrSurvPEM","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"predict_type (character(1)) Returns active predict type PipeOp, \"crank\"","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"PipeOpPredRegrSurvPEM$new() PipeOpPredRegrSurvPEM$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"","code":"PipeOpPredRegrSurvPEM$new(id = \"trafopred_regrsurv_pem\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"id (character(1)) Identifier resulting object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"","code":"PipeOpPredRegrSurvPEM$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafopred_regrsurv_pem.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpPredRegrSurvPEM — mlr_pipeops_trafopred_regrsurv_pem","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"Transform TaskSurv TaskClassif using Inverse Probability Censoring Weights (IPCW) method Vock et al. (2016). Let \\(T_i\\) observed times (event censoring) \\(\\delta_i\\) censoring indicators observation \\(\\) training set. IPCW technique consists two steps: first estimate censoring distribution \\(\\hat{G}(t)\\) using Kaplan-Meier estimator training data. calculate observation weights given cutoff time \\(\\tau\\) : $$\\omega_i = 1/\\hat{G}{(min(T_i,\\tau))}$$ Observations censored prior \\(\\tau\\) assigned zero weights, .e. \\(\\omega_i = 0\\).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpTaskSurvClassifIPCW$new() mlr_pipeops$get(\"trafotask_survclassif_IPCW\") po(\"trafotask_survclassif_IPCW\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"PipeOpTaskSurvClassifIPCW one input channel named \"input\", two output channels, one named \"output\" \"data\". Training transforms \"input\" TaskSurv TaskClassif, \"output\". target column named \"status\" indicates whether event occurred cutoff time \\(\\tau\\) (1 = yes, 0 = ). observed times column removed \"output\" task. transformed task property \"weights\" (\\(\\omega_i\\)). \"data\" NULL. prediction, \"input\" TaskSurv transformed \"output\" TaskClassif \"status\" target (indicating event occurred cutoff time). \"data\" data.table containing observed times \\(T_i\\) censoring indicators/status \\(\\delta_i\\) subject well corresponding row_ids. \"data\" meant used PipeOpPredClassifSurvIPCW.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"parameters tau :: numeric() Predefined time point IPCW. Observations time larger \\(\\tau\\) censored. Must less equal maximum event time. eps :: numeric() Small value replace \\(G(t) = 0\\) censoring probabilities prevent infinite weights (warning triggered happens).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"Vock, M D, Wolfson, Julian, Bandyopadhyay, Sunayan, Adomavicius, Gediminas, Johnson, E P, Vazquez-Benitez, Gabriela, O'Connor, J P (2016). “Adapting machine learning techniques censored time--event health record data: general-purpose approach using inverse probability censoring weighting.” Journal Biomedical Informatics, 61, 119–131. doi:10.1016/j.jbi.2016.03.009 , https://www.sciencedirect.com/science/article/pii/S1532046416000496.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"mlr3pipelines::PipeOp -> PipeOpTaskSurvClassifIPCW","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"PipeOpTaskSurvClassifIPCW$new() PipeOpTaskSurvClassifIPCW$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"","code":"PipeOpTaskSurvClassifIPCW$new(id = \"trafotask_survclassif_IPCW\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"id (character(1)) Identifier resulting  object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"","code":"PipeOpTaskSurvClassifIPCW$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_IPCW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpTaskSurvClassifIPCW — mlr_pipeops_trafotask_survclassif_IPCW","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")    # split task to train and test subtasks   part = partition(task)   task_train = task$clone()$filter(part$train)   task_test = task$clone()$filter(part$test)    # define IPCW pipeop   po_ipcw = po(\"trafotask_survclassif_IPCW\", tau = 365)    # during training, output is a classification task with weights   task_classif_train = po_ipcw$train(list(task_train))[[1]]   task_classif_train    # during prediction, output is a classification task (no weights)   task_classif_test = po_ipcw$predict(list(task_test))[[1]]   task_classif_test    # train classif learner on the train task with weights   learner = lrn(\"classif.rpart\", predict_type = \"prob\")   learner$train(task_classif_train)    # predict using the test output task   p = learner$predict(task_classif_test)    # use classif measures for evaluation   p$confusion   p$score()   p$score(msr(\"classif.auc\")) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"Transform TaskSurv TaskClassif dividing continuous time multiple time intervals observation. transformation creates new target variable disc_status indicates whether event occurred within time interval. approach facilitates survival analysis within classification framework using discrete time intervals (Tutz et al. 2016).","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpTaskSurvClassifDiscTime$new() mlr_pipeops$get(\"trafotask_survclassif_disctime\") po(\"trafotask_survclassif_disctime\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"PipeOpTaskSurvClassifDiscTime one input channel named \"input\", two output channels, one named \"output\" \"transformed_data\". training, \"output\" \"input\" TaskSurv transformed TaskClassif. target column named \"disc_status\" indicates whether event occurred time interval. additional numeric feature named \"tend\" contains end time point interval. Lastly, \"output\" task column original observation ids, role \"original_ids\". \"transformed_data\" empty data.table. prediction, \"input\" TaskSurv transformed \"output\" TaskClassif \"disc_status\" target \"tend\" feature included. \"transformed_data\" data.table columns \"disc_status\" target \"output\" task, \"id\" (original observation ids), \"obs_times\" (observed times per \"id\") \"tend\" (end time interval). \"transformed_data\" meant used PipeOpPredClassifSurvDiscTime.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"$state contains information cut parameter used.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"parameters cut :: numeric() Split points, used partition data intervals based time column. unspecified, unique event times used. cut single integer, interpreted number equidistant intervals 0 maximum event time. max_time :: numeric(1) cut unspecified, last possible event time. event times max_time administratively censored max_time. Needs greater minimum event time given task.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"Tutz, Gerhard, Schmid, Matthias (2016). Modeling Discrete Time--Event Data,  series Springer Series Statistics. Springer International Publishing. ISBN 978-3-319-28156-8 978-3-319-28158-2, http://link.springer.com/10.1007/978-3-319-28158-2.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"mlr3pipelines::PipeOp -> PipeOpTaskSurvClassifDiscTime","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"PipeOpTaskSurvClassifDiscTime$new() PipeOpTaskSurvClassifDiscTime$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"","code":"PipeOpTaskSurvClassifDiscTime$new(id = \"trafotask_survclassif_disctime\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"id (character(1)) Identifier resulting  object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"","code":"PipeOpTaskSurvClassifDiscTime$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survclassif_disctime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpTaskSurvClassifDiscTime — mlr_pipeops_trafotask_survclassif_disctime","text":"","code":"if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")    # transform the survival task to a classification task   # all unique event times are used as cutpoints   po_disc = po(\"trafotask_survclassif_disctime\")   task_classif = po_disc$train(list(task))[[1L]]    # the end time points of the discrete time intervals   unique(task_classif$data(cols = \"tend\"))[[1L]]    # train a classification learner   learner = lrn(\"classif.log_reg\", predict_type = \"prob\")   learner$train(task_classif) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"Transform TaskSurv TaskRegr dividing continuous time multiple time intervals observation. transformation creates new target variable pem_status indicates whether event occurred within time interval.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"PipeOp can instantiated via dictionary mlr3pipelines::mlr_pipeops associated sugar function mlr3pipelines::po():","code":"PipeOpTaskSurvRegrPEM$new() mlr_pipeops$get(\"trafotask_survregr_pem\") po(\"trafotask_survregr_pem\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"PipeOpTaskSurvRegrPEM one input channel named \"input\", two output channels, one named \"output\" \"transformed_data\". training, \"output\" \"input\" TaskSurv transformed TaskRegr. target column named \"pem_status\" indicates whether event occurred time interval. additional numeric feature named \"tend\" contains end time point interval. Lastly, \"output\" task offset column \"offset\". offset, also referred exposure, logarithm time spent interval \\(j\\), .e. \\(log(t_j)\\). \"transformed_data\" empty data.table. prediction, \"input\" TaskSurv transformed \"output\" TaskRegr \"pem_status\" target, \"tend\" included feature \"offset\" column assigned offset \"col_role\". \"transformed_data\" data.table columns \"pem_status\" target \"output\" task, \"id\" (original observation ids), \"obs_times\" (observed times per \"id\") \"tend\" (end time interval). \"transformed_data\" meant used PipeOpPredRegrSurvPEM.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"$state contains information cut parameter used.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"parameters cut :: numeric() Split points, used partition data intervals based time column. unspecified, unique event times used. cut single integer, interpreted number equidistant intervals 0 maximum event time. max_time :: numeric(1) cut unspecified, last possible event time. event times max_time administratively censored max_time. Needs greater minimum event time given task.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"Bender, Andreas, Groll, Andreas, Scheipl, Fabian (2018). “generalized additive model approach time--event analysis.” Statistical Modelling, 18(3-4), 299–321. https://doi.org/10.1177/1471082X17748083.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"mlr3pipelines::PipeOp -> PipeOpTaskSurvRegrPEM","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"PipeOpTaskSurvRegrPEM$new() PipeOpTaskSurvRegrPEM$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"","code":"PipeOpTaskSurvRegrPEM$new(id = \"trafotask_survregr_pem\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"id (character(1)) Identifier resulting  object.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"","code":"PipeOpTaskSurvRegrPEM$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_pipeops_trafotask_survregr_pem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpTaskSurvRegrPEM — mlr_pipeops_trafotask_survregr_pem","text":"","code":"if (FALSE) { # (mlr3misc::require_namespaces(c(\"mlr3pipelines\", \"mlr3extralearners\"), quietly = TRUE)) if (FALSE) { # \\dontrun{   library(mlr3)   library(mlr3learners)   library(mlr3pipelines)    task = tsk(\"lung\")    # transform the survival task to a regression task   # all unique event times are used as cutpoints   po_pem = po(\"trafotask_survregr_pem\")   task_regr = po_pem$train(list(task))[[1L]]    # the end time points of the discrete time intervals   unique(task_regr$data(cols = \"tend\")[[1L]])    # train a regression learner that supports poisson regression   # e.g. regr.gam   # won't run unless learner can accept offset column role   learner = lrn(\"regr.gam\", formula = pem_status ~ s(age) + s(tend), family = \"poisson\")   learner$train(task_regr)    # e.g. regr.xgboost, note prior data processing steps   learner = as_learner(     po(\"modelmatrix\", formula = ~ as.factor(tend) + .) %>>%     lrn(\"regr.xgboost\", objective = \"count:poisson\", nrounds = 100, eta = 0.1)   )   learner$train(task_regr)   } # } }"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"mlr3::TaskGenerator calling coxed::sim.survdata(). generator creates survival dataset using coxed, exposes parameters sim.survdata() function. include parameters X (user-specified variables), covariate, low, high, compare, beta hazard.fun generator. latter means user-specified hazard function can used generated datasets always use flexible-hazard method package.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"coxed\") tgen(\"coxed\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"Harden, J. J, Kropko, Jonathan (2019). “Simulating Duration Data Cox Model.” Political Science Research Methods, 7(4), 921–928. doi:10.1017/PSRM.2018.19 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"mlr3::TaskGenerator -> TaskGeneratorCoxed","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"TaskGeneratorCoxed$new() TaskGeneratorCoxed$help() TaskGeneratorCoxed$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"","code":"TaskGeneratorCoxed$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"","code":"TaskGeneratorCoxed$help()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"","code":"TaskGeneratorCoxed$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_coxed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Task Generator for Package 'coxed' — mlr_task_generators_coxed","text":"","code":"library(mlr3)    # time horizon = 365 days, censoring proportion = 60%, 6 covariates normally   # distributed with mean = 1 and sd = 2, independent censoring, no time-varying   # effects   gen = tgen(\"coxed\", T = 365, type = \"none\", censor = 0.6, xvars = 6,               mu = 1, sd = 2, censor.cond = FALSE)   gen$generate(50) #> <TaskSurv:coxed> (50 x 8) #> * Target: y, failed #> * Properties: - #> * Features (6): #>   - dbl (6): X1, X2, X3, X4, X5, X6    # same as above, but with time-varying coefficients (counting process format)   gen$param_set$set_values(type = \"tvc\")   gen$generate(50) #> <TaskSurv:coxed> (10125 x 10) #> * Target: start, end, failed #> * Properties: - #> * Features (7): #>   - dbl (7): X1, X2, X3, X4, X5, X6, id"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"mlr3::TaskGenerator calling distr6::distrSimulate(). See distr6::distrSimulate() explanation hyperparameters. See distr6::listDistributions() names available distributions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"simdens\") tgen(\"simdens\")"},{"path":[]},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"mlr3::TaskGenerator -> TaskGeneratorSimdens","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"TaskGeneratorSimdens$new() TaskGeneratorSimdens$help() TaskGeneratorSimdens$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"","code":"TaskGeneratorSimdens$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"","code":"TaskGeneratorSimdens$help()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"","code":"TaskGeneratorSimdens$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simdens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Task Generator for Package 'distr6' — mlr_task_generators_simdens","text":"","code":"# generate 20 samples from a standard Normal distribution dens_gen = tgen(\"simdens\") dens_gen$param_set #> <ParamSet(2)> #>              id    class lower upper nlevels        default  value #>          <char>   <char> <num> <num>   <num>         <list> <list> #> 1: distribution ParamFct    NA    NA      47         Normal [NULL] #> 2:         pars ParamUty    NA    NA     Inf <NoDefault[0]> [NULL]  task = dens_gen$generate(20) head(task) #>             x #>         <num> #> 1: -1.6413985 #> 2:  0.8064280 #> 3:  1.2915244 #> 4:  0.6115493 #> 5: -0.7738848 #> 6:  1.4723536  # generate 50 samples from a Binomial distribution with specific parameters dens_gen = tgen(\"simdens\", distribution = \"Bernoulli\", pars = list(prob = 0.8)) task = dens_gen$generate(50) task$data()[[\"x\"]] #>  [1] 0 1 1 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 #> [39] 1 1 1 1 1 1 1 1 1 1 1 1"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"mlr3::TaskGenerator calling simsurv::simsurv() package simsurv. generator currently exposes small subset flexibility simsurv, just creates small dataset following numerical covariates: treatment: Bernoulli distributed hazard ratio 0.5. height: Normally distributed hazard ratio 1. weight: normally distributed hazard ratio 1. See simsurv::simsurv() explanation hyperparameters. Initial values hyperparameters lambdas = 0.1, gammas = 1.5 maxt = 5. last one, default generates samples administratively censored \\(\\tau = 5\\), increase value want change .","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"simsurv\") tgen(\"simsurv\")"},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"Brilleman, L. S, Wolfe, Rory, Moreno-Betancur, Margarita, Crowther, J. M (2021). “Simulating Survival Data Using simsurv R Package.” Journal Statistical Software, 97(3), 1–27. doi:10.18637/JSS.V097.I03 .","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"mlr3::TaskGenerator -> TaskGeneratorSimsurv","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"TaskGeneratorSimsurv$new() TaskGeneratorSimsurv$help() TaskGeneratorSimsurv$clone()","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"","code":"TaskGeneratorSimsurv$new()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"","code":"TaskGeneratorSimsurv$help()"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"","code":"TaskGeneratorSimsurv$clone(deep = FALSE)"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_task_generators_simsurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Task Generator for Package 'simsurv' — mlr_task_generators_simsurv","text":"","code":"# generate 20 samples with Weibull survival distribution   gen = tgen(\"simsurv\")   task = gen$generate(20)   head(task) #>    eventtime status   height treatment   weight #>        <num>  <int>    <num>     <int>    <num> #> 1:  3.614056      1 164.5435         0 96.28355 #> 2:  3.639137      1 172.0963         1 77.42444 #> 3:  3.649547      1 165.8563         0 86.11930 #> 4:  5.000000      0 182.1474         1 90.72207 #> 5:  5.000000      0 161.6110         0 75.82238 #> 6:  5.000000      0 157.5449         0 73.86433    # generate 100 samples with exponential survival distribution and tau = 40   gen = tgen(\"simsurv\", dist = \"exponential\", gammas = NULL, maxt = 40)   task = gen$generate(100)   head(task) #>     eventtime status   height treatment   weight #>         <num>  <int>    <num>     <int>    <num> #> 1:  4.4003352      1 173.3892         1 83.08383 #> 2:  4.7709793      1 182.7733         0 60.16601 #> 3:  1.0152890      1 167.4973         0 75.53396 #> 4:  0.9686478      1 174.7111         0 71.32231 #> 5:  5.0880338      1 160.6400         0 90.43653 #> 6: 23.7286477      1 174.7952         1 74.18802"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_actg.html","id":null,"dir":"Reference","previous_headings":"","what":"ACTG 320 Survival Task — mlr_tasks_actg","title":"ACTG 320 Survival Task — mlr_tasks_actg","text":"survival task actg data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_actg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ACTG 320 Survival Task — mlr_tasks_actg","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_actg.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"ACTG 320 Survival Task — mlr_tasks_actg","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"actg\") tsk(\"actg\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_actg.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"ACTG 320 Survival Task — mlr_tasks_actg","text":"Task type: “surv” Dimensions: 1151x13 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “cd4”, “hemophil”, “ivdrug”, “karnof”, “priorzdv”, “raceth”, “sexF”, “strat2”, “tx”, “txgrp”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_actg.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"ACTG 320 Survival Task — mlr_tasks_actg","text":"Column sex renamed sexF censor renamed status. Columns id, time_d, censor_d removed target time AIDS diagnosis (days).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_faithful.html","id":null,"dir":"Reference","previous_headings":"","what":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","title":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","text":"density task faithful data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_faithful.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","text":"R6::R6Class inheriting TaskDens.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_faithful.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"faithful\") tsk(\"faithful\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_faithful.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","text":"Task type: “dens” Dimensions: 272x1 Properties: - Missings: FALSE Target: - Features: “eruptions”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_faithful.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"Old Faithful Eruptions Density Task — mlr_tasks_faithful","text":"eruptions column kept task.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbcs.html","id":null,"dir":"Reference","previous_headings":"","what":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","text":"survival task gbcs data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbcs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbcs.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"gbcs\") tsk(\"gbcs\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbcs.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","text":"Task type: “surv” Dimensions: 686x10 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “estrg_recp”, “grade”, “hormone”, “menopause”, “nodes”, “prog_recp”, “size”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbcs.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbcs","text":"Column id date columns removed, well rectime censrec. Target columns (survtime, censdead) renamed (time, status).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbsg.html","id":null,"dir":"Reference","previous_headings":"","what":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","text":"survival task gbsg data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbsg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbsg.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"gbsg\") tsk(\"gbsg\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbsg.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","text":"Task type: “surv” Dimensions: 686x10 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “er”, “grade”, “hormon”, “meno”, “nodes”, “pgr”, “size”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_gbsg.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"German Breast Cancer Study Survival Task — mlr_tasks_gbsg","text":"Removed column pid. Column meno converted factor 0/1 values replaced premenopausal postmenopausal respectively. Column hormon converted factor 0/1 values replaced yes respectively. Column grade converted factor. Renamed target column rfstime time.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_grace.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE 1000 Survival Task — mlr_tasks_grace","title":"GRACE 1000 Survival Task — mlr_tasks_grace","text":"survival task grace data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_grace.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GRACE 1000 Survival Task — mlr_tasks_grace","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_grace.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"GRACE 1000 Survival Task — mlr_tasks_grace","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"grace\") tsk(\"grace\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_grace.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"GRACE 1000 Survival Task — mlr_tasks_grace","text":"Task type: “surv” Dimensions: 1000x8 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “los”, “revasc”, “revascdays”, “stchange”, “sysbp”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_grace.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"GRACE 1000 Survival Task — mlr_tasks_grace","text":"Column id removed. Target columns (days, death) renamed (time, status).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_lung.html","id":null,"dir":"Reference","previous_headings":"","what":"Lung Cancer Survival Task — mlr_tasks_lung","title":"Lung Cancer Survival Task — mlr_tasks_lung","text":"survival task lung data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_lung.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lung Cancer Survival Task — mlr_tasks_lung","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_lung.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Lung Cancer Survival Task — mlr_tasks_lung","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"lung\") tsk(\"lung\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_lung.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Lung Cancer Survival Task — mlr_tasks_lung","text":"Task type: “surv” Dimensions: 168x9 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “meal.cal”, “pat.karno”, “ph.ecog”, “ph.karno”, “sex”, “wt.loss”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_lung.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Lung Cancer Survival Task — mlr_tasks_lung","text":"Column inst removed. Column sex converted factor, others converted integer. Kept complete cases (missing values).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_mgus.html","id":null,"dir":"Reference","previous_headings":"","what":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","title":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","text":"survival task mgus data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_mgus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_mgus.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"mgus\") tsk(\"mgus\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_mgus.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","text":"Task type: “surv” Dimensions: 176x9 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “alb”, “creat”, “dxyr”, “hgb”, “mspike”, “sex”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_mgus.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Monoclonal Gammopathy Survival Task — mlr_tasks_mgus","text":"Removed columns id, pcdx pctime. Renamed target columns (fultime, death) (time, status). Kept complete cases (missing values).","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_pbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","title":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","text":"survival task pbc data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_pbc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_pbc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"pbc\") tsk(\"pbc\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_pbc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","text":"Task type: “surv” Dimensions: 276x19 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “albumin”, “alk.phos”, “ascites”, “ast”, “bili”, “chol”, “copper”, “edema”, “hepato”, “platelet”, “protime”, “sex”, “spiders”, “stage”, “trig”, “trt”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_pbc.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Primary Biliary Cholangitis Survival Task — mlr_tasks_pbc","text":"Removed column id. Kept complete cases (missing values). Column age converted integer. Columns trt, stage, hepato, edema ascites converted factors. Column trt levels Dpenicillmain placebo instead 1 2. Column status 1 death 0 censored transplant.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_precip.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual Precipitation Density Task — mlr_tasks_precip","title":"Annual Precipitation Density Task — mlr_tasks_precip","text":"density task precip data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_precip.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual Precipitation Density Task — mlr_tasks_precip","text":"R6::R6Class inheriting TaskDens.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_precip.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Annual Precipitation Density Task — mlr_tasks_precip","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"precip\") tsk(\"precip\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_precip.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Annual Precipitation Density Task — mlr_tasks_precip","text":"Task type: “dens” Dimensions: 70x1 Properties: - Missings: FALSE Target: - Features: “precip”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_precip.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"Annual Precipitation Density Task — mlr_tasks_precip","text":"precip column kept task.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_rats.html","id":null,"dir":"Reference","previous_headings":"","what":"Rats Survival Task — mlr_tasks_rats","title":"Rats Survival Task — mlr_tasks_rats","text":"survival task rats data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_rats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rats Survival Task — mlr_tasks_rats","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_rats.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Rats Survival Task — mlr_tasks_rats","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"rats\") tsk(\"rats\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_rats.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Rats Survival Task — mlr_tasks_rats","text":"Task type: “surv” Dimensions: 300x5 Properties: - Missings: FALSE Target: “time”, “status” Features: “litter”, “rx”, “sex”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_rats.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Rats Survival Task — mlr_tasks_rats","text":"Column sex converted factor, others converted integer.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_veteran.html","id":null,"dir":"Reference","previous_headings":"","what":"Veteran Survival Task — mlr_tasks_veteran","title":"Veteran Survival Task — mlr_tasks_veteran","text":"survival task veteran data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_veteran.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Veteran Survival Task — mlr_tasks_veteran","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_veteran.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Veteran Survival Task — mlr_tasks_veteran","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"veteran\") tsk(\"veteran\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_veteran.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Veteran Survival Task — mlr_tasks_veteran","text":"Task type: “surv” Dimensions: 137x8 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “celltype”, “diagtime”, “karno”, “prior”, “trt”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_veteran.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Veteran Survival Task — mlr_tasks_veteran","text":"Columns age, time, status, diagtime karno converted integer. Columns trt, prior converted factors. Prior therapy values /yes instead 0/10.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_whas.html","id":null,"dir":"Reference","previous_headings":"","what":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","title":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","text":"survival task whas data set.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_whas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","text":"R6::R6Class inheriting TaskSurv.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_whas.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"whas\") tsk(\"whas\")"},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_whas.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","text":"Task type: “surv” Dimensions: 481x11 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “chf”, “cpk”, “lenstay”, “miord”, “mitype”, “sexF”, “sho”, “year”","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/mlr_tasks_whas.html","id":"preprocessing","dir":"Reference","previous_headings":"","what":"Preprocessing","title":"Worcester Heart Attack Study (WHAS) Survival Task — mlr_tasks_whas","text":"Columns id, yrgrp, dstat removed. Column sex renamed sexF, lenfol time, fstat status. Target total follow-time hospital admission.","code":""},{"path":[]},{"path":"https://mlr3proba.mlr-org.com/reference/pecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","title":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","text":"Methods plot prediction error curves (pecs) either PredictionSurv object list trained LearnerSurvs.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/pecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","text":"","code":"pecs(x, measure = c(\"graf\", \"logloss\"), times, n, eps = NULL, ...)  # S3 method for class 'list' pecs(   x,   measure = c(\"graf\", \"logloss\"),   times,   n,   eps = NULL,   task = NULL,   row_ids = NULL,   newdata = NULL,   train_task = NULL,   train_set = NULL,   proper = TRUE,   ... )  # S3 method for class 'PredictionSurv' pecs(   x,   measure = c(\"graf\", \"logloss\"),   times,   n,   eps = 1e-15,   train_task = NULL,   train_set = NULL,   proper = TRUE,   ... )"},{"path":"https://mlr3proba.mlr-org.com/reference/pecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","text":"x (PredictionSurv list LearnerSurvs) measure (character(1))  Either \"graf\" MeasureSurvGraf, \"logloss\" MeasureSurvIntLogloss times (numeric())  provided either vector time-points evaluate measure range time-points. n (integer())  times missing given range, n provide number time-points evaluate measure . eps (numeric())  Small error value prevent errors resulting log(0) 1/0 calculation. Default 1e-15 log loss 1e-3 Graf. ... Additional arguments. task (TaskSurv) row_ids (integer())  Passed Learner$predict. newdata (data.frame())  missing Learner$predict_newdata called instead Learner$predict. train_task (TaskSurv)  NULL passed measures computing estimate censoring distribution training data. train_set (numeric())  NULL passed measures computing estimate censoring distribution training data. proper (logical(1))  Passed MeasureSurvGraf MeasureSurvIntLogloss.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/pecs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","text":"times n missing measure evaluated observed time-points PredictionSurv TaskSurv object. range provided times without n, time-points range returned.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/pecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Error Curves for PredictionSurv and LearnerSurv — pecs","text":"","code":"if (FALSE) { # \\dontrun{   #' library(mlr3)   task = tsk(\"rats\")    # Prediction Error Curves for prediction object   learn = lrn(\"surv.coxph\")   p = learn$train(task)$predict(task)   pecs(p)   pecs(p, measure = \"logloss\", times = c(20, 40, 60, 80)) +     ggplot2::geom_point() +     ggplot2::ggtitle(\"Logloss Prediction Error Curve for Cox PH\")    # Access underlying data   x = pecs(p)   x$data    # Prediction Error Curves for fitted learners   learns = lrns(c(\"surv.kaplan\", \"surv.coxph\"))   lapply(learns, function(x) x$train(task))   pecs(learns, task = task, measure = \"logloss\", times = c(20, 90), n = 10) } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/plot_probregr.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise probabilistic regression distribution predictions — plot_probregr","title":"Visualise probabilistic regression distribution predictions — plot_probregr","text":"Plots probability density functions n predicted probability distributions.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/plot_probregr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise probabilistic regression distribution predictions — plot_probregr","text":"","code":"plot_probregr(   p,   n,   type = c(\"point\", \"line\", \"both\", \"none\"),   which_plot = c(\"random\", \"top\"),   rm_zero = TRUE,   ... )"},{"path":"https://mlr3proba.mlr-org.com/reference/plot_probregr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise probabilistic regression distribution predictions — plot_probregr","text":"p (PredictionRegr)  least column distr. n (integer(1))  Number predictions plot. type (character(1))  One \"point\" (default), \"line\", \"\", \"none\". which_plot (character(1))  One \"random\" (default) \"top\". See details. rm_zero (logical(1))  TRUE (default) plot points f(x) = 0. ... Unused","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/plot_probregr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualise probabilistic regression distribution predictions — plot_probregr","text":"type: \"point\" (default) - Truth plotted point (truth, predicted_pdf(truth)) \"line\" - Truth plotted vertical line intercepting x-axis truth. \"\" - Plots options. \"none\" - Truth plotted (default p$truth missing). which_plot: \"random\"(default) - Random selection ofn` distributions plotted. \"top\"- Topn` distributions plotted. unlikely plot interpretable n >> 5.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/plot_probregr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise probabilistic regression distribution predictions — plot_probregr","text":"","code":"if (FALSE) { # \\dontrun{ library(mlr3verse) task = tsk(\"boston_housing\") pipe = as_learner(ppl(\"probregr\", lrn(\"regr.ranger\"), dist = \"Normal\")) p = pipe$train(task)$predict(task) plot_probregr(p, 10, \"point\", \"top\") } # }"},{"path":"https://mlr3proba.mlr-org.com/reference/whas.html","id":null,"dir":"Reference","previous_headings":"","what":"Worcester Heart Attack Study (WHAS) Dataset — whas","title":"Worcester Heart Attack Study (WHAS) Dataset — whas","text":"whas dataset Hosmer et al. (2008)","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/whas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worcester Heart Attack Study (WHAS) Dataset — whas","text":"","code":"whas"},{"path":"https://mlr3proba.mlr-org.com/reference/whas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Worcester Heart Attack Study (WHAS) Dataset — whas","text":"id Identification Code age Age (per chart) (years). sex Sex. 0 = Male. 1 = Female. cpk Peak cardiac enzyme (iu). sho Cardiogenic shock complications. 1 = Yes. 0 = . chf Left heart failure complications. 1 = Yes. 0 = . miord MI Order. 1 = Recurrent. 0 = First. mitype MI Type. 1 = Q-wave. 2 = Q-wave. 3 = Indeterminate. year Cohort year. yrgrp Grouped cohort year. lenstay Days hospital. dstat Discharge status hospital. 1 = Dead. 0 = Alive. lenfol Total length follow-hospital admission (days). fstat Status last follow-. 1 = Dead. 0 = Alive.","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/whas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Worcester Heart Attack Study (WHAS) Dataset — whas","text":"https://onlinelibrary.wiley.com/doi/book/10.1002/9780470258019","code":""},{"path":"https://mlr3proba.mlr-org.com/reference/whas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Worcester Heart Attack Study (WHAS) Dataset — whas","text":"Hosmer, D.W. Lemeshow, S. May, S. (2008) Applied Survival Analysis: Regression Modeling Time Event Data: Second Edition, John Wiley Sons Inc., New York, NY","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-075","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.5","title":"mlr3proba 0.7.5","text":"fix: allow cloning measures objects New PipeOps: PipeOpTaskSurvRegrPEM, PipeOpPredRegrPEM New pipeline (reduction method): pipeline_survtoregr_pem","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-074","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.4","title":"mlr3proba 0.7.4","text":"fix + update MeasureSurv: survival measure labels now printed obs_loss property now supported feat: add na.rm parameter msr(\"surv.calib_index\") avoid NaN scores","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-073","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.3","title":"mlr3proba 0.7.3","text":"feat: added new calibration measure => msr(\"surv.calib_index\") default \"calib\" plot uses survival matrix directly now faster \"dcalib\" extra barplot + better documentation Added new type = \"scalib\" constructs smoothed calibration plots Austin et al. (2020) BREAKING CHANGE: \"preds\" now called \"isd\" (individual survival distribution). row_ids can now used filter observations draw survival curves.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-072","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.2","title":"mlr3proba 0.7.2","text":"fix: lrn(\"surv.coxph\") now trained model=TRUE fixes issue using observation weights stackoverflow link. cleanup: remove tsk(\"unemployment\") associated files cleanup: remove unused references","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-071","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.1","title":"mlr3proba 0.7.1","text":"cleanup: removed PipeOps pipelines related survival => regression reduction techniques (see #414) fix: $predict_type survtoclassif_disctime survtoclassif_IPCW prob (classification type) crank (survival type) fix: G(t) filtered t_max|p_max specified scoring rules (didn’t influence evaluation ) docs: Clarified use impact using t_max scoring rules, added examples scoring rules AUC scores feat: Added new argument remove_obs scoring rules remove observations observed time t > t_max processing step alleviate IPCW issues. ‘hard-coded’ made Integrated Brier Score (msr(\"surv.graf\")) differ minimally implementations original definition.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-070","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.7.0","title":"mlr3proba 0.7.0","text":"Add mlr3pipelines Imports set minimum latest version CRAN (0.7.0) Refactor code minimize namespace calling imports mlr3pipelines:: R6:: Doc updates: add experimental badge PipeOps + add references others Add argument scale_lp AFT distrcompose pipeop + respective pipeline","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-069","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.9","title":"mlr3proba 0.6.9","text":"New PipeOps: PipeOpTaskSurvClassifIPCW, PipeOpPredClassifSurvIPCW New pipeline (reduction method): pipeline_survtoclassif_IPCW Improved way Integrated Brier score handles times argument t_max, especially survival matrix one time point (column) Improved documentation integrated survival scores Improved documentation pipelines Temp fix math-rendering issue package website Add experimental lifecycle badge 3 pipelines (survtoregr, distrcompositor probregr) - currently either supported literature tested enough.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-068","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.8","title":"mlr3proba 0.6.8","text":"Rcpp code optimizations Fixed ERV scoring comply mlr3 dev version (bugs ) Skipping survtoregr pipelines due bugs (refactored future)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-067","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.7","title":"mlr3proba 0.6.7","text":"Deprecate crank distr composition distrcompose pipeop (lp => distr works now) Add get_mortality() function (survivalmodels::surv_to_risk() Add Rcpp function assert_surv_matrix() Update simplify crankcompose pipeop respective pipeline (response created anymore) Add responsecompositor pipeline rmst median","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-066","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.6","title":"mlr3proba 0.6.6","text":"Small fixes refactoring discrete-time pipeops","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-065","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.5","title":"mlr3proba 0.6.5","text":"Add support discrete-time survival analysis New PipeOps: PipeOpTaskSurvClassifDiscTime, PipeOpPredClassifSurvDiscTime New pipeline (reduction method): pipeline_survtoclassif_disctime","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-064","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.4","title":"mlr3proba 0.6.4","text":"Add useR! 2024 tutorial Lots refactoring, improving code quality, migration testthat v3, etc. (thanks @m-muecke)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-063","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.3","title":"mlr3proba 0.6.3","text":"Refined docs loaded tasks, task$help() works now loaded tasks now complete cases (features missing values) Refined docs task generators Added task generator coxed package Added new methods TaskSurv: cens_prop(), admin_cens_prop(), dep_cens_prop() prop_haz()","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-062","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.2","title":"mlr3proba 0.6.2","text":"added p_max (surv.graf) refactor cutoff t_max","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-061","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.1","title":"mlr3proba 0.6.1","text":"Compatibility upcoming ‘paradox’ release. Fix bug applying t_max surv.graf similar time-integrated scores.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-060","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.6.0","title":"mlr3proba 0.6.0","text":"Optimized surv.logloss calib_alpha measures (bypassing distr6) Update/refine measure docs (naming conventions upcoming scoring rules paper) + doc templates fix rare bugs calib_alpha, surv.logloss surv.graf (version proper = FALSE)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-059","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.9","title":"mlr3proba 0.5.9","text":"Fix several old issues (#348, #301, #281) distrcompositor crankcompositor deprecated functions completely removed","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-058","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.8","title":"mlr3proba 0.5.8","text":"Fix Breslow issues (phash warning Inf lp predictions)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-057","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.7","title":"mlr3proba 0.5.7","text":"Add breslow function estimating cumulative baseline hazard proportional hazard models Add PipeOpBreslow wrap survival learner generate distr predictions lp predictions Add option breslow estimator option distrcompositor","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-056","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.6","title":"mlr3proba 0.5.6","text":"Add extend_quantile autoplot.PredictionSurv type = \"dcalib\", imputes NAs maximum observed survival time Fixes default autoplot.PredictionSurv, now \"calib\" Update msr(\"surv.dcalib\") default truncate Inf","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-055","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.5","title":"mlr3proba 0.5.5","text":"Add $reverse() method TaskSurv, returns task 1-status. Add reverse parameter TaskSurv$kaplan() method, calculates Kaplan-Meier censoring distribution task (1-status).","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-054","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.4","title":"mlr3proba 0.5.4","text":"Fix bottlenecks Dcalib RCLL","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-053","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.3","title":"mlr3proba 0.5.3","text":"Add support learners can predict multiple posterior distributions using distr6::Arrdist","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-052","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.2","title":"mlr3proba 0.5.2","text":"Add plot_probregr plotting probabilistic regression distribution predictions Fix big bug surv.rcll creating erroneous results distributions subsetted correctly","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-051","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.1","title":"mlr3proba 0.5.1","text":"Add regr.logloss","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-050","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.5.0","title":"mlr3proba 0.5.0","text":"Possibly small breaking change, renamed PipeOpProbregrCompositor PipeOpProbregr default distribution now \"Uniform\". Renamed probregrcompositor pipeline probregr default distribution now \"Uniform\". Bumped minor version highlight fixes measures Bugfix setting Uno’s AUC parameters Bugfix RCLL censoring Bugfix learners making single predictions","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0417","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.17","title":"mlr3proba 0.4.17","text":"Fix bug surv.rcll individual scores NA.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0416","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.16","title":"mlr3proba 0.4.16","text":"Remove theme_mlr3 plots. Fix bug surv.logloss using IPCW = TRUE","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0415","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.15","title":"mlr3proba 0.4.15","text":"Fix bug surv.cindex caused probability censoring 0. Added eps parameter control .","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0414","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.14","title":"mlr3proba 0.4.14","text":"Fix bug converting distr6 distributions matrices creating PredictionSurv Fix bug RCLL","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0413","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.13","title":"mlr3proba 0.4.13","text":"Fix minor bug ‘SG’ cindex method","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0412","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.12","title":"mlr3proba 0.4.12","text":"Fix bug survavg pipeline causing unequal weights applied","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0411","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.11","title":"mlr3proba 0.4.11","text":"Fix minor bug scoring rules","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-0410","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.10","title":"mlr3proba 0.4.10","text":"Added ERV parameter scoring rule measures return interpretable scoring rules. Explained Residual Variation percentage decrease scoring rule comparing Kaplan-Meier baseline learner interest.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-049","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.9","title":"mlr3proba 0.4.9","text":"CRAN release: 2022-04-25 Fixed bug surv.logloss causing IPCW weighting applied correctly","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-048","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.8","title":"mlr3proba 0.4.8","text":"Bug fixes AUC measures","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-047","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.7","title":"mlr3proba 0.4.7","text":"Add right-censored log loss Fix bug {rpart} model discarded set kept. Parameter model now called keep_model.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-046","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.6","title":"mlr3proba 0.4.6","text":"Patch upstream breakages Add TaskSurv$kaplan method {survivalmodels} now imported (previously suggested)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-045","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.5","title":"mlr3proba 0.4.5","text":"Improved reduction survival matrix predictions ranking predictions Fixed cindex bug predictions equal Fix valgrind","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-044","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.4","title":"mlr3proba 0.4.4","text":"CRAN release: 2022-02-16 Minor change distributions created better support improper distributions Fixed bug simsurv task made impossible predict target","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-043","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.3","title":"mlr3proba 0.4.3","text":"CRAN release: 2022-01-22 Massive speed-distrcompositor PipeOp/pipeline informative error given $distr called learner support return type Fix massive bottleneck scoring rule measures Add Density coercions as_task_dens as_prediction_dens Measures now use parameter sets like learners. streamlines interface unfortunately means ids can longer set dynamically. Add parameters t_max p_max Graf, Schmid Integrated Log-loss alternative times. t_max equivalent times = seq(t_max) p_max proportion censoring integrate dataset. Fix bug Rcpp code causing erroneous values calculating cindex datasets greater 20,000 observations.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-042","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.2","title":"mlr3proba 0.4.2","text":"CRAN release: 2021-10-22 Patch linux","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-041","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.1","title":"mlr3proba 0.4.1","text":"CRAN release: 2021-09-07 Remove mlr3extralearners Suggests Add response as_prediction_surv Now exported couple cpp functions assert_surv mlr3 now Depends imports distr predictions now internally stored matrices significantly reduce prediction object sizes Tasks now support strata property","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-040","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.4.0","title":"mlr3proba 0.4.0","text":"CRAN release: 2021-04-18 Deprecated measures 0.2.0 now deleted. IPCW measures surv.graf, surv.schmid, surv.intlogloss now allow training data passed score function task train_set allow censoring distribution estimated training data. automatically applied resample benchmark results. IPCW measures surv.graf, surv.schmid, surv.intlogloss now include parameter proper determine weighting scheme applied estimated censoring distribution, current method (Graf, 1999) proper = FALSE, weights observations either event time ‘current’ time depending ’re dead , new method proper = TRUE weights observations event time. proper = TRUE method strictly proper censoring survival times independent G estimated large enough data. proper = FALSE method never proper. default currently proper = FALSE enable backward compatibility, changed proper = TRUE v0.6.0. rm_cens parameter surv.logloss deprecated favour IPCW. rm_cens removed v0.6.0. rm_cens IPCW TRUE censored observations removed score weighted estimate censoring distribution individual event times. Otherwise rm_cens IPCW FALSE deletion weighting takes place. IPCW = TRUE method strictly proper censoring survival times independent G estimated large enough data. ipcw = FALSE method never proper. Add surv.dcalib D-Calibration measure Haider et al. (2020).","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-032","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.3.2","title":"mlr3proba 0.3.2","text":"CRAN release: 2021-03-15 Patched bug causing \"interval2\" task type work Fixed bug causing pipelines function correctly $aggregate","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-031","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.3.1","title":"mlr3proba 0.3.1","text":"CRAN release: 2021-02-03 Reverted removal \"interval2\"","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-030","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.3.0","title":"mlr3proba 0.3.0","text":"CRAN release: 2021-02-02 Commonly used survival quantities added active bindings TaskSurv including times (observed survival times), status (observed survival indicator), unique_times (set sorted unique outcome times), unique_event_times (set sorted unique failure times), risk_set (set observations alive ‘just ’ given time) \"interval2\" censoring type removed TaskSurv covered types Default values now given time event arguments TaskSurv PredictionDens can now include distr return type (equivalent learner$model)","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-026","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.6","title":"mlr3proba 0.2.6","text":"CRAN release: 2020-12-04 Minor internal fixes","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-025","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.5","title":"mlr3proba 0.2.5","text":"CRAN release: 2020-11-18 PipeOpCrankCompositor updated fix bottleneck computation via mean. Now Inf NA replaced 0 response imputed median crank Bug distr predict types fixed lead fitting degenerate distributions returning incorrect values mean survival time crank","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-024","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.4","title":"mlr3proba 0.2.4","text":"CRAN release: 2020-11-11 CRITICAL BUG FIX - compose_crank previously returning ranks reverse ordering higher ranks implied higher risk lower.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-023","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.3","title":"mlr3proba 0.2.3","text":"CRAN release: 2020-11-01 learners previously lived mlr3learners organisation now mlr3extralearners repository. Fixed bottleneck MeasureSurvLogloss Bugfix MeasureSurvCalibrationAlpha Patch valgrind TaskDens now inherits TaskUnsupervised means target/truth removed. specification target column required, instead one-column matrix-like object numeric vector passed task backend density estimated column, two columns one set weight. Fixed bug load_eruption fix name data columns Added calibration plot comparing average predicted survival distribution Kaplan-Meier mlr3viz Removed unneccessary pracma dependency learners Fix PipeOpDistrCompositor, previously base distribution using first predicted distribution, now baseline taken averaging predictions uniform weights","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-022","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.2","title":"mlr3proba 0.2.2","text":"CRAN release: 2020-09-23 Default kernel LearnerDensityKDE now Epan reduce imports Minor internal patches mlr3 0.6.0 Bug fix MeasureSurvCalibrationBeta now returns NA error lp predict type available","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-021","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.1","title":"mlr3proba 0.2.1","text":"CRAN release: 2020-08-28 Removed PredictionRegr causing masking issues mlr3 Bug fix PipeOpDistrCompositor causing cdf predictions lost Internal fixes mlr3pipelines: public train predict methods private Added four datasets tasks: grace, actg, gbcs, whas Add overwrite crankcompositor pipeop pipeline Bug fix surv.kaplan crank prediction","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-020","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.2.0","title":"mlr3proba 0.2.0","text":"CRAN release: 2020-07-25","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"added-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Added Functionality","title":"mlr3proba 0.2.0","text":"MeasureSurvCindex added. Generalises c-index measures fast C++ implementation Akritas estimator added mlr3learners/mlr3learners.proba Added scoring rule MeasureSurvSchmid Addd calibration measures MeasureSurvCalibrationBeta MeasureSurvCalibrationAlpha surv.brier alias added surv.graf response parameter added PipeOpCrankCompositor crankcompositor now optionally fill response predict type values crank Added PipeOpProbregrCompostior compose_probregr composition distr return type () regression learner(s) predicting response se Added PipeOpSurvAvg surv_averager pipeline weighted model averaging distr, lp, crank, response predictions.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"deprecated-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Deprecated Functionality","title":"mlr3proba 0.2.0","text":"following measures deprecated use MeasureSurvCindex instead following parameters: MeasureSurvBeggC, use defaults; MeasureSurvHarrellC, use defaults; MeasureSurvUnoC, use weight_meth = 'G/2'; MeasureSurvGonenC, use weight_method = 'GH' MeasureSurvGrafSE, MeasureSurvLoglossSE, MeasureSurvIntLoglossSE, MeasureSurvRMSESE, MeasureSurvMSESE, MeasureSurvMAESE deprecated deleted v0.4.0. Use msr(\"surv.graf\", se = TRUE) instead (example). Measures renamed surv.nagelkR2 now surv.nagelk_r2, analogously R2, AUC, TPR, TNR measures. Old constructors deleted v0.4.0. Renamed distrcompose crankcompose distr_compose crank_compose. Old ids deleted v0.4.0.","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"edited-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Edited Functionality","title":"mlr3proba 0.2.0","text":"Measures renamed surv.nagelkR2 now surv.nagelk_r2, analogously R2, AUC, TPR, TNR measures. Old constructors deleted v0.4.0. MeasureSurvGraf MeasureSurvIntLogloss now much faster C++ implementation","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"moved-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Moved Functionality","title":"mlr3proba 0.2.0","text":"LearnerSurvGlmnet, LearnerSurvCVGlmnet, LearnerSurvXgboost LearnerSurvRanger moved mlr-org/mlr3learners LearnerSurvGBM moved https://www.github.com/mlr3learners/mlr3learners.gbm LearnerSurvMboost, LearnerSurvGlmBoost, LearnerSurvGamboost, LearnerSurvBlackboost moved https://www.github.com/mlr3learners/mlr3learners.mboost","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-016","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.6","title":"mlr3proba 0.1.6","text":"CRAN release: 2020-06-05 Early release due backward compatibility error introduced upstream dependency Minor updates mboost family learners: added gehan family, fixed parameters cindex, added support : weights, response predict type, importance, selected_features Minor internal changes density learners except LearnerDensHist LearnerDensKDE moved mlr3learners org following survival learners moved mlr3learners org, LearnerSurv: Flexible, ObliqueRSF, Penalized, RandomForestSRC Bugfix LearnerSurvXgboost previously lp erroneously returned exp(lp) Now licenced LPGL-3","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-015","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.5","title":"mlr3proba 0.1.5","text":"CRAN release: 2020-04-16 LearnerSurvParametric LearnerSurvNelson moved mlr3learners/mlr3learners.survival repo LearnerSurvCoxboost LearnerSurvCVCoxboost moved mlr3learners/mlr3learners.coxboost repo LearnerSurvSVM moved mlr3learners/mlr3learners.survivalsvm repo next release, learners except LearnerSurvKaplan, LearnerSurvCoxPH, LearnerDensHist moved mlr3learners org Minor internal changes","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-014","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.4","title":"mlr3proba 0.1.4","text":"CRAN release: 2020-03-20 Density estimation now added mlr3proba, see TaskDens, LearnerDens, PredictionDens, MeasureDens. Added mlr_tasks_faithful mlr_tasks_precip density task examples Added mlr_task_generators_simdens generating density tasks Added learners density estimation, see mlr3::mlr_learners$keys(\"^dens\") full list line mlr3 0.1.7, public methods train_internal, predict_internal, score_internal now private methods .train,.predict,.score Converted roxygen2 R6 documentation","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-013","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.3","title":"mlr3proba 0.1.3","text":"CRAN release: 2020-02-20 Changed lp surv.parametric include intercept, line survival::survreg. Now exp(pred$lp) equal predicted survival time AFTs Moved mboost suggests Added response predict type, predicts time event. Currently supported AFT models surv.parametric Added measures response predict type: MeasureSurvMAE, MeasureSurvMAESE, MeasureSurvMSE, MeasureSurvMSESE, MeasureSurvRMSE, MeasureSurvRMSESE","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-012","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.2","title":"mlr3proba 0.1.2","text":"CRAN release: 2020-01-31 Fixed error r-patched-solaris Added mode option crankcompositor Fixes bug resulting R62S3 incompatibility","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-011","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.1","title":"mlr3proba 0.1.1","text":"CRAN release: 2020-01-08 Added method argument integrated scores added weighting bin-width Added notes IGS documentation regarding default methods comparison packages Added method MeasureSurvIntegrated constructor fields Fixed mistake documentation : TaskSurv, MeasureSurvUnoC Added missing LearnerSurvRpart parameter parms cost Fixed errors r-patched-solaris r-devel debian-clang","code":""},{"path":"https://mlr3proba.mlr-org.com/news/index.html","id":"mlr3proba-010","dir":"Changelog","previous_headings":"","what":"mlr3proba 0.1.0","title":"mlr3proba 0.1.0","text":"CRAN release: 2019-12-22 Initial upload CRAN.","code":""}]
